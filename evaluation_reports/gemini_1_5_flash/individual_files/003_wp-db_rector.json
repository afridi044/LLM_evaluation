{
  "file_path": "new-version\\gemini_1_5_flash\\003_wp-db.php",
  "rector_analysis": {
    "php_version_changes": 12,
    "rules_triggered": [
      "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
      "Rector\\Php53\\Rector\\Ternary\\TernaryToElvisRector",
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php55\\Rector\\Class_\\ClassConstantToSelfClassRector",
      "Rector\\Php80\\Rector\\ClassConstFetch\\ClassOnThisVariableObjectRector",
      "Rector\\Php80\\Rector\\Class_\\ClassPropertyAssignToConstructorPromotionRector",
      "Rector\\Php80\\Rector\\FuncCall\\ClassOnObjectRector",
      "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
      "Rector\\Php80\\Rector\\NotIdentical\\StrContainsRector",
      "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
      "Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_52": 1,
      "php_53": 1,
      "php_54": 1,
      "php_55": 1,
      "php_80": 6,
      "php_81": 2
    },
    "has_diff": true,
    "diff_line_count": 469
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-09-03T18:28:35.650253",
    "file_size_kb": 61.4,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "new-version/gemini_1_5_flash/003_wp-db.php",
        "diff": "--- Original\n+++ New\n@@ -1,3 +1,3 @@\n <?php\r\n /**\r\n  * WordPress DB Class\r\n@@ -61,7 +61,7 @@\n \t * @access private\r\n \t * @var bool\r\n \t */\r\n-\tvar $show_errors = false;\r\n+\tpublic $show_errors = false;\r\n \r\n \t/**\r\n \t * Whether to suppress errors during the DB bootstrapping.\r\n@@ -70,7 +70,7 @@\n \t * @since 2.5.0\r\n \t * @var bool\r\n \t */\r\n-\tvar $suppress_errors = false;\r\n+\tpublic $suppress_errors = false;\r\n \r\n \t/**\r\n \t * The last error during query.\r\n@@ -87,7 +87,7 @@\n \t * @access private\r\n \t * @var int\r\n \t */\r\n-\tvar $num_queries = 0;\r\n+\tpublic $num_queries = 0;\r\n \r\n \t/**\r\n \t * Count of rows returned by previous query\r\n@@ -96,7 +96,7 @@\n \t * @access private\r\n \t * @var int\r\n \t */\r\n-\tvar $num_rows = 0;\r\n+\tpublic $num_rows = 0;\r\n \r\n \t/**\r\n \t * Count of affected rows by previous query\r\n@@ -105,7 +105,7 @@\n \t * @access private\r\n \t * @var int\r\n \t */\r\n-\tvar $rows_affected = 0;\r\n+\tpublic $rows_affected = 0;\r\n \r\n \t/**\r\n \t * The ID generated for an AUTO_INCREMENT column by the previous query (usually INSERT).\r\n@@ -114,7 +114,7 @@\n \t * @access public\r\n \t * @var int\r\n \t */\r\n-\tvar $insert_id = 0;\r\n+\tpublic $insert_id = 0;\r\n \r\n \t/**\r\n \t * Last query made\r\n@@ -123,7 +123,7 @@\n \t * @access private\r\n \t * @var array\r\n \t */\r\n-\tvar $last_query;\r\n+\tpublic $last_query;\r\n \r\n \t/**\r\n \t * Results of the last query made\r\n@@ -132,7 +132,7 @@\n \t * @access private\r\n \t * @var array|null\r\n \t */\r\n-\tvar $last_result;\r\n+\tpublic $last_result;\r\n \r\n \t/**\r\n \t * MySQL result, which is either a resource or boolean.\r\n@@ -159,7 +159,7 @@\n \t * @access private\r\n \t * @var array\r\n \t */\r\n-\tvar $queries;\r\n+\tpublic $queries;\r\n \r\n \t/**\r\n \t * The number of times to retry reconnecting before dying.\r\n@@ -182,7 +182,7 @@\n \t * @access private\r\n \t * @var string\r\n \t */\r\n-\tvar $prefix = '';\r\n+\tpublic $prefix = '';\r\n \r\n \t/**\r\n \t * WordPress base table prefix.\r\n@@ -200,7 +200,7 @@\n \t * @access private\r\n \t * @var bool\r\n \t */\r\n-\tvar $ready = false;\r\n+\tpublic $ready = false;\r\n \r\n \t/**\r\n \t * {@internal Missing Description}}\r\n@@ -228,8 +228,8 @@\n \t * @see wpdb::tables()\r\n \t * @var array\r\n \t */\r\n-\tvar $tables = array( 'posts', 'comments', 'links', 'options', 'postmeta',\r\n-\t\t'terms', 'term_taxonomy', 'term_relationships', 'commentmeta' );\r\n+\tpublic $tables = [ 'posts', 'comments', 'links', 'options', 'postmeta',\r\n+\t\t'terms', 'term_taxonomy', 'term_relationships', 'commentmeta' ];\r\n \r\n \t/**\r\n \t * List of deprecated WordPress tables\r\n@@ -241,7 +241,7 @@\n \t * @see wpdb::tables()\r\n \t * @var array\r\n \t */\r\n-\tvar $old_tables = array( 'categories', 'post2cat', 'link2cat' );\r\n+\tpublic $old_tables = [ 'categories', 'post2cat', 'link2cat' ];\r\n \r\n \t/**\r\n \t * List of WordPress global tables\r\n@@ -251,7 +251,7 @@\n \t * @see wpdb::tables()\r\n \t * @var array\r\n \t */\r\n-\tvar $global_tables = array( 'users', 'usermeta' );\r\n+\tpublic $global_tables = [ 'users', 'usermeta' ];\r\n \r\n \t/**\r\n \t * List of Multisite global tables\r\n@@ -261,8 +261,8 @@\n \t * @see wpdb::tables()\r\n \t * @var array\r\n \t */\r\n-\tvar $ms_global_tables = array( 'blogs', 'signups', 'site', 'sitemeta',\r\n-\t\t'sitecategories', 'registration_log', 'blog_versions' );\r\n+\tpublic $ms_global_tables = [ 'blogs', 'signups', 'site', 'sitemeta',\r\n+\t\t'sitecategories', 'registration_log', 'blog_versions' ];\r\n \r\n \t/**\r\n \t * WordPress Comments table\r\n@@ -444,7 +444,7 @@\n \t * @access public\r\n \t * @var array\r\n \t */\r\n-\tpublic $field_types = array();\r\n+\tpublic $field_types = [];\r\n \r\n \t/**\r\n \t * Database table columns charset\r\n@@ -465,41 +465,6 @@\n \tpublic $collate;\r\n \r\n \t/**\r\n-\t * Database Username\r\n-\t *\r\n-\t * @since 2.9.0\r\n-\t * @access protected\r\n-\t * @var string\r\n-\t */\r\n-\tprotected $dbuser;\r\n-\r\n-\t/**\r\n-\t * Database Password\r\n-\t *\r\n-\t * @since 3.1.0\r\n-\t * @access protected\r\n-\t * @var string\r\n-\t */\r\n-\tprotected $dbpassword;\r\n-\r\n-\t/**\r\n-\t * Database Name\r\n-\t *\r\n-\t * @since 3.1.0\r\n-\t * @access protected\r\n-\t * @var string\r\n-\t */\r\n-\tprotected $dbname;\r\n-\r\n-\t/**\r\n-\t * Database Host\r\n-\t *\r\n-\t * @since 3.1.0\r\n-\t * @access protected\r\n-\t * @var string\r\n-\t */protected $dbhost;\r\n-\r\n-\t/**\r\n \t * Database Handle\r\n \t *\r\n \t * @since 0.71\r\n@@ -538,8 +503,8 @@\n \t * @access protected\r\n \t * @var array\r\n \t */\r\n-\tprotected $incompatible_modes = array( 'NO_ZERO_DATE', 'ONLY_FULL_GROUP_BY',\r\n-\t\t'STRICT_TRANS_TABLES', 'STRICT_ALL_TABLES', 'TRADITIONAL' );\r\n+\tprotected $incompatible_modes = [ 'NO_ZERO_DATE', 'ONLY_FULL_GROUP_BY',\r\n+\t\t'STRICT_TRANS_TABLES', 'STRICT_ALL_TABLES', 'TRADITIONAL' ];\r\n \r\n \t/**\r\n \t * Whether to use mysqli over mysql.\r\n@@ -574,8 +539,32 @@\n \t * @param string $dbname MySQL database name\r\n \t * @param string $dbhost MySQL database host\r\n \t */\r\n-\tpublic function __construct( $dbuser, $dbpassword, $dbname, $dbhost ) {\r\n-\t\tregister_shutdown_function( array( $this, '__destruct' ) );\r\n+\tpublic function __construct( /**\n+     * Database Username\n+     *\n+     * @since 2.9.0\n+     * @access protected\n+     */\n+    protected $dbuser, /**\n+     * Database Password\n+     *\n+     * @since 3.1.0\n+     * @access protected\n+     */\n+    protected $dbpassword, /**\n+     * Database Name\n+     *\n+     * @since 3.1.0\n+     * @access protected\n+     */\n+    protected $dbname, /**\n+     * Database Host\n+     *\n+     * @since 3.1.0\n+     * @access protected\n+     */\n+    protected $dbhost ) {\r\n+\t\tregister_shutdown_function( [ $this, '__destruct' ] );\r\n \r\n \t\tif ( WP_DEBUG && WP_DEBUG_DISPLAY )\r\n \t\t\t$this->show_errors();\r\n@@ -591,7 +580,7 @@\n \t\t\t\t$this->use_mysqli = ! WP_USE_EXT_MYSQL;\r\n \t\t\t} elseif ( version_compare( phpversion(), '5.5', '>=' ) || ! function_exists( 'mysql_connect' ) ) {\r\n \t\t\t\t$this->use_mysqli = true;\r\n-\t\t\t} elseif ( false !== strpos( $GLOBALS['wp_version'], '-' ) ) {\r\n+\t\t\t} elseif ( str_contains( (string) $GLOBALS['wp_version'], '-' ) ) {\r\n \t\t\t\t$this->use_mysqli = true;\r\n \t\t\t}\r\n \t\t}\r\n@@ -598,11 +587,6 @@\n \r\n \t\t$this->init_charset();\r\n \r\n-\t\t$this->dbuser = $dbuser;\r\n-\t\t$this->dbpassword = $dbpassword;\r\n-\t\t$this->dbname = $dbname;\r\n-\t\t$this->dbhost = $dbhost;\r\n-\r\n \t\t// wp-config.php creation will manually connect when ready.\r\n \t\tif ( defined( 'WP_SETUP_CONFIG' ) ) {\r\n \t\t\treturn;\r\n@@ -740,7 +724,7 @@\n \t *\r\n \t * @param array $modes Optional. A list of SQL modes to set.\r\n \t */\r\n-\tpublic function set_sql_mode( $modes = array() ) {\r\n+\tpublic function set_sql_mode( $modes = [] ) {\r\n \t\tif ( empty( $modes ) ) {\r\n \t\t\tif ( $this->use_mysqli ) {\r\n \t\t\t\t$res = mysqli_query( $this->dbh, 'SELECT @@SESSION.sql_mode' );\r\n@@ -935,7 +919,7 @@\n \t\t\t\t$tables = $this->old_tables;\r\n \t\t\t\tbreak;\r\n \t\t\tdefault :\r\n-\t\t\t\treturn array();\r\n+\t\t\t\treturn [];\r\n \t\t}\r\n \r\n \t\tif ( $prefix ) {\r\n@@ -1038,7 +1022,7 @@\n \t\t\t}\r\n \t\t}\r\n \r\n-\t\t$class = get_class( $this );\r\n+\t\t$class = static::class;\r\n \t\t_doing_it_wrong( $class, \"$class must set a database connection for use with escaping.\", E_USER_NOTICE );\r\n \t\treturn addslashes( $string );\r\n \t}\r\n@@ -1153,7 +1137,7 @@\n \t\t\treturn;\r\n \r\n \t\t// This is not meant to be foolproof -- but it will catch obviously incorrect usage.\r\n-\t\tif ( strpos( $query, '%' ) === false ) {\r\n+\t\tif ( !str_contains( $query, '%' ) ) {\r\n \t\t\t_doing_it_wrong( 'wpdb::prepare', sprintf( __( 'The query argument of %s must have a placeholder.' ), 'wpdb::prepare()' ), '3.9' );\r\n \t\t}\r\n \r\n@@ -1165,8 +1149,8 @@\n \t\t$query = str_replace( \"'%s'\", '%s', $query ); // in case someone mistakenly already singlequoted it\r\n \t\t$query = str_replace( '\"%s\"', '%s', $query ); // doublequote unquoting\r\n \t\t$query = preg_replace( '|(?<!%)%f|' , '%F', $query ); // Force floats to be locale unaware\r\n-\t\t$query = preg_replace( '|(?<!%)%s|', \"'%s'\", $query ); // quote the strings, avoiding escaped strings like %%s\r\n-\t\tarray_walk( $args, array( $this, 'escape_by_ref' ) );\r\n+\t\t$query = preg_replace( '|(?<!%)%s|', \"'%s'\", (string) $query ); // quote the strings, avoiding escaped strings like %%s\r\n+\t\tarray_walk( $args, $this->escape_by_ref(...) );\r\n \t\treturn @vsprintf( $query, $args );\r\n \t}\r\n \r\n@@ -1215,7 +1199,7 @@\n \t\t\t\t$str = mysql_error( $this->dbh );\r\n \t\t\t}\r\n \t\t}\r\n-\t\t$EZSQL_ERROR[] = array( 'query' => $this->last_query, 'error_str' => $str );\r\n+\t\t$EZSQL_ERROR[] = [ 'query' => $this->last_query, 'error_str' => $str ];\r\n \r\n \t\tif ( $this->suppress_errors )\r\n \t\t\treturn false;\r\n@@ -1241,7 +1225,7 @@\n \t\t\tif ( defined( 'DIEONDBERROR' ) )\r\n \t\t\t\twp_die( $msg );\r\n \t\t} else {\r\n-\t\t\t$str   = htmlspecialchars( $str, ENT_QUOTES );\r\n+\t\t\t$str   = htmlspecialchars( (string) $str, ENT_QUOTES );\r\n \t\t\t$query = htmlspecialchars( $this->last_query, ENT_QUOTES );\r\n \r\n \t\t\tprint \"<div id='error'>\r\n@@ -1311,7 +1295,7 @@\n \t * @return void\r\n \t */\r\n \tpublic function flush() {\r\n-\t\t$this->last_result = array();\r\n+\t\t$this->last_result = [];\r\n \t\t$this->col_info    = null;\r\n \t\t$this->last_query  = null;\r\n \t\t$this->rows_affected = $this->num_rows = 0;\r\n@@ -1361,7 +1345,7 @@\n \t\t\tif ( ! empty( $port_or_socket ) ) {\r\n \t\t\t\t$host = substr( $host, 0, strpos( $host, ':' ) );\r\n \t\t\t\t$port_or_socket = substr( $port_or_socket, 1 );\r\n-\t\t\t\tif ( 0 !== strpos( $port_or_socket, '/' ) ) {\r\n+\t\t\t\tif ( !str_starts_with($port_or_socket, '/') ) {\r\n \t\t\t\t\t$port = intval( $port_or_socket );\r\n \t\t\t\t\t$maybe_socket = strstr( $port_or_socket, ':' );\r\n \t\t\t\t\tif ( ! empty( $maybe_socket ) ) {\r\n@@ -1652,7 +1636,7 @@\n \t\t$this->num_queries++;\r\n \r\n \t\tif ( defined( 'SAVEQUERIES' ) && SAVEQUERIES ) {\r\n-\t\t\t$this->queries[] = array( $query, $this->timer_stop(), $this->get_caller() );\r\n+\t\t\t$this->queries[] = [ $query, $this->timer_stop(), $this->get_caller() ];\r\n \t\t}\r\n \t}\r\n \r\n@@ -1721,12 +1705,12 @@\n \t * @return int|false The number of rows affected, or false on error.\r\n \t */\r\n \tfunction _insert_replace_helper( $table, $data, $format = null, $type = 'INSERT' ) {\r\n-\t\tif ( ! in_array( strtoupper( $type ), array( 'REPLACE', 'INSERT' ) ) )\r\n+\t\tif ( ! in_array( strtoupper( $type ), [ 'REPLACE', 'INSERT' ] ) )\r\n \t\t\treturn false;\r\n \t\t$this->insert_id = 0;\r\n \t\t$formats = $format = (array) $format;\r\n \t\t$fields = array_keys( $data );\r\n-\t\t$formatted_fields = array();\r\n+\t\t$formatted_fields = [];\r\n \t\tforeach ( $fields as $field ) {\r\n \t\t\tif ( !empty( $format ) )\r\n \t\t\t\t$form = ( $form = array_shift( $formats ) ) ? $form : $format[0];\r\n@@ -1766,7 +1750,7 @@\n \t\t\treturn false;\r\n \r\n \t\t$formats = $format = (array) $format;\r\n-\t\t$bits = $wheres = array();\r\n+\t\t$bits = $wheres = [];\r\n \t\tforeach ( (array) array_keys( $data ) as $field ) {\r\n \t\t\tif ( !empty( $format ) )\r\n \t\t\t\t$form = ( $form = array_shift( $formats ) ) ? $form : $format[0];\r\n@@ -1814,7 +1798,7 @@\n \t\tif ( ! is_array( $where ) )\r\n \t\t\treturn false;\r\n \r\n-\t\t$wheres = array();\r\n+\t\t$wheres = [];\r\n \r\n \t\t$where_formats = $where_format = (array) $where_format;\r\n \r\n@@ -1887,7 +1871,7 @@\n \t\t\treturn null;\r\n \r\n \t\tif ( $output == OBJECT ) {\r\n-\t\t\treturn $this->last_result[$y] ? $this->last_result[$y] : null;\r\n+\t\t\treturn $this->last_result[$y] ?: null;\r\n \t\t} elseif ( $output == ARRAY_A ) {\r\n \t\t\treturn $this->last_result[$y] ? get_object_vars( $this->last_result[$y] ) : null;\r\n \t\t} elseif ( $output == ARRAY_N ) {\r\n@@ -1894,7 +1878,7 @@\n \t\t\treturn $this->last_result[$y] ? array_values( get_object_vars( $this->last_result[$y] ) ) : null;\r\n \t\t} elseif ( strtoupper( $output ) === OBJECT ) {\r\n \t\t\t// Back compat for OBJECT being previously case insensitive.\r\n-\t\t\treturn $this->last_result[$y] ? $this->last_result[$y] : null;\r\n+\t\t\treturn $this->last_result[$y] ?: null;\r\n \t\t} else {\r\n \t\t\t$this->print_error( \" \\$db->get_row(string query, output type, int offset) -- Output type must be one of: OBJECT, ARRAY_A, ARRAY_N\" );\r\n \t\t}\r\n@@ -1917,7 +1901,7 @@\n \t\tif ( $query )\r\n \t\t\t$this->query( $query );\r\n \r\n-\t\t$new_array = array();\r\n+\t\t$new_array = [];\r\n \t\t// Extract the column values\r\n \t\tfor ( $i = 0, $j = count( $this->last_result ); $i < $j; $i++ ) {\r\n \t\t\t$new_array[$i] = $this->get_var( null, $x, $i );\r\n@@ -1946,7 +1930,7 @@\n \t\telse\r\n \t\t\treturn null;\r\n \r\n-\t\t$new_array = array();\r\n+\t\t$new_array = [];\r\n \t\tif ( $output == OBJECT ) {\r\n \t\t\t// Return an integer-keyed array of row objects\r\n \t\t\treturn $this->last_result;\r\n@@ -2018,7 +2002,7 @@\n \t\tif ( $this->col_info ) {\r\n \t\t\tif ( $col_offset == -1 ) {\r\n \t\t\t\t$i = 0;\r\n-\t\t\t\t$new_array = array();\r\n+\t\t\t\t$new_array = [];\r\n \t\t\t\tforeach( (array) $this->col_info as $col ) {\r\n \t\t\t\t\t$new_array[$i] = $col->{$info_type};\r\n \t\t\t\t\t$i++;\r\n@@ -2133,18 +2117,13 @@\n \t * @return bool\r\n \t */\r\n \tpublic function has_cap( $db_cap ) {\r\n-\t\t$version = $this->db_version();\r\n-\r\n-\t\tswitch ( strtolower( $db_cap ) ) {\r\n-\t\t\tcase 'collation' :    // @since 2.5.0\r\n-\t\t\tcase 'group_concat' : // @since 2.7.0\r\n-\t\t\tcase 'subqueries' :   // @since 2.7.0\r\n-\t\t\t\treturn version_compare( $version, '4.1', '>=' );\r\n-\t\t\tcase 'set_charset' :\r\n-\t\t\t\treturn version_compare( $version, '5.0.7', '>=' );\r\n-\t\t};\r\n-\r\n-\t\treturn false;\r\n+\t\t$version = $this->db_version();\n+        return match (strtolower( $db_cap )) {\n+            // @since 2.7.0\n+            'collation', 'group_concat', 'subqueries' => version_compare( $version, '4.1', '>=' ),\n+            'set_charset' => version_compare( $version, '5.0.7', '>=' ),\n+            default => false,\n+        };\r\n \t}\r\n \r\n \t/**\r\n@@ -2158,7 +2137,7 @@\n \t * @return string The name of the calling function\r\n \t */\r\n \tpublic function get_caller() {\r\n-\t\treturn wp_debug_backtrace_summary( __CLASS__ );\r\n+\t\treturn wp_debug_backtrace_summary( self::class );\r\n \t}\r\n \r\n \t/**\r\n",
        "applied_rectors": [
          "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
          "Rector\\Php53\\Rector\\Ternary\\TernaryToElvisRector",
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php55\\Rector\\Class_\\ClassConstantToSelfClassRector",
          "Rector\\Php80\\Rector\\ClassConstFetch\\ClassOnThisVariableObjectRector",
          "Rector\\Php80\\Rector\\Class_\\ClassPropertyAssignToConstructorPromotionRector",
          "Rector\\Php80\\Rector\\FuncCall\\ClassOnObjectRector",
          "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
          "Rector\\Php80\\Rector\\NotIdentical\\StrContainsRector",
          "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
          "Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "new-version/gemini_1_5_flash/003_wp-db.php"
    ]
  }
}