{
  "file_path": "selected_100_files\\medium_201_500\\016_module.audio.ac3.php",
  "rector_analysis": {
    "php_version_changes": 7,
    "rules_triggered": [
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php56\\Rector\\FuncCall\\PowToExpRector",
      "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
      "Rector\\Php74\\Rector\\ArrayDimFetch\\CurlyToSquareBracketArrayStringRector",
      "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
      "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_54": 1,
      "php_56": 1,
      "php_70": 1,
      "php_74": 1,
      "php_80": 2,
      "php_81": 1
    },
    "has_diff": true,
    "diff_line_count": 320
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:18:43.467036",
    "file_size_kb": 18.5,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/medium_201_500/016_module.audio.ac3.php",
        "diff": "--- Original\n+++ New\n@@ -16,7 +16,7 @@\n \n class getid3_ac3 extends getid3_handler\n {\n-    private $AC3header = array();\n+    private $AC3header = [];\n     private $BSIoffset = 0;\n \n     const syncword = \"\\x0B\\x77\";\n@@ -25,7 +25,7 @@\n \t\t$info = &$this->getid3->info;\n \n \t\t///AH\n-\t\t$info['ac3']['raw']['bsi'] = array();\n+\t\t$info['ac3']['raw']['bsi'] = [];\n \t\t$thisfile_ac3              = &$info['ac3'];\n \t\t$thisfile_ac3_raw          = &$thisfile_ac3['raw'];\n \t\t$thisfile_ac3_raw_bsi      = &$thisfile_ac3_raw['bsi'];\n@@ -56,13 +56,13 @@\n \t\t$this->fseek($info['avdataoffset']);\n \t\t$this->AC3header['syncinfo'] = $this->fread(5);\n \n-\t\tif (strpos($this->AC3header['syncinfo'], self::syncword) === 0) {\n+\t\tif (str_starts_with((string) $this->AC3header['syncinfo'], self::syncword)) {\n \t\t\t$thisfile_ac3_raw['synchinfo']['synchword'] = self::syncword;\n \t\t\t$offset = 2;\n \t\t} else {\n \t\t\tif (!$this->isDependencyFor('matroska')) {\n \t\t\t\tunset($info['fileformat'], $info['ac3']);\n-\t\t\t\treturn $this->error('Expecting \"'.getid3_lib::PrintHexBytes(self::syncword).'\" at offset '.$info['avdataoffset'].', found \"'.getid3_lib::PrintHexBytes(substr($this->AC3header['syncinfo'], 0, 2)).'\"');\n+\t\t\t\treturn $this->error('Expecting \"'.getid3_lib::PrintHexBytes(self::syncword).'\" at offset '.$info['avdataoffset'].', found \"'.getid3_lib::PrintHexBytes(substr((string) $this->AC3header['syncinfo'], 0, 2)).'\"');\n \t\t\t}\n \t\t\t$offset = 0;\n \t\t\t$this->fseek(-2, SEEK_CUR);\n@@ -72,8 +72,8 @@\n \t\t$info['audio']['bitrate_mode'] = 'cbr';\n \t\t$info['audio']['lossless']     = false;\n \n-\t\t$thisfile_ac3_raw['synchinfo']['crc1']       = getid3_lib::LittleEndian2Int(substr($this->AC3header['syncinfo'], $offset, 2));\n-\t\t$ac3_synchinfo_fscod_frmsizecod              = getid3_lib::LittleEndian2Int(substr($this->AC3header['syncinfo'], ($offset + 2), 1));\n+\t\t$thisfile_ac3_raw['synchinfo']['crc1']       = getid3_lib::LittleEndian2Int(substr((string) $this->AC3header['syncinfo'], $offset, 2));\n+\t\t$ac3_synchinfo_fscod_frmsizecod              = getid3_lib::LittleEndian2Int(substr((string) $this->AC3header['syncinfo'], ($offset + 2), 1));\n \t\t$thisfile_ac3_raw['synchinfo']['fscod']      = ($ac3_synchinfo_fscod_frmsizecod & 0xC0) >> 6;\n \t\t$thisfile_ac3_raw['synchinfo']['frmsizecod'] = ($ac3_synchinfo_fscod_frmsizecod & 0x3F);\n \n@@ -107,19 +107,11 @@\n \t\tforeach($ac3_coding_mode as $key => $value) {\n \t\t\t$thisfile_ac3[$key] = $value;\n \t\t}\n-\t\tswitch ($thisfile_ac3_raw_bsi['acmod']) {\n-\t\t\tcase 0:\n-\t\t\tcase 1:\n-\t\t\t\t$info['audio']['channelmode'] = 'mono';\n-\t\t\t\tbreak;\n-\t\t\tcase 3:\n-\t\t\tcase 4:\n-\t\t\t\t$info['audio']['channelmode'] = 'stereo';\n-\t\t\t\tbreak;\n-\t\t\tdefault:\n-\t\t\t\t$info['audio']['channelmode'] = 'surround';\n-\t\t\t\tbreak;\n-\t\t}\n+\t\t$info['audio']['channelmode'] = match ($thisfile_ac3_raw_bsi['acmod']) {\n+            0, 1 => 'mono',\n+            3, 4 => 'stereo',\n+            default => 'surround',\n+        };\n \t\t$info['audio']['channels'] = $thisfile_ac3['num_channels'];\n \n \t\tif ($thisfile_ac3_raw_bsi['acmod'] & 0x01) {\n@@ -226,7 +218,7 @@\n \n \t\t\t$this->AC3header['bsi'] .= getid3_lib::BigEndian2Bin($this->fread($thisfile_ac3_raw_bsi['addbsi_length']));\n \n-\t\t\t$thisfile_ac3_raw_bsi['addbsi_data'] = substr($this->AC3header['bsi'], $this->BSIoffset, $thisfile_ac3_raw_bsi['addbsi_length'] * 8);\n+\t\t\t$thisfile_ac3_raw_bsi['addbsi_data'] = substr((string) $this->AC3header['bsi'], $this->BSIoffset, $thisfile_ac3_raw_bsi['addbsi_length'] * 8);\n \t\t\t$this->BSIoffset += $thisfile_ac3_raw_bsi['addbsi_length'] * 8;\n \t\t}\n \n@@ -234,7 +226,7 @@\n \t}\n \n \tprivate function readHeaderBSI($length) {\n-\t\t$data = substr($this->AC3header['bsi'], $this->BSIoffset, $length);\n+\t\t$data = substr((string) $this->AC3header['bsi'], $this->BSIoffset, $length);\n \t\t$this->BSIoffset += $length;\n \n \t\treturn bindec($data);\n@@ -241,17 +233,17 @@\n \t}\n \n \tpublic static function sampleRateCodeLookup($fscod) {\n-\t\tstatic $sampleRateCodeLookup = array(\n+\t\tstatic $sampleRateCodeLookup = [\n \t\t\t0 => 48000,\n \t\t\t1 => 44100,\n \t\t\t2 => 32000,\n \t\t\t3 => 'reserved' // If the reserved code is indicated, the decoder should not attempt to decode audio and should mute.\n-\t\t);\n-\t\treturn (isset($sampleRateCodeLookup[$fscod]) ? $sampleRateCodeLookup[$fscod] : false);\n+\t\t];\n+\t\treturn ($sampleRateCodeLookup[$fscod] ?? false);\n \t}\n \n \tpublic static function serviceTypeLookup($bsmod, $acmod) {\n-\t\tstatic $serviceTypeLookup = array();\n+\t\tstatic $serviceTypeLookup = [];\n \t\tif (empty($serviceTypeLookup)) {\n \t\t\tfor ($i = 0; $i <= 7; $i++) {\n \t\t\t\t$serviceTypeLookup[0][$i] = 'main audio service: complete main (CM)';\n@@ -268,62 +260,62 @@\n \t\t\t\t$serviceTypeLookup[7][$i] = 'main audio service: karaoke';\n \t\t\t}\n \t\t}\n-\t\treturn (isset($serviceTypeLookup[$bsmod][$acmod]) ? $serviceTypeLookup[$bsmod][$acmod] : false);\n+\t\treturn ($serviceTypeLookup[$bsmod][$acmod] ?? false);\n \t}\n \n \tpublic static function audioCodingModeLookup($acmod) {\n \t\t// array(channel configuration, # channels (not incl LFE), channel order)\n-\t\tstatic $audioCodingModeLookup = array (\n-\t\t\t0 => array('channel_config'=>'1+1', 'num_channels'=>2, 'channel_order'=>'Ch1,Ch2'),\n-\t\t\t1 => array('channel_config'=>'1/0', 'num_channels'=>1, 'channel_order'=>'C'),\n-\t\t\t2 => array('channel_config'=>'2/0', 'num_channels'=>2, 'channel_order'=>'L,R'),\n-\t\t\t3 => array('channel_config'=>'3/0', 'num_channels'=>3, 'channel_order'=>'L,C,R'),\n-\t\t\t4 => array('channel_config'=>'2/1', 'num_channels'=>3, 'channel_order'=>'L,R,S'),\n-\t\t\t5 => array('channel_config'=>'3/1', 'num_channels'=>4, 'channel_order'=>'L,C,R,S'),\n-\t\t\t6 => array('channel_config'=>'2/2', 'num_channels'=>4, 'channel_order'=>'L,R,SL,SR'),\n-\t\t\t7 => array('channel_config'=>'3/2', 'num_channels'=>5, 'channel_order'=>'L,C,R,SL,SR'),\n-\t\t);\n-\t\treturn (isset($audioCodingModeLookup[$acmod]) ? $audioCodingModeLookup[$acmod] : false);\n+\t\tstatic $audioCodingModeLookup =  [\n+\t\t\t0 => ['channel_config'=>'1+1', 'num_channels'=>2, 'channel_order'=>'Ch1,Ch2'],\n+\t\t\t1 => ['channel_config'=>'1/0', 'num_channels'=>1, 'channel_order'=>'C'],\n+\t\t\t2 => ['channel_config'=>'2/0', 'num_channels'=>2, 'channel_order'=>'L,R'],\n+\t\t\t3 => ['channel_config'=>'3/0', 'num_channels'=>3, 'channel_order'=>'L,C,R'],\n+\t\t\t4 => ['channel_config'=>'2/1', 'num_channels'=>3, 'channel_order'=>'L,R,S'],\n+\t\t\t5 => ['channel_config'=>'3/1', 'num_channels'=>4, 'channel_order'=>'L,C,R,S'],\n+\t\t\t6 => ['channel_config'=>'2/2', 'num_channels'=>4, 'channel_order'=>'L,R,SL,SR'],\n+\t\t\t7 => ['channel_config'=>'3/2', 'num_channels'=>5, 'channel_order'=>'L,C,R,SL,SR'],\n+\t\t];\n+\t\treturn ($audioCodingModeLookup[$acmod] ?? false);\n \t}\n \n \tpublic static function centerMixLevelLookup($cmixlev) {\n \t\tstatic $centerMixLevelLookup;\n \t\tif (empty($centerMixLevelLookup)) {\n-\t\t\t$centerMixLevelLookup = array(\n-\t\t\t\t0 => pow(2, -3.0 / 6), // 0.707 (-3.0 dB)\n-\t\t\t\t1 => pow(2, -4.5 / 6), // 0.595 (-4.5 dB)\n-\t\t\t\t2 => pow(2, -6.0 / 6), // 0.500 (-6.0 dB)\n+\t\t\t$centerMixLevelLookup = [\n+\t\t\t\t0 => 2 ** (-3.0 / 6), // 0.707 (-3.0 dB)\n+\t\t\t\t1 => 2 ** (-4.5 / 6), // 0.595 (-4.5 dB)\n+\t\t\t\t2 => 2 ** (-6.0 / 6), // 0.500 (-6.0 dB)\n \t\t\t\t3 => 'reserved'\n-\t\t\t);\n+\t\t\t];\n \t\t}\n-\t\treturn (isset($centerMixLevelLookup[$cmixlev]) ? $centerMixLevelLookup[$cmixlev] : false);\n+\t\treturn ($centerMixLevelLookup[$cmixlev] ?? false);\n \t}\n \n \tpublic static function surroundMixLevelLookup($surmixlev) {\n \t\tstatic $surroundMixLevelLookup;\n \t\tif (empty($surroundMixLevelLookup)) {\n-\t\t\t$surroundMixLevelLookup = array(\n-\t\t\t\t0 => pow(2, -3.0 / 6),\n-\t\t\t\t1 => pow(2, -6.0 / 6),\n+\t\t\t$surroundMixLevelLookup = [\n+\t\t\t\t0 => 2 ** (-3.0 / 6),\n+\t\t\t\t1 => 2 ** (-6.0 / 6),\n \t\t\t\t2 => 0,\n \t\t\t\t3 => 'reserved'\n-\t\t\t);\n+\t\t\t];\n \t\t}\n-\t\treturn (isset($surroundMixLevelLookup[$surmixlev]) ? $surroundMixLevelLookup[$surmixlev] : false);\n+\t\treturn ($surroundMixLevelLookup[$surmixlev] ?? false);\n \t}\n \n \tpublic static function dolbySurroundModeLookup($dsurmod) {\n-\t\tstatic $dolbySurroundModeLookup = array(\n+\t\tstatic $dolbySurroundModeLookup = [\n \t\t\t0 => 'not indicated',\n \t\t\t1 => 'Not Dolby Surround encoded',\n \t\t\t2 => 'Dolby Surround encoded',\n \t\t\t3 => 'reserved'\n-\t\t);\n-\t\treturn (isset($dolbySurroundModeLookup[$dsurmod]) ? $dolbySurroundModeLookup[$dsurmod] : false);\n+\t\t];\n+\t\treturn ($dolbySurroundModeLookup[$dsurmod] ?? false);\n \t}\n \n \tpublic static function channelsEnabledLookup($acmod, $lfeon) {\n-\t\t$lookup = array(\n+\t\t$lookup = [\n \t\t\t'ch1'=>(bool) ($acmod == 0),\n \t\t\t'ch2'=>(bool) ($acmod == 0),\n \t\t\t'left'=>(bool) ($acmod > 1),\n@@ -332,7 +324,7 @@\n \t\t\t'surround_mono'=>false,\n \t\t\t'surround_left'=>false,\n \t\t\t'surround_right'=>false,\n-\t\t\t'lfe'=>$lfeon);\n+\t\t\t'lfe'=>$lfeon];\n \t\tswitch ($acmod) {\n \t\t\tcase 4:\n \t\t\tcase 5:\n@@ -376,10 +368,10 @@\n \t\t// -8    -42.14 dB\n \n \t\t$fourbit = str_pad(decbin(($compre & 0xF0) >> 4), 4, '0', STR_PAD_LEFT);\n-\t\tif ($fourbit{0} == '1') {\n-\t\t\t$log_gain = -8 + bindec(substr($fourbit, 1));\n+\t\tif ($fourbit[0] == '1') {\n+\t\t\t$log_gain = -8 + bindec(substr((string) $fourbit, 1));\n \t\t} else {\n-\t\t\t$log_gain = bindec(substr($fourbit, 1));\n+\t\t\t$log_gain = bindec(substr((string) $fourbit, 1));\n \t\t}\n \t\t$log_gain = ($log_gain + 1) * getid3_lib::RGADamplitude2dB(2);\n \n@@ -398,13 +390,13 @@\n \t}\n \n \tpublic static function roomTypeLookup($roomtyp) {\n-\t\tstatic $roomTypeLookup = array(\n+\t\tstatic $roomTypeLookup = [\n \t\t\t0 => 'not indicated',\n \t\t\t1 => 'large room, X curve monitor',\n \t\t\t2 => 'small room, flat monitor',\n \t\t\t3 => 'reserved'\n-\t\t);\n-\t\treturn (isset($roomTypeLookup[$roomtyp]) ? $roomTypeLookup[$roomtyp] : false);\n+\t\t];\n+\t\treturn ($roomTypeLookup[$roomtyp] ?? false);\n \t}\n \n \tpublic static function frameSizeLookup($frmsizecod, $fscod) {\n@@ -411,41 +403,41 @@\n \t\t$padding     = (bool) ($frmsizecod % 2);\n \t\t$framesizeid =   floor($frmsizecod / 2);\n \n-\t\tstatic $frameSizeLookup = array();\n+\t\tstatic $frameSizeLookup = [];\n \t\tif (empty($frameSizeLookup)) {\n-\t\t\t$frameSizeLookup = array (\n-\t\t\t\t0  => array(128, 138, 192),\n-\t\t\t\t1  => array(40, 160, 174, 240),\n-\t\t\t\t2  => array(48, 192, 208, 288),\n-\t\t\t\t3  => array(56, 224, 242, 336),\n-\t\t\t\t4  => array(64, 256, 278, 384),\n-\t\t\t\t5  => array(80, 320, 348, 480),\n-\t\t\t\t6  => array(96, 384, 416, 576),\n-\t\t\t\t7  => array(112, 448, 486, 672),\n-\t\t\t\t8  => array(128, 512, 556, 768),\n-\t\t\t\t9  => array(160, 640, 696, 960),\n-\t\t\t\t10 => array(192, 768, 834, 1152),\n-\t\t\t\t11 => array(224, 896, 974, 1344),\n-\t\t\t\t12 => array(256, 1024, 1114, 1536),\n-\t\t\t\t13 => array(320, 1280, 1392, 1920),\n-\t\t\t\t14 => array(384, 1536, 1670, 2304),\n-\t\t\t\t15 => array(448, 1792, 1950, 2688),\n-\t\t\t\t16 => array(512, 2048, 2228, 3072),\n-\t\t\t\t17 => array(576, 2304, 2506, 3456),\n-\t\t\t\t18 => array(640, 2560, 2786, 3840)\n-\t\t\t);\n+\t\t\t$frameSizeLookup =  [\n+\t\t\t\t0  => [128, 138, 192],\n+\t\t\t\t1  => [40, 160, 174, 240],\n+\t\t\t\t2  => [48, 192, 208, 288],\n+\t\t\t\t3  => [56, 224, 242, 336],\n+\t\t\t\t4  => [64, 256, 278, 384],\n+\t\t\t\t5  => [80, 320, 348, 480],\n+\t\t\t\t6  => [96, 384, 416, 576],\n+\t\t\t\t7  => [112, 448, 486, 672],\n+\t\t\t\t8  => [128, 512, 556, 768],\n+\t\t\t\t9  => [160, 640, 696, 960],\n+\t\t\t\t10 => [192, 768, 834, 1152],\n+\t\t\t\t11 => [224, 896, 974, 1344],\n+\t\t\t\t12 => [256, 1024, 1114, 1536],\n+\t\t\t\t13 => [320, 1280, 1392, 1920],\n+\t\t\t\t14 => [384, 1536, 1670, 2304],\n+\t\t\t\t15 => [448, 1792, 1950, 2688],\n+\t\t\t\t16 => [512, 2048, 2228, 3072],\n+\t\t\t\t17 => [576, 2304, 2506, 3456],\n+\t\t\t\t18 => [640, 2560, 2786, 3840]\n+\t\t\t];\n \t\t}\n \t\tif (($fscod == 1) && $padding) {\n \t\t\t// frame lengths are padded by 1 word (16 bits) at 44100\n \t\t\t$frameSizeLookup[$frmsizecod] += 2;\n \t\t}\n-\t\treturn (isset($frameSizeLookup[$framesizeid][$fscod]) ? $frameSizeLookup[$framesizeid][$fscod] : false);\n+\t\treturn ($frameSizeLookup[$framesizeid][$fscod] ?? false);\n \t}\n \n \tpublic static function bitrateLookup($frmsizecod) {\n \t\t$framesizeid =   floor($frmsizecod / 2);\n \n-\t\tstatic $bitrateLookup = array(\n+\t\tstatic $bitrateLookup = [\n \t\t\t0  => 32000,\n \t\t\t1  => 40000,\n \t\t\t2  => 48000,\n@@ -465,8 +457,8 @@\n \t\t\t16 => 512000,\n \t\t\t17 => 576000,\n \t\t\t18 => 640000\n-\t\t);\n-\t\treturn (isset($bitrateLookup[$framesizeid]) ? $bitrateLookup[$framesizeid] : false);\n+\t\t];\n+\t\treturn ($bitrateLookup[$framesizeid] ?? false);\n \t}\n \n \n",
        "applied_rectors": [
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php56\\Rector\\FuncCall\\PowToExpRector",
          "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
          "Rector\\Php74\\Rector\\ArrayDimFetch\\CurlyToSquareBracketArrayStringRector",
          "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
          "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/medium_201_500/016_module.audio.ac3.php"
    ]
  }
}