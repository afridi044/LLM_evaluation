{
  "file_path": "selected_100_files\\medium_201_500\\049_Parser.php",
  "rector_analysis": {
    "php_version_changes": 5,
    "rules_triggered": [
      "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
      "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_52": 1,
      "php_54": 1,
      "php_71": 1,
      "php_80": 1,
      "php_81": 1
    },
    "has_diff": true,
    "diff_line_count": 234
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:20:28.439728",
    "file_size_kb": 11.6,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/medium_201_500/049_Parser.php",
        "diff": "--- Original\n+++ New\n@@ -53,21 +53,21 @@\n  */\n class SimplePie_Parser\n {\n-\tvar $error_code;\n-\tvar $error_string;\n-\tvar $current_line;\n-\tvar $current_column;\n-\tvar $current_byte;\n-\tvar $separator = ' ';\n-\tvar $namespace = array('');\n-\tvar $element = array('');\n-\tvar $xml_base = array('');\n-\tvar $xml_base_explicit = array(false);\n-\tvar $xml_lang = array('');\n-\tvar $data = array();\n-\tvar $datas = array(array());\n-\tvar $current_xhtml_construct = -1;\n-\tvar $encoding;\n+\tpublic $error_code;\n+\tpublic $error_string;\n+\tpublic $current_line;\n+\tpublic $current_column;\n+\tpublic $current_byte;\n+\tpublic $separator = ' ';\n+\tpublic $namespace = [''];\n+\tpublic $element = [''];\n+\tpublic $xml_base = [''];\n+\tpublic $xml_base_explicit = [false];\n+\tpublic $xml_lang = [''];\n+\tpublic $data = [];\n+\tpublic $datas = [[]];\n+\tpublic $current_xhtml_construct = -1;\n+\tpublic $encoding;\n \tprotected $registry;\n \n \tpublic function set_registry(SimplePie_Registry $registry)\n@@ -78,7 +78,7 @@\n \tpublic function parse(&$data, $encoding)\n \t{\n \t\t// Use UTF-8 if we get passed US-ASCII, as every US-ASCII character is a UTF-8 character\n-\t\tif (strtoupper($encoding) === 'US-ASCII')\n+\t\tif (strtoupper((string) $encoding) === 'US-ASCII')\n \t\t{\n \t\t\t$this->encoding = 'UTF-8';\n \t\t}\n@@ -89,37 +89,37 @@\n \n \t\t// Strip BOM:\n \t\t// UTF-32 Big Endian BOM\n-\t\tif (substr($data, 0, 4) === \"\\x00\\x00\\xFE\\xFF\")\n+\t\tif (str_starts_with((string) $data, \"\\x00\\x00\\xFE\\xFF\"))\n \t\t{\n-\t\t\t$data = substr($data, 4);\n+\t\t\t$data = substr((string) $data, 4);\n \t\t}\n \t\t// UTF-32 Little Endian BOM\n-\t\telseif (substr($data, 0, 4) === \"\\xFF\\xFE\\x00\\x00\")\n+\t\telseif (str_starts_with((string) $data, \"\\xFF\\xFE\\x00\\x00\"))\n \t\t{\n-\t\t\t$data = substr($data, 4);\n+\t\t\t$data = substr((string) $data, 4);\n \t\t}\n \t\t// UTF-16 Big Endian BOM\n-\t\telseif (substr($data, 0, 2) === \"\\xFE\\xFF\")\n+\t\telseif (str_starts_with((string) $data, \"\\xFE\\xFF\"))\n \t\t{\n-\t\t\t$data = substr($data, 2);\n+\t\t\t$data = substr((string) $data, 2);\n \t\t}\n \t\t// UTF-16 Little Endian BOM\n-\t\telseif (substr($data, 0, 2) === \"\\xFF\\xFE\")\n+\t\telseif (str_starts_with((string) $data, \"\\xFF\\xFE\"))\n \t\t{\n-\t\t\t$data = substr($data, 2);\n+\t\t\t$data = substr((string) $data, 2);\n \t\t}\n \t\t// UTF-8 BOM\n-\t\telseif (substr($data, 0, 3) === \"\\xEF\\xBB\\xBF\")\n+\t\telseif (str_starts_with((string) $data, \"\\xEF\\xBB\\xBF\"))\n \t\t{\n-\t\t\t$data = substr($data, 3);\n+\t\t\t$data = substr((string) $data, 3);\n \t\t}\n \n-\t\tif (substr($data, 0, 5) === '<?xml' && strspn(substr($data, 5, 1), \"\\x09\\x0A\\x0D\\x20\") && ($pos = strpos($data, '?>')) !== false)\n+\t\tif (str_starts_with((string) $data, '<?xml') && strspn(substr((string) $data, 5, 1), \"\\x09\\x0A\\x0D\\x20\") && ($pos = strpos((string) $data, '?>')) !== false)\n \t\t{\n-\t\t\t$declaration = $this->registry->create('XML_Declaration_Parser', array(substr($data, 5, $pos - 5)));\n+\t\t\t$declaration = $this->registry->create('XML_Declaration_Parser', [substr((string) $data, 5, $pos - 5)]);\n \t\t\tif ($declaration->parse())\n \t\t\t{\n-\t\t\t\t$data = substr($data, $pos + 2);\n+\t\t\t\t$data = substr((string) $data, $pos + 2);\n \t\t\t\t$data = '<?xml version=\"' . $declaration->version . '\" encoding=\"' . $encoding . '\" standalone=\"' . (($declaration->standalone) ? 'yes' : 'no') . '\"?>' . $data;\n \t\t\t}\n \t\t\telse\n@@ -143,7 +143,7 @@\n \t\t// Create the parser\n \t\tif ($xml_is_sane)\n \t\t{\n-\t\t\t$xml = xml_parser_create_ns($this->encoding, $this->separator);\n+\t\t\t$xml = xml_parser_create_ns($this->encoding, (string) $this->separator);\n \t\t\txml_parser_set_option($xml, XML_OPTION_SKIP_WHITE, 1);\n \t\t\txml_parser_set_option($xml, XML_OPTION_CASE_FOLDING, 0);\n \t\t\txml_set_object($xml, $this);\n@@ -151,7 +151,7 @@\n \t\t\txml_set_element_handler($xml, 'tag_open', 'tag_close');\n \n \t\t\t// Parse!\n-\t\t\tif (!xml_parse($xml, $data, true))\n+\t\t\tif (!xml_parse($xml, (string) $data, true))\n \t\t\t{\n \t\t\t\t$this->error_code = xml_get_error_code($xml);\n \t\t\t\t$this->error_string = xml_error_string($this->error_code);\n@@ -194,7 +194,7 @@\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\t$tagName = $xml->localName;\n \t\t\t\t\t\t}\n-\t\t\t\t\t\t$attributes = array();\n+\t\t\t\t\t\t$attributes = [];\n \t\t\t\t\t\twhile ($xml->moveToNextAttribute())\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tif ($xml->namespaceURI !== '')\n@@ -267,18 +267,18 @@\n \n \tpublic function tag_open($parser, $tag, $attributes)\n \t{\n-\t\tlist($this->namespace[], $this->element[]) = $this->split_ns($tag);\n+\t\t[$this->namespace[], $this->element[]] = $this->split_ns($tag);\n \n-\t\t$attribs = array();\n+\t\t$attribs = [];\n \t\tforeach ($attributes as $name => $value)\n \t\t{\n-\t\t\tlist($attrib_namespace, $attribute) = $this->split_ns($name);\n+\t\t\t[$attrib_namespace, $attribute] = $this->split_ns($name);\n \t\t\t$attribs[$attrib_namespace][$attribute] = $value;\n \t\t}\n \n \t\tif (isset($attribs[SIMPLEPIE_NAMESPACE_XML]['base']))\n \t\t{\n-\t\t\t$base = $this->registry->call('Misc', 'absolutize_url', array($attribs[SIMPLEPIE_NAMESPACE_XML]['base'], end($this->xml_base)));\n+\t\t\t$base = $this->registry->call('Misc', 'absolutize_url', [$attribs[SIMPLEPIE_NAMESPACE_XML]['base'], end($this->xml_base)]);\n \t\t\tif ($base !== false)\n \t\t\t{\n \t\t\t\t$this->xml_base[] = $base;\n@@ -310,7 +310,7 @@\n \t\t\t\t{\n \t\t\t\t\tforeach ($attribs[''] as $name => $value)\n \t\t\t\t\t{\n-\t\t\t\t\t\t$this->data['data'] .= ' ' . $name . '=\"' . htmlspecialchars($value, ENT_COMPAT, $this->encoding) . '\"';\n+\t\t\t\t\t\t$this->data['data'] .= ' ' . $name . '=\"' . htmlspecialchars((string) $value, ENT_COMPAT, $this->encoding) . '\"';\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t$this->data['data'] .= '>';\n@@ -320,12 +320,12 @@\n \t\t{\n \t\t\t$this->datas[] =& $this->data;\n \t\t\t$this->data =& $this->data['child'][end($this->namespace)][end($this->element)][];\n-\t\t\t$this->data = array('data' => '', 'attribs' => $attribs, 'xml_base' => end($this->xml_base), 'xml_base_explicit' => end($this->xml_base_explicit), 'xml_lang' => end($this->xml_lang));\n-\t\t\tif ((end($this->namespace) === SIMPLEPIE_NAMESPACE_ATOM_03 && in_array(end($this->element), array('title', 'tagline', 'copyright', 'info', 'summary', 'content')) && isset($attribs['']['mode']) && $attribs['']['mode'] === 'xml')\n-\t\t\t|| (end($this->namespace) === SIMPLEPIE_NAMESPACE_ATOM_10 && in_array(end($this->element), array('rights', 'subtitle', 'summary', 'info', 'title', 'content')) && isset($attribs['']['type']) && $attribs['']['type'] === 'xhtml')\n-\t\t\t|| (end($this->namespace) === SIMPLEPIE_NAMESPACE_RSS_20 && in_array(end($this->element), array('title')))\n-\t\t\t|| (end($this->namespace) === SIMPLEPIE_NAMESPACE_RSS_090 && in_array(end($this->element), array('title')))\n-\t\t\t|| (end($this->namespace) === SIMPLEPIE_NAMESPACE_RSS_10 && in_array(end($this->element), array('title'))))\n+\t\t\t$this->data = ['data' => '', 'attribs' => $attribs, 'xml_base' => end($this->xml_base), 'xml_base_explicit' => end($this->xml_base_explicit), 'xml_lang' => end($this->xml_lang)];\n+\t\t\tif ((end($this->namespace) === SIMPLEPIE_NAMESPACE_ATOM_03 && in_array(end($this->element), ['title', 'tagline', 'copyright', 'info', 'summary', 'content']) && isset($attribs['']['mode']) && $attribs['']['mode'] === 'xml')\n+\t\t\t|| (end($this->namespace) === SIMPLEPIE_NAMESPACE_ATOM_10 && in_array(end($this->element), ['rights', 'subtitle', 'summary', 'info', 'title', 'content']) && isset($attribs['']['type']) && $attribs['']['type'] === 'xhtml')\n+\t\t\t|| (end($this->namespace) === SIMPLEPIE_NAMESPACE_RSS_20 && in_array(end($this->element), ['title']))\n+\t\t\t|| (end($this->namespace) === SIMPLEPIE_NAMESPACE_RSS_090 && in_array(end($this->element), ['title']))\n+\t\t\t|| (end($this->namespace) === SIMPLEPIE_NAMESPACE_RSS_10 && in_array(end($this->element), ['title'])))\n \t\t\t{\n \t\t\t\t$this->current_xhtml_construct = 0;\n \t\t\t}\n@@ -336,7 +336,7 @@\n \t{\n \t\tif ($this->current_xhtml_construct >= 0)\n \t\t{\n-\t\t\t$this->data['data'] .= htmlspecialchars($cdata, ENT_QUOTES, $this->encoding);\n+\t\t\t$this->data['data'] .= htmlspecialchars((string) $cdata, ENT_QUOTES, $this->encoding);\n \t\t}\n \t\telse\n \t\t{\n@@ -349,7 +349,7 @@\n \t\tif ($this->current_xhtml_construct >= 0)\n \t\t{\n \t\t\t$this->current_xhtml_construct--;\n-\t\t\tif (end($this->namespace) === SIMPLEPIE_NAMESPACE_XHTML && !in_array(end($this->element), array('area', 'base', 'basefont', 'br', 'col', 'frame', 'hr', 'img', 'input', 'isindex', 'link', 'meta', 'param')))\n+\t\t\tif (end($this->namespace) === SIMPLEPIE_NAMESPACE_XHTML && !in_array(end($this->element), ['area', 'base', 'basefont', 'br', 'col', 'frame', 'hr', 'img', 'input', 'isindex', 'link', 'meta', 'param']))\n \t\t\t{\n \t\t\t\t$this->data['data'] .= '</' . end($this->element) . '>';\n \t\t\t}\n@@ -369,18 +369,18 @@\n \n \tpublic function split_ns($string)\n \t{\n-\t\tstatic $cache = array();\n+\t\tstatic $cache = [];\n \t\tif (!isset($cache[$string]))\n \t\t{\n-\t\t\tif ($pos = strpos($string, $this->separator))\n+\t\t\tif ($pos = strpos((string) $string, (string) $this->separator))\n \t\t\t{\n \t\t\t\tstatic $separator_length;\n \t\t\t\tif (!$separator_length)\n \t\t\t\t{\n-\t\t\t\t\t$separator_length = strlen($this->separator);\n+\t\t\t\t\t$separator_length = strlen((string) $this->separator);\n \t\t\t\t}\n-\t\t\t\t$namespace = substr($string, 0, $pos);\n-\t\t\t\t$local_name = substr($string, $pos + $separator_length);\n+\t\t\t\t$namespace = substr((string) $string, 0, $pos);\n+\t\t\t\t$local_name = substr((string) $string, $pos + $separator_length);\n \t\t\t\tif (strtolower($namespace) === SIMPLEPIE_NAMESPACE_ITUNES)\n \t\t\t\t{\n \t\t\t\t\t$namespace = SIMPLEPIE_NAMESPACE_ITUNES;\n@@ -395,11 +395,11 @@\n \t\t\t\t{\n \t\t\t\t\t$namespace = SIMPLEPIE_NAMESPACE_MEDIARSS;\n \t\t\t\t}\n-\t\t\t\t$cache[$string] = array($namespace, $local_name);\n+\t\t\t\t$cache[$string] = [$namespace, $local_name];\n \t\t\t}\n \t\t\telse\n \t\t\t{\n-\t\t\t\t$cache[$string] = array('', $string);\n+\t\t\t\t$cache[$string] = ['', $string];\n \t\t\t}\n \t\t}\n \t\treturn $cache[$string];\n",
        "applied_rectors": [
          "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
          "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/medium_201_500/049_Parser.php"
    ]
  }
}