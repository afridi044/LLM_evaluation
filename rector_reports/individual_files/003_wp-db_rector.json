{
  "file_path": "selected_100_files\\extra_large_1000_plus\\003_wp-db.php",
  "rector_analysis": {
    "php_version_changes": 12,
    "rules_triggered": [
      "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
      "Rector\\Php53\\Rector\\Ternary\\TernaryToElvisRector",
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php55\\Rector\\Class_\\ClassConstantToSelfClassRector",
      "Rector\\Php80\\Rector\\ClassConstFetch\\ClassOnThisVariableObjectRector",
      "Rector\\Php80\\Rector\\Class_\\ClassPropertyAssignToConstructorPromotionRector",
      "Rector\\Php80\\Rector\\FuncCall\\ClassOnObjectRector",
      "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
      "Rector\\Php80\\Rector\\NotIdentical\\StrContainsRector",
      "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
      "Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_52": 1,
      "php_53": 1,
      "php_54": 1,
      "php_55": 1,
      "php_80": 6,
      "php_81": 2
    },
    "has_diff": true,
    "diff_line_count": 464
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:17:40.847474",
    "file_size_kb": 59.3,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/extra_large_1000_plus/003_wp-db.php",
        "diff": "--- Original\n+++ New\n@@ -61,7 +61,7 @@\n \t * @access private\n \t * @var bool\n \t */\n-\tvar $show_errors = false;\n+\tpublic $show_errors = false;\n \n \t/**\n \t * Whether to suppress errors during the DB bootstrapping.\n@@ -70,7 +70,7 @@\n \t * @since 2.5.0\n \t * @var bool\n \t */\n-\tvar $suppress_errors = false;\n+\tpublic $suppress_errors = false;\n \n \t/**\n \t * The last error during query.\n@@ -87,7 +87,7 @@\n \t * @access private\n \t * @var int\n \t */\n-\tvar $num_queries = 0;\n+\tpublic $num_queries = 0;\n \n \t/**\n \t * Count of rows returned by previous query\n@@ -96,7 +96,7 @@\n \t * @access private\n \t * @var int\n \t */\n-\tvar $num_rows = 0;\n+\tpublic $num_rows = 0;\n \n \t/**\n \t * Count of affected rows by previous query\n@@ -105,7 +105,7 @@\n \t * @access private\n \t * @var int\n \t */\n-\tvar $rows_affected = 0;\n+\tpublic $rows_affected = 0;\n \n \t/**\n \t * The ID generated for an AUTO_INCREMENT column by the previous query (usually INSERT).\n@@ -114,7 +114,7 @@\n \t * @access public\n \t * @var int\n \t */\n-\tvar $insert_id = 0;\n+\tpublic $insert_id = 0;\n \n \t/**\n \t * Last query made\n@@ -123,7 +123,7 @@\n \t * @access private\n \t * @var array\n \t */\n-\tvar $last_query;\n+\tpublic $last_query;\n \n \t/**\n \t * Results of the last query made\n@@ -132,7 +132,7 @@\n \t * @access private\n \t * @var array|null\n \t */\n-\tvar $last_result;\n+\tpublic $last_result;\n \n \t/**\n \t * MySQL result, which is either a resource or boolean.\n@@ -159,7 +159,7 @@\n \t * @access private\n \t * @var array\n \t */\n-\tvar $queries;\n+\tpublic $queries;\n \n \t/**\n \t * The number of times to retry reconnecting before dying.\n@@ -182,7 +182,7 @@\n \t * @access private\n \t * @var string\n \t */\n-\tvar $prefix = '';\n+\tpublic $prefix = '';\n \n \t/**\n \t * WordPress base table prefix.\n@@ -200,7 +200,7 @@\n \t * @access private\n \t * @var bool\n \t */\n-\tvar $ready = false;\n+\tpublic $ready = false;\n \n \t/**\n \t * {@internal Missing Description}}\n@@ -228,8 +228,8 @@\n \t * @see wpdb::tables()\n \t * @var array\n \t */\n-\tvar $tables = array( 'posts', 'comments', 'links', 'options', 'postmeta',\n-\t\t'terms', 'term_taxonomy', 'term_relationships', 'commentmeta' );\n+\tpublic $tables = [ 'posts', 'comments', 'links', 'options', 'postmeta',\n+\t\t'terms', 'term_taxonomy', 'term_relationships', 'commentmeta' ];\n \n \t/**\n \t * List of deprecated WordPress tables\n@@ -241,7 +241,7 @@\n \t * @see wpdb::tables()\n \t * @var array\n \t */\n-\tvar $old_tables = array( 'categories', 'post2cat', 'link2cat' );\n+\tpublic $old_tables = [ 'categories', 'post2cat', 'link2cat' ];\n \n \t/**\n \t * List of WordPress global tables\n@@ -251,7 +251,7 @@\n \t * @see wpdb::tables()\n \t * @var array\n \t */\n-\tvar $global_tables = array( 'users', 'usermeta' );\n+\tpublic $global_tables = [ 'users', 'usermeta' ];\n \n \t/**\n \t * List of Multisite global tables\n@@ -261,8 +261,8 @@\n \t * @see wpdb::tables()\n \t * @var array\n \t */\n-\tvar $ms_global_tables = array( 'blogs', 'signups', 'site', 'sitemeta',\n-\t\t'sitecategories', 'registration_log', 'blog_versions' );\n+\tpublic $ms_global_tables = [ 'blogs', 'signups', 'site', 'sitemeta',\n+\t\t'sitecategories', 'registration_log', 'blog_versions' ];\n \n \t/**\n \t * WordPress Comments table\n@@ -444,7 +444,7 @@\n \t * @access public\n \t * @var array\n \t */\n-\tpublic $field_types = array();\n+\tpublic $field_types = [];\n \n \t/**\n \t * Database table columns charset\n@@ -465,42 +465,6 @@\n \tpublic $collate;\n \n \t/**\n-\t * Database Username\n-\t *\n-\t * @since 2.9.0\n-\t * @access protected\n-\t * @var string\n-\t */\n-\tprotected $dbuser;\n-\n-\t/**\n-\t * Database Password\n-\t *\n-\t * @since 3.1.0\n-\t * @access protected\n-\t * @var string\n-\t */\n-\tprotected $dbpassword;\n-\n-\t/**\n-\t * Database Name\n-\t *\n-\t * @since 3.1.0\n-\t * @access protected\n-\t * @var string\n-\t */\n-\tprotected $dbname;\n-\n-\t/**\n-\t * Database Host\n-\t *\n-\t * @since 3.1.0\n-\t * @access protected\n-\t * @var string\n-\t */\n-\tprotected $dbhost;\n-\n-\t/**\n \t * Database Handle\n \t *\n \t * @since 0.71\n@@ -539,8 +503,8 @@\n \t * @access protected\n \t * @var array\n \t */\n-\tprotected $incompatible_modes = array( 'NO_ZERO_DATE', 'ONLY_FULL_GROUP_BY',\n-\t\t'STRICT_TRANS_TABLES', 'STRICT_ALL_TABLES', 'TRADITIONAL' );\n+\tprotected $incompatible_modes = [ 'NO_ZERO_DATE', 'ONLY_FULL_GROUP_BY',\n+\t\t'STRICT_TRANS_TABLES', 'STRICT_ALL_TABLES', 'TRADITIONAL' ];\n \n \t/**\n \t * Whether to use mysqli over mysql.\n@@ -575,8 +539,32 @@\n \t * @param string $dbname MySQL database name\n \t * @param string $dbhost MySQL database host\n \t */\n-\tpublic function __construct( $dbuser, $dbpassword, $dbname, $dbhost ) {\n-\t\tregister_shutdown_function( array( $this, '__destruct' ) );\n+\tpublic function __construct( /**\n+     * Database Username\n+     *\n+     * @since 2.9.0\n+     * @access protected\n+     */\n+    protected $dbuser, /**\n+     * Database Password\n+     *\n+     * @since 3.1.0\n+     * @access protected\n+     */\n+    protected $dbpassword, /**\n+     * Database Name\n+     *\n+     * @since 3.1.0\n+     * @access protected\n+     */\n+    protected $dbname, /**\n+     * Database Host\n+     *\n+     * @since 3.1.0\n+     * @access protected\n+     */\n+    protected $dbhost ) {\n+\t\tregister_shutdown_function( [ $this, '__destruct' ] );\n \n \t\tif ( WP_DEBUG && WP_DEBUG_DISPLAY )\n \t\t\t$this->show_errors();\n@@ -592,7 +580,7 @@\n \t\t\t\t$this->use_mysqli = ! WP_USE_EXT_MYSQL;\n \t\t\t} elseif ( version_compare( phpversion(), '5.5', '>=' ) || ! function_exists( 'mysql_connect' ) ) {\n \t\t\t\t$this->use_mysqli = true;\n-\t\t\t} elseif ( false !== strpos( $GLOBALS['wp_version'], '-' ) ) {\n+\t\t\t} elseif ( str_contains( (string) $GLOBALS['wp_version'], '-' ) ) {\n \t\t\t\t$this->use_mysqli = true;\n \t\t\t}\n \t\t}\n@@ -599,11 +587,6 @@\n \n \t\t$this->init_charset();\n \n-\t\t$this->dbuser = $dbuser;\n-\t\t$this->dbpassword = $dbpassword;\n-\t\t$this->dbname = $dbname;\n-\t\t$this->dbhost = $dbhost;\n-\n \t\t// wp-config.php creation will manually connect when ready.\n \t\tif ( defined( 'WP_SETUP_CONFIG' ) ) {\n \t\t\treturn;\n@@ -741,7 +724,7 @@\n \t *\n \t * @param array $modes Optional. A list of SQL modes to set.\n \t */\n-\tpublic function set_sql_mode( $modes = array() ) {\n+\tpublic function set_sql_mode( $modes = [] ) {\n \t\tif ( empty( $modes ) ) {\n \t\t\tif ( $this->use_mysqli ) {\n \t\t\t\t$res = mysqli_query( $this->dbh, 'SELECT @@SESSION.sql_mode' );\n@@ -936,7 +919,7 @@\n \t\t\t\t$tables = $this->old_tables;\n \t\t\t\tbreak;\n \t\t\tdefault :\n-\t\t\t\treturn array();\n+\t\t\t\treturn [];\n \t\t}\n \n \t\tif ( $prefix ) {\n@@ -1041,7 +1024,7 @@\n \t\t\t}\n \t\t}\n \n-\t\t$class = get_class( $this );\n+\t\t$class = static::class;\n \t\t_doing_it_wrong( $class, \"$class must set a database connection for use with escaping.\", E_USER_NOTICE );\n \t\treturn addslashes( $string );\n \t}\n@@ -1156,7 +1139,7 @@\n \t\t\treturn;\n \n \t\t// This is not meant to be foolproof -- but it will catch obviously incorrect usage.\n-\t\tif ( strpos( $query, '%' ) === false ) {\n+\t\tif ( !str_contains( $query, '%' ) ) {\n \t\t\t_doing_it_wrong( 'wpdb::prepare', sprintf( __( 'The query argument of %s must have a placeholder.' ), 'wpdb::prepare()' ), '3.9' );\n \t\t}\n \n@@ -1168,8 +1151,8 @@\n \t\t$query = str_replace( \"'%s'\", '%s', $query ); // in case someone mistakenly already singlequoted it\n \t\t$query = str_replace( '\"%s\"', '%s', $query ); // doublequote unquoting\n \t\t$query = preg_replace( '|(?<!%)%f|' , '%F', $query ); // Force floats to be locale unaware\n-\t\t$query = preg_replace( '|(?<!%)%s|', \"'%s'\", $query ); // quote the strings, avoiding escaped strings like %%s\n-\t\tarray_walk( $args, array( $this, 'escape_by_ref' ) );\n+\t\t$query = preg_replace( '|(?<!%)%s|', \"'%s'\", (string) $query ); // quote the strings, avoiding escaped strings like %%s\n+\t\tarray_walk( $args, $this->escape_by_ref(...) );\n \t\treturn @vsprintf( $query, $args );\n \t}\n \n@@ -1218,7 +1201,7 @@\n \t\t\t\t$str = mysql_error( $this->dbh );\n \t\t\t}\n \t\t}\n-\t\t$EZSQL_ERROR[] = array( 'query' => $this->last_query, 'error_str' => $str );\n+\t\t$EZSQL_ERROR[] = [ 'query' => $this->last_query, 'error_str' => $str ];\n \n \t\tif ( $this->suppress_errors )\n \t\t\treturn false;\n@@ -1244,7 +1227,7 @@\n \t\t\tif ( defined( 'DIEONDBERROR' ) )\n \t\t\t\twp_die( $msg );\n \t\t} else {\n-\t\t\t$str   = htmlspecialchars( $str, ENT_QUOTES );\n+\t\t\t$str   = htmlspecialchars( (string) $str, ENT_QUOTES );\n \t\t\t$query = htmlspecialchars( $this->last_query, ENT_QUOTES );\n \n \t\t\tprint \"<div id='error'>\n@@ -1314,7 +1297,7 @@\n \t * @return void\n \t */\n \tpublic function flush() {\n-\t\t$this->last_result = array();\n+\t\t$this->last_result = [];\n \t\t$this->col_info    = null;\n \t\t$this->last_query  = null;\n \t\t$this->rows_affected = $this->num_rows = 0;\n@@ -1364,7 +1347,7 @@\n \t\t\tif ( ! empty( $port_or_socket ) ) {\n \t\t\t\t$host = substr( $host, 0, strpos( $host, ':' ) );\n \t\t\t\t$port_or_socket = substr( $port_or_socket, 1 );\n-\t\t\t\tif ( 0 !== strpos( $port_or_socket, '/' ) ) {\n+\t\t\t\tif ( !str_starts_with($port_or_socket, '/') ) {\n \t\t\t\t\t$port = intval( $port_or_socket );\n \t\t\t\t\t$maybe_socket = strstr( $port_or_socket, ':' );\n \t\t\t\t\tif ( ! empty( $maybe_socket ) ) {\n@@ -1657,7 +1640,7 @@\n \t\t$this->num_queries++;\n \n \t\tif ( defined( 'SAVEQUERIES' ) && SAVEQUERIES ) {\n-\t\t\t$this->queries[] = array( $query, $this->timer_stop(), $this->get_caller() );\n+\t\t\t$this->queries[] = [ $query, $this->timer_stop(), $this->get_caller() ];\n \t\t}\n \t}\n \n@@ -1726,12 +1709,12 @@\n \t * @return int|false The number of rows affected, or false on error.\n \t */\n \tfunction _insert_replace_helper( $table, $data, $format = null, $type = 'INSERT' ) {\n-\t\tif ( ! in_array( strtoupper( $type ), array( 'REPLACE', 'INSERT' ) ) )\n+\t\tif ( ! in_array( strtoupper( $type ), [ 'REPLACE', 'INSERT' ] ) )\n \t\t\treturn false;\n \t\t$this->insert_id = 0;\n \t\t$formats = $format = (array) $format;\n \t\t$fields = array_keys( $data );\n-\t\t$formatted_fields = array();\n+\t\t$formatted_fields = [];\n \t\tforeach ( $fields as $field ) {\n \t\t\tif ( !empty( $format ) )\n \t\t\t\t$form = ( $form = array_shift( $formats ) ) ? $form : $format[0];\n@@ -1771,7 +1754,7 @@\n \t\t\treturn false;\n \n \t\t$formats = $format = (array) $format;\n-\t\t$bits = $wheres = array();\n+\t\t$bits = $wheres = [];\n \t\tforeach ( (array) array_keys( $data ) as $field ) {\n \t\t\tif ( !empty( $format ) )\n \t\t\t\t$form = ( $form = array_shift( $formats ) ) ? $form : $format[0];\n@@ -1819,7 +1802,7 @@\n \t\tif ( ! is_array( $where ) )\n \t\t\treturn false;\n \n-\t\t$wheres = array();\n+\t\t$wheres = [];\n \n \t\t$where_formats = $where_format = (array) $where_format;\n \n@@ -1892,7 +1875,7 @@\n \t\t\treturn null;\n \n \t\tif ( $output == OBJECT ) {\n-\t\t\treturn $this->last_result[$y] ? $this->last_result[$y] : null;\n+\t\t\treturn $this->last_result[$y] ?: null;\n \t\t} elseif ( $output == ARRAY_A ) {\n \t\t\treturn $this->last_result[$y] ? get_object_vars( $this->last_result[$y] ) : null;\n \t\t} elseif ( $output == ARRAY_N ) {\n@@ -1899,7 +1882,7 @@\n \t\t\treturn $this->last_result[$y] ? array_values( get_object_vars( $this->last_result[$y] ) ) : null;\n \t\t} elseif ( strtoupper( $output ) === OBJECT ) {\n \t\t\t// Back compat for OBJECT being previously case insensitive.\n-\t\t\treturn $this->last_result[$y] ? $this->last_result[$y] : null;\n+\t\t\treturn $this->last_result[$y] ?: null;\n \t\t} else {\n \t\t\t$this->print_error( \" \\$db->get_row(string query, output type, int offset) -- Output type must be one of: OBJECT, ARRAY_A, ARRAY_N\" );\n \t\t}\n@@ -1922,7 +1905,7 @@\n \t\tif ( $query )\n \t\t\t$this->query( $query );\n \n-\t\t$new_array = array();\n+\t\t$new_array = [];\n \t\t// Extract the column values\n \t\tfor ( $i = 0, $j = count( $this->last_result ); $i < $j; $i++ ) {\n \t\t\t$new_array[$i] = $this->get_var( null, $x, $i );\n@@ -1951,7 +1934,7 @@\n \t\telse\n \t\t\treturn null;\n \n-\t\t$new_array = array();\n+\t\t$new_array = [];\n \t\tif ( $output == OBJECT ) {\n \t\t\t// Return an integer-keyed array of row objects\n \t\t\treturn $this->last_result;\n@@ -2023,7 +2006,7 @@\n \t\tif ( $this->col_info ) {\n \t\t\tif ( $col_offset == -1 ) {\n \t\t\t\t$i = 0;\n-\t\t\t\t$new_array = array();\n+\t\t\t\t$new_array = [];\n \t\t\t\tforeach( (array) $this->col_info as $col ) {\n \t\t\t\t\t$new_array[$i] = $col->{$info_type};\n \t\t\t\t\t$i++;\n@@ -2141,17 +2124,12 @@\n \t */\n \tpublic function has_cap( $db_cap ) {\n \t\t$version = $this->db_version();\n-\n-\t\tswitch ( strtolower( $db_cap ) ) {\n-\t\t\tcase 'collation' :    // @since 2.5.0\n-\t\t\tcase 'group_concat' : // @since 2.7.0\n-\t\t\tcase 'subqueries' :   // @since 2.7.0\n-\t\t\t\treturn version_compare( $version, '4.1', '>=' );\n-\t\t\tcase 'set_charset' :\n-\t\t\t\treturn version_compare( $version, '5.0.7', '>=' );\n-\t\t};\n-\n-\t\treturn false;\n+        return match (strtolower( $db_cap )) {\n+            // @since 2.7.0\n+            'collation', 'group_concat', 'subqueries' => version_compare( $version, '4.1', '>=' ),\n+            'set_charset' => version_compare( $version, '5.0.7', '>=' ),\n+            default => false,\n+        };\n \t}\n \n \t/**\n@@ -2165,7 +2143,7 @@\n \t * @return string The name of the calling function\n \t */\n \tpublic function get_caller() {\n-\t\treturn wp_debug_backtrace_summary( __CLASS__ );\n+\t\treturn wp_debug_backtrace_summary( self::class );\n \t}\n \n \t/**\n",
        "applied_rectors": [
          "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
          "Rector\\Php53\\Rector\\Ternary\\TernaryToElvisRector",
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php55\\Rector\\Class_\\ClassConstantToSelfClassRector",
          "Rector\\Php80\\Rector\\ClassConstFetch\\ClassOnThisVariableObjectRector",
          "Rector\\Php80\\Rector\\Class_\\ClassPropertyAssignToConstructorPromotionRector",
          "Rector\\Php80\\Rector\\FuncCall\\ClassOnObjectRector",
          "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
          "Rector\\Php80\\Rector\\NotIdentical\\StrContainsRector",
          "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
          "Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/extra_large_1000_plus/003_wp-db.php"
    ]
  }
}