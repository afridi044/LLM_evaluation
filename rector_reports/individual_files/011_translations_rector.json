{
  "file_path": "selected_100_files\\medium_201_500\\011_translations.php",
  "rector_analysis": {
    "php_version_changes": 8,
    "rules_triggered": [
      "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
      "Rector\\Php53\\Rector\\FuncCall\\DirNameFileConstantToDirConstantRector",
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
      "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
      "Rector\\Php72\\Rector\\FuncCall\\CreateFunctionToAnonymousFunctionRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector",
      "Rector\\Php83\\Rector\\ClassMethod\\AddOverrideAttributeToOverriddenMethodsRector"
    ],
    "changes_by_php_version": {
      "php_52": 1,
      "php_53": 1,
      "php_54": 1,
      "php_70": 1,
      "php_71": 1,
      "php_72": 1,
      "php_81": 1,
      "php_83": 1
    },
    "has_diff": true,
    "diff_line_count": 118
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:18:17.196934",
    "file_size_kb": 7.4,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/medium_201_500/011_translations.php",
        "diff": "--- Original\n+++ New\n@@ -7,12 +7,12 @@\n  * @subpackage translations\n  */\n \n-require_once dirname(__FILE__) . '/entry.php';\n+require_once __DIR__ . '/entry.php';\n \n if ( !class_exists( 'Translations' ) ):\n class Translations {\n-\tvar $entries = array();\n-\tvar $headers = array();\n+\tpublic $entries = [];\n+\tpublic $headers = [];\n \n \t/**\n \t * Add entry to the PO structure\n@@ -64,16 +64,16 @@\n \t}\n \n \tfunction get_header($header) {\n-\t\treturn isset($this->headers[$header])? $this->headers[$header] : false;\n+\t\treturn $this->headers[$header] ?? false;\n \t}\n \n \tfunction translate_entry(&$entry) {\n \t\t$key = $entry->key();\n-\t\treturn isset($this->entries[$key])? $this->entries[$key] : false;\n+\t\treturn $this->entries[$key] ?? false;\n \t}\n \n \tfunction translate($singular, $context=null) {\n-\t\t$entry = new Translation_Entry(array('singular' => $singular, 'context' => $context));\n+\t\t$entry = new Translation_Entry(['singular' => $singular, 'context' => $context]);\n \t\t$translated = $this->translate_entry($entry);\n \t\treturn ($translated && !empty($translated->translations))? $translated->translations[0] : $singular;\n \t}\n@@ -98,7 +98,7 @@\n \t}\n \n \tfunction translate_plural($singular, $plural, $count, $context = null) {\n-\t\t$entry = new Translation_Entry(array('singular' => $singular, 'plural' => $plural, 'context' => $context));\n+\t\t$entry = new Translation_Entry(['singular' => $singular, 'plural' => $plural, 'context' => $context]);\n \t\t$translated = $this->translate_entry($entry);\n \t\t$index = $this->select_plural_form($count);\n \t\t$total_plural_forms = $this->get_plural_forms_count();\n@@ -142,7 +142,7 @@\n \t */\n \tfunction gettext_select_plural_form($count) {\n \t\tif (!isset($this->_gettext_select_plural_form) || is_null($this->_gettext_select_plural_form)) {\n-\t\t\tlist( $nplurals, $expression ) = $this->nplurals_and_expression_from_header($this->get_header('Plural-Forms'));\n+\t\t\t[$nplurals, $expression] = $this->nplurals_and_expression_from_header($this->get_header('Plural-Forms'));\n \t\t\t$this->_nplurals = $nplurals;\n \t\t\t$this->_gettext_select_plural_form = $this->make_plural_form_function($nplurals, $expression);\n \t\t}\n@@ -150,12 +150,12 @@\n \t}\n \n \tfunction nplurals_and_expression_from_header($header) {\n-\t\tif (preg_match('/^\\s*nplurals\\s*=\\s*(\\d+)\\s*;\\s+plural\\s*=\\s*(.+)$/', $header, $matches)) {\n+\t\tif (preg_match('/^\\s*nplurals\\s*=\\s*(\\d+)\\s*;\\s+plural\\s*=\\s*(.+)$/', (string) $header, $matches)) {\n \t\t\t$nplurals = (int)$matches[1];\n \t\t\t$expression = trim($this->parenthesize_plural_exression($matches[2]));\n-\t\t\treturn array($nplurals, $expression);\n+\t\t\treturn [$nplurals, $expression];\n \t\t} else {\n-\t\t\treturn array(2, 'n != 1');\n+\t\t\treturn [2, 'n != 1'];\n \t\t}\n \t}\n \n@@ -168,7 +168,9 @@\n \t\t$func_body = \"\n \t\t\t\\$index = (int)($expression);\n \t\t\treturn (\\$index < $nplurals)? \\$index : $nplurals - 1;\";\n-\t\treturn create_function('$n', $func_body);\n+\t\treturn function ($n) use ($func_body) {\n+            eval($func_body);\n+        };\n \t}\n \n \t/**\n@@ -204,7 +206,7 @@\n \t}\n \n \tfunction make_headers($translation) {\n-\t\t$headers = array();\n+\t\t$headers = [];\n \t\t// sometimes \\ns are used instead of real new lines\n \t\t$translation = str_replace('\\n', \"\\n\", $translation);\n \t\t$lines = explode(\"\\n\", $translation);\n@@ -216,10 +218,11 @@\n \t\treturn $headers;\n \t}\n \n-\tfunction set_header($header, $value) {\n+\t#[\\Override]\n+    function set_header($header, $value) {\n \t\tparent::set_header($header, $value);\n \t\tif ('Plural-Forms' == $header) {\n-\t\t\tlist( $nplurals, $expression ) = $this->nplurals_and_expression_from_header($this->get_header('Plural-Forms'));\n+\t\t\t[$nplurals, $expression] = $this->nplurals_and_expression_from_header($this->get_header('Plural-Forms'));\n \t\t\t$this->_nplurals = $nplurals;\n \t\t\t$this->_gettext_select_plural_form = $this->make_plural_form_function($nplurals, $expression);\n \t\t}\n@@ -232,8 +235,8 @@\n  * Provides the same interface as Translations, but doesn't do anything\n  */\n class NOOP_Translations {\n-\tvar $entries = array();\n-\tvar $headers = array();\n+\tpublic $entries = [];\n+\tpublic $headers = [];\n \n \tfunction add_entry($entry) {\n \t\treturn true;\n",
        "applied_rectors": [
          "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
          "Rector\\Php53\\Rector\\FuncCall\\DirNameFileConstantToDirConstantRector",
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
          "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
          "Rector\\Php72\\Rector\\FuncCall\\CreateFunctionToAnonymousFunctionRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector",
          "Rector\\Php83\\Rector\\ClassMethod\\AddOverrideAttributeToOverriddenMethodsRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/medium_201_500/011_translations.php"
    ]
  }
}