{
  "file_path": "selected_100_files\\extra_large_1000_plus\\006_widgets.php",
  "rector_analysis": {
    "php_version_changes": 10,
    "rules_triggered": [
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php70\\Rector\\ClassMethod\\Php4ConstructorRector",
      "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
      "Rector\\Php80\\Rector\\ClassConstFetch\\ClassOnThisVariableObjectRector",
      "Rector\\Php80\\Rector\\Class_\\ClassPropertyAssignToConstructorPromotionRector",
      "Rector\\Php80\\Rector\\FuncCall\\ClassOnObjectRector",
      "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
      "Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector",
      "Rector\\TypeDeclaration\\Rector\\ClassMethod\\ReturnNeverTypeRector"
    ],
    "changes_by_php_version": {
      "php_54": 1,
      "php_70": 2,
      "php_80": 4,
      "php_81": 2
    },
    "has_diff": true,
    "diff_line_count": 514
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:17:57.094908",
    "file_size_kb": 46.6,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/extra_large_1000_plus/006_widgets.php",
        "diff": "--- Original\n+++ New\n@@ -23,8 +23,7 @@\n  */\n class WP_Widget {\n \n-\tpublic $id_base;\t\t\t// Root id for all widgets of this type.\n-\tpublic $name;\t\t\t\t// Name for this widget type.\n+\tpublic $id_base;\t\t\t\t// Name for this widget type.\n \tpublic $widget_options;\t// Option array passed to wp_register_sidebar_widget()\n \tpublic $control_options;\t// Option array passed to wp_register_widget_control()\n \n@@ -41,7 +40,7 @@\n \t * @param array $args Display arguments including before_title, after_title, before_widget, and after_widget.\n \t * @param array $instance The settings for the particular instance of the widget\n \t */\n-\tpublic function widget($args, $instance) {\n+\tpublic function widget($args, $instance): never {\n \t\tdie('function WP_Widget::widget() must be over-ridden in a sub-class.');\n \t}\n \n@@ -83,18 +82,17 @@\n \t *\t - width: required if more than 250px\n \t *\t - height: currently not used but may be needed in the future\n \t */\n-\tpublic function __construct( $id_base, $name, $widget_options = array(), $control_options = array() ) {\n-\t\t$this->id_base = empty($id_base) ? preg_replace( '/(wp_)?widget_/', '', strtolower(get_class($this)) ) : strtolower($id_base);\n-\t\t$this->name = $name;\n+\tpublic function __construct( $id_base, public $name, $widget_options = [], $control_options = [] ) {\n+\t\t$this->id_base = empty($id_base) ? preg_replace( '/(wp_)?widget_/', '', strtolower(static::class) ) : strtolower($id_base);\n \t\t$this->option_name = 'widget_' . $this->id_base;\n-\t\t$this->widget_options = wp_parse_args( $widget_options, array('classname' => $this->option_name) );\n-\t\t$this->control_options = wp_parse_args( $control_options, array('id_base' => $this->id_base) );\n+\t\t$this->widget_options = wp_parse_args( $widget_options, ['classname' => $this->option_name] );\n+\t\t$this->control_options = wp_parse_args( $control_options, ['id_base' => $this->id_base] );\n \t}\n \n \t/**\n \t * PHP4 constructor\n \t */\n-\tpublic function WP_Widget( $id_base, $name, $widget_options = array(), $control_options = array() ) {\n+\tpublic function WP_Widget( $id_base, $name, $widget_options = [], $control_options = [] ) {\n \t\tWP_Widget::__construct( $id_base, $name, $widget_options, $control_options );\n \t}\n \n@@ -152,15 +150,15 @@\n \t}\n \n \tpublic function _get_display_callback() {\n-\t\treturn array($this, 'display_callback');\n+\t\treturn $this->display_callback(...);\n \t}\n \n \tpublic function _get_update_callback() {\n-\t\treturn array($this, 'update_callback');\n+\t\treturn $this->update_callback(...);\n \t}\n \n \tpublic function _get_form_callback() {\n-\t\treturn array($this, 'form_callback');\n+\t\treturn $this->form_callback(...);\n \t}\n \n \t/**\n@@ -183,9 +181,9 @@\n \t *\tDo NOT over-ride this function. */\n \tpublic function display_callback( $args, $widget_args = 1 ) {\n \t\tif ( is_numeric($widget_args) )\n-\t\t\t$widget_args = array( 'number' => $widget_args );\n+\t\t\t$widget_args = [ 'number' => $widget_args ];\n \n-\t\t$widget_args = wp_parse_args( $widget_args, array( 'number' => -1 ) );\n+\t\t$widget_args = wp_parse_args( $widget_args, [ 'number' => -1 ] );\n \t\t$this->_set( $widget_args['number'] );\n \t\t$instance = $this->get_settings();\n \n@@ -256,7 +254,7 @@\n \t\t\t\t$settings = $_POST['widget-' . $this->id_base];\n \t\t\t} elseif ( isset($_POST['id_base']) && $_POST['id_base'] == $this->id_base ) {\n \t\t\t\t$num = $_POST['multi_number'] ? (int) $_POST['multi_number'] : (int) $_POST['widget_number'];\n-\t\t\t\t$settings = array( $num => array() );\n+\t\t\t\t$settings = [ $num => [] ];\n \t\t\t} else {\n \t\t\t\treturn;\n \t\t\t}\n@@ -265,7 +263,7 @@\n \t\t\t\t$new_instance = stripslashes_deep($new_instance);\n \t\t\t\t$this->_set($number);\n \n-\t\t\t\t$old_instance = isset($all_instances[$number]) ? $all_instances[$number] : array();\n+\t\t\t\t$old_instance = $all_instances[$number] ?? [];\n \n \t\t\t\t$was_cache_addition_suspended = wp_suspend_cache_addition();\n \t\t\t\tif ( $this->is_preview() && ! $was_cache_addition_suspended ) {\n@@ -311,15 +309,15 @@\n \t */\n \tpublic function form_callback( $widget_args = 1 ) {\n \t\tif ( is_numeric($widget_args) )\n-\t\t\t$widget_args = array( 'number' => $widget_args );\n+\t\t\t$widget_args = [ 'number' => $widget_args ];\n \n-\t\t$widget_args = wp_parse_args( $widget_args, array( 'number' => -1 ) );\n+\t\t$widget_args = wp_parse_args( $widget_args, [ 'number' => -1 ] );\n \t\t$all_instances = $this->get_settings();\n \n \t\tif ( -1 == $widget_args['number'] ) {\n \t\t\t// We echo out a form where 'number' can be set later\n \t\t\t$this->_set('__i__');\n-\t\t\t$instance = array();\n+\t\t\t$instance = [];\n \t\t} else {\n \t\t\t$this->_set($widget_args['number']);\n \t\t\t$instance = $all_instances[ $widget_args['number'] ];\n@@ -357,7 +355,7 @@\n \t\t\t * @param null      $return   Return null if new fields are added.\n \t\t\t * @param array     $instance An array of the widget's settings.\n \t\t\t */\n-\t\t\tdo_action_ref_array( 'in_widget_form', array( &$this, &$return, $instance ) );\n+\t\t\tdo_action_ref_array( 'in_widget_form', [ &$this, &$return, $instance ] );\n \t\t}\n \t\treturn $return;\n \t}\n@@ -364,9 +362,9 @@\n \n \t/** Helper function: Registers a single instance. */\n \tpublic function _register_one($number = -1) {\n-\t\twp_register_sidebar_widget(\t$this->id, $this->name,\t$this->_get_display_callback(), $this->widget_options, array( 'number' => $number ) );\n-\t\t_register_widget_update_callback( $this->id_base, $this->_get_update_callback(), $this->control_options, array( 'number' => -1 ) );\n-\t\t_register_widget_form_callback(\t$this->id, $this->name,\t$this->_get_form_callback(), $this->control_options, array( 'number' => $number ) );\n+\t\twp_register_sidebar_widget(\t$this->id, $this->name,\t$this->_get_display_callback(), $this->widget_options, [ 'number' => $number ] );\n+\t\t_register_widget_update_callback( $this->id_base, $this->_get_update_callback(), $this->control_options, [ 'number' => -1 ] );\n+\t\t_register_widget_form_callback(\t$this->id, $this->name,\t$this->_get_form_callback(), $this->control_options, [ 'number' => $number ] );\n \t}\n \n \tpublic function save_settings($settings) {\n@@ -381,7 +379,7 @@\n \t\t\t$settings = get_option($this->alt_option_name);\n \n \t\tif ( !is_array($settings) )\n-\t\t\t$settings = array();\n+\t\t\t$settings = [];\n \n \t\tif ( !empty($settings) && !array_key_exists('_multiwidget', $settings) ) {\n \t\t\t// old format, convert if single widget\n@@ -401,10 +399,10 @@\n  * @since 2.8.0\n  */\n class WP_Widget_Factory {\n-\tpublic $widgets = array();\n+\tpublic $widgets = [];\n \n-\tpublic function WP_Widget_Factory() {\n-\t\tadd_action( 'widgets_init', array( $this, '_register_widgets' ), 100 );\n+\tpublic function __construct() {\n+\t\tadd_action( 'widgets_init', $this->_register_widgets(...), 100 );\n \t}\n \n \tpublic function register($widget_class) {\n@@ -445,7 +443,7 @@\n  * @global array $wp_registered_sidebars\n  * @since 2.2.0\n  */\n-$wp_registered_sidebars = array();\n+$wp_registered_sidebars = [];\n \n /**\n  * Stores the registered widgets.\n@@ -453,7 +451,7 @@\n  * @global array $wp_registered_widgets\n  * @since 2.2.0\n  */\n-$wp_registered_widgets = array();\n+$wp_registered_widgets = [];\n \n /**\n  * Stores the registered widget control (options).\n@@ -461,18 +459,18 @@\n  * @global array $wp_registered_widget_controls\n  * @since 2.2.0\n  */\n-$wp_registered_widget_controls = array();\n-$wp_registered_widget_updates = array();\n+$wp_registered_widget_controls = [];\n+$wp_registered_widget_updates = [];\n \n /**\n  * Private\n  */\n-$_wp_sidebars_widgets = array();\n+$_wp_sidebars_widgets = [];\n \n /**\n  * Private\n  */\n-$GLOBALS['_wp_deprecated_widgets_callbacks'] = array(\n+$GLOBALS['_wp_deprecated_widgets_callbacks'] = [\n \t'wp_widget_pages',\n \t'wp_widget_pages_control',\n \t'wp_widget_calendar',\n@@ -495,7 +493,7 @@\n \t'wp_widget_rss_control',\n \t'wp_widget_recent_comments',\n \t'wp_widget_recent_comments_control'\n-);\n+];\n \n /* Template tags & API functions */\n \n@@ -561,7 +559,7 @@\n  * @param int $number Number of sidebars to create.\n  * @param string|array $args Builds Sidebar based off of 'name' and 'id' values.\n  */\n-function register_sidebars($number = 1, $args = array()) {\n+function register_sidebars($number = 1, $args = []) {\n \tglobal $wp_registered_sidebars;\n \t$number = (int) $number;\n \n@@ -574,7 +572,7 @@\n \t\tif ( $number > 1 )\n \t\t\t$_args['name'] = isset($args['name']) ? sprintf($args['name'], $i) : sprintf(__('Sidebar %d'), $i);\n \t\telse\n-\t\t\t$_args['name'] = isset($args['name']) ? $args['name'] : __('Sidebar');\n+\t\t\t$_args['name'] = $args['name'] ?? __('Sidebar');\n \n \t\t// Custom specified ID's are suffixed if they exist already.\n \t\t// Automatically generated sidebar names need to be suffixed regardless starting at -0\n@@ -636,12 +634,12 @@\n  * @param string|array $args Arguments for the sidebar being registered.\n  * @return string Sidebar ID added to $wp_registered_sidebars global.\n  */\n-function register_sidebar($args = array()) {\n+function register_sidebar($args = []) {\n \tglobal $wp_registered_sidebars;\n \n \t$i = count($wp_registered_sidebars) + 1;\n \n-\t$defaults = array(\n+\t$defaults = [\n \t\t'name' => sprintf(__('Sidebar %d'), $i ),\n \t\t'id' => \"sidebar-$i\",\n \t\t'description' => '',\n@@ -650,7 +648,7 @@\n \t\t'after_widget' => \"</li>\\n\",\n \t\t'before_title' => '<h2 class=\"widgettitle\">',\n \t\t'after_title' => \"</h2>\\n\",\n-\t);\n+\t];\n \n \t$sidebar = wp_parse_args( $args, $defaults );\n \n@@ -706,7 +704,7 @@\n  * @param mixed $params,... Widget parameters to add to widget.\n  * @return null Will return if $output_callback is empty after removing widget.\n  */\n-function wp_register_sidebar_widget($id, $name, $output_callback, $options = array()) {\n+function wp_register_sidebar_widget($id, $name, $output_callback, $options = []) {\n \tglobal $wp_registered_widgets, $wp_registered_widget_controls, $wp_registered_widget_updates, $_wp_deprecated_widgets_callbacks;\n \n \t$id = strtolower($id);\n@@ -727,14 +725,14 @@\n \t\treturn;\n \t}\n \n-\t$defaults = array('classname' => $output_callback);\n+\t$defaults = ['classname' => $output_callback];\n \t$options = wp_parse_args($options, $defaults);\n-\t$widget = array(\n+\t$widget = [\n \t\t'name' => $name,\n \t\t'id' => $id,\n \t\t'callback' => $output_callback,\n \t\t'params' => array_slice(func_get_args(), 4)\n-\t);\n+\t];\n \t$widget = array_merge($widget, $options);\n \n \tif ( is_callable($output_callback) && ( !isset($wp_registered_widgets[$id]) || did_action( 'widgets_init' ) ) ) {\n@@ -834,7 +832,7 @@\n  * @param array|string $options Optional. Widget options. See above long description.\n  * @param mixed $params,... Optional. Additional parameters to add to widget.\n  */\n-function wp_register_widget_control($id, $name, $control_callback, $options = array()) {\n+function wp_register_widget_control($id, $name, $control_callback, $options = []) {\n \tglobal $wp_registered_widget_controls, $wp_registered_widget_updates, $wp_registered_widgets, $_wp_deprecated_widgets_callbacks;\n \n \t$id = strtolower($id);\n@@ -856,17 +854,17 @@\n \tif ( isset($wp_registered_widget_controls[$id]) && !did_action( 'widgets_init' ) )\n \t\treturn;\n \n-\t$defaults = array('width' => 250, 'height' => 200 ); // height is never used\n+\t$defaults = ['width' => 250, 'height' => 200 ]; // height is never used\n \t$options = wp_parse_args($options, $defaults);\n \t$options['width'] = (int) $options['width'];\n \t$options['height'] = (int) $options['height'];\n \n-\t$widget = array(\n+\t$widget = [\n \t\t'name' => $name,\n \t\t'id' => $id,\n \t\t'callback' => $control_callback,\n \t\t'params' => array_slice(func_get_args(), 4)\n-\t);\n+\t];\n \t$widget = array_merge($widget, $options);\n \n \t$wp_registered_widget_controls[$id] = $widget;\n@@ -881,7 +879,7 @@\n \t$wp_registered_widget_updates[$id_base] = $widget;\n }\n \n-function _register_widget_update_callback($id_base, $update_callback, $options = array()) {\n+function _register_widget_update_callback($id_base, $update_callback, $options = []) {\n \tglobal $wp_registered_widget_updates;\n \n \tif ( isset($wp_registered_widget_updates[$id_base]) ) {\n@@ -890,19 +888,19 @@\n \t\treturn;\n \t}\n \n-\t$widget = array(\n+\t$widget = [\n \t\t'callback' => $update_callback,\n \t\t'params' => array_slice(func_get_args(), 3)\n-\t);\n+\t];\n \n \t$widget = array_merge($widget, $options);\n \t$wp_registered_widget_updates[$id_base] = $widget;\n }\n \n-function _register_widget_form_callback($id, $name, $form_callback, $options = array()) {\n+function _register_widget_form_callback($id, $name, $form_callback, $options = []) {\n \tglobal $wp_registered_widget_controls;\n \n-\t$id = strtolower($id);\n+\t$id = strtolower((string) $id);\n \n \tif ( empty($form_callback) ) {\n \t\tunset($wp_registered_widget_controls[$id]);\n@@ -912,17 +910,17 @@\n \tif ( isset($wp_registered_widget_controls[$id]) && !did_action( 'widgets_init' ) )\n \t\treturn;\n \n-\t$defaults = array('width' => 250, 'height' => 200 );\n+\t$defaults = ['width' => 250, 'height' => 200 ];\n \t$options = wp_parse_args($options, $defaults);\n \t$options['width'] = (int) $options['width'];\n \t$options['height'] = (int) $options['height'];\n \n-\t$widget = array(\n+\t$widget = [\n \t\t'name' => $name,\n \t\t'id' => $id,\n \t\t'callback' => $form_callback,\n \t\t'params' => array_slice(func_get_args(), 4)\n-\t);\n+\t];\n \t$widget = array_merge($widget, $options);\n \n \t$wp_registered_widget_controls[$id] = $widget;\n@@ -998,7 +996,7 @@\n \t\tif ( !isset($wp_registered_widgets[$id]) ) continue;\n \n \t\t$params = array_merge(\n-\t\t\tarray( array_merge( $sidebar, array('widget_id' => $id, 'widget_name' => $wp_registered_widgets[$id]['name']) ) ),\n+\t\t\t[ array_merge( $sidebar, ['widget_id' => $id, 'widget_name' => $wp_registered_widgets[$id]['name']] ) ],\n \t\t\t(array) $wp_registered_widgets[$id]['params']\n \t\t);\n \n@@ -1008,7 +1006,7 @@\n \t\t\tif ( is_string($cn) )\n \t\t\t\t$classname_ .= '_' . $cn;\n \t\t\telseif ( is_object($cn) )\n-\t\t\t\t$classname_ .= '_' . get_class($cn);\n+\t\t\t\t$classname_ .= '_' . $cn::class;\n \t\t}\n \t\t$classname_ = ltrim($classname_, '_');\n \t\t$params[0]['before_widget'] = sprintf($params[0]['before_widget'], $id, $classname_);\n@@ -1142,7 +1140,7 @@\n \n \tif ( is_array($sidebars_widgets) ) {\n \t\tforeach ( $sidebars_widgets as $sidebar => $widgets ) {\n-\t\t\tif ( $skip_inactive && ( 'wp_inactive_widgets' === $sidebar || 'orphaned_widgets' === substr( $sidebar, 0, 16 ) ) ) {\n+\t\t\tif ( $skip_inactive && ( 'wp_inactive_widgets' === $sidebar || str_starts_with($sidebar, 'orphaned_widgets') ) ) {\n \t\t\t\tcontinue;\n \t\t\t}\n \n@@ -1228,11 +1226,11 @@\n \t// to see if wp_convert_widget_settings() has made manipulations in memory.\n \tif ( !is_admin() ) {\n \t\tif ( empty($_wp_sidebars_widgets) )\n-\t\t\t$_wp_sidebars_widgets = get_option('sidebars_widgets', array());\n+\t\t\t$_wp_sidebars_widgets = get_option('sidebars_widgets', []);\n \n \t\t$sidebars_widgets = $_wp_sidebars_widgets;\n \t} else {\n-\t\t$sidebars_widgets = get_option('sidebars_widgets', array());\n+\t\t$sidebars_widgets = get_option('sidebars_widgets', []);\n \t}\n \n \tif ( is_array( $sidebars_widgets ) && isset($sidebars_widgets['array_version']) )\n@@ -1274,10 +1272,10 @@\n function wp_get_widget_defaults() {\n \tglobal $wp_registered_sidebars;\n \n-\t$defaults = array();\n+\t$defaults = [];\n \n \tforeach ( (array) $wp_registered_sidebars as $index => $sidebar )\n-\t\t$defaults[$index] = array();\n+\t\t$defaults[$index] = [];\n \n \treturn $defaults;\n }\n@@ -1306,7 +1304,7 @@\n \t}\n \n \tif ( $single ) {\n-\t\t$settings = array( 2 => $settings );\n+\t\t$settings = [ 2 => $settings ];\n \n \t\t// If loading from the front page, update sidebar in memory but don't save to options\n \t\tif ( is_admin() ) {\n@@ -1313,7 +1311,7 @@\n \t\t\t$sidebars_widgets = get_option('sidebars_widgets');\n \t\t} else {\n \t\t\tif ( empty($GLOBALS['_wp_sidebars_widgets']) )\n-\t\t\t\t$GLOBALS['_wp_sidebars_widgets'] = get_option('sidebars_widgets', array());\n+\t\t\t\t$GLOBALS['_wp_sidebars_widgets'] = get_option('sidebars_widgets', []);\n \t\t\t$sidebars_widgets = &$GLOBALS['_wp_sidebars_widgets'];\n \t\t}\n \n@@ -1350,7 +1348,7 @@\n  * @param array $args the widget's sidebar args\n  * @return void\n  **/\n-function the_widget($widget, $instance = array(), $args = array()) {\n+function the_widget($widget, $instance = [], $args = []) {\n \tglobal $wp_widget_factory;\n \n \t$widget_obj = $wp_widget_factory->widgets[$widget];\n@@ -1358,7 +1356,7 @@\n \t\treturn;\n \n \t$before_widget = sprintf('<div class=\"widget %s\">', $widget_obj->widget_options['classname'] );\n-\t$default_args = array( 'before_widget' => $before_widget, 'after_widget' => \"</div>\", 'before_title' => '<h2 class=\"widgettitle\">', 'after_title' => '</h2>' );\n+\t$default_args = [ 'before_widget' => $before_widget, 'after_widget' => \"</div>\", 'before_title' => '<h2 class=\"widgettitle\">', 'after_title' => '</h2>' ];\n \n \t$args = wp_parse_args($args, $default_args);\n \t$instance = wp_parse_args($instance);\n@@ -1382,7 +1380,7 @@\n  * Private\n  */\n function _get_widget_id_base($id) {\n-\treturn preg_replace( '/-[0-9]+$/', '', $id );\n+\treturn preg_replace( '/-[0-9]+$/', '', (string) $id );\n }\n \n /**\n@@ -1425,7 +1423,7 @@\n \t\t}\n \n \t\tforeach ( $_sidebars_widgets as $sidebar => $widgets ) {\n-\t\t\tif ( 'wp_inactive_widgets' === $sidebar || 'orphaned_widgets' === substr( $sidebar, 0, 16 ) ) {\n+\t\t\tif ( 'wp_inactive_widgets' === $sidebar || str_starts_with((string) $sidebar, 'orphaned_widgets') ) {\n \t\t\t\tcontinue;\n \t\t\t}\n \n@@ -1447,9 +1445,9 @@\n \t\tif ( $old == $registered_sidebar_keys )\n \t\t\treturn;\n \n-\t\t$_sidebars_widgets = array(\n-\t\t\t'wp_inactive_widgets' => !empty( $sidebars_widgets['wp_inactive_widgets'] ) ? $sidebars_widgets['wp_inactive_widgets'] : array()\n-\t\t);\n+\t\t$_sidebars_widgets = [\n+\t\t\t'wp_inactive_widgets' => !empty( $sidebars_widgets['wp_inactive_widgets'] ) ? $sidebars_widgets['wp_inactive_widgets'] : []\n+\t\t];\n \n \t\tunset( $sidebars_widgets['wp_inactive_widgets'] );\n \n@@ -1472,13 +1470,13 @@\n \t}\n \n \t// discard invalid, theme-specific widgets from sidebars\n-\t$shown_widgets = array();\n+\t$shown_widgets = [];\n \n \tforeach ( $_sidebars_widgets as $sidebar => $widgets ) {\n \t\tif ( !is_array($widgets) )\n \t\t\tcontinue;\n \n-\t\t$_widgets = array();\n+\t\t$_widgets = [];\n \t\tforeach ( $widgets as $widget ) {\n \t\t\tif ( isset($wp_registered_widgets[$widget]) )\n \t\t\t\t$_widgets[] = $widget;\n@@ -1492,12 +1490,12 @@\n \tunset($_sidebars_widgets, $_widgets);\n \n \t// find hidden/lost multi-widget instances\n-\t$lost_widgets = array();\n+\t$lost_widgets = [];\n \tforeach ( $wp_registered_widgets as $key => $val ) {\n \t\tif ( in_array($key, $shown_widgets, true) )\n \t\t\tcontinue;\n \n-\t\t$number = preg_replace('/.+?-([0-9]+)$/', '$1', $key);\n+\t\t$number = preg_replace('/.+?-([0-9]+)$/', '$1', (string) $key);\n \n \t\tif ( 2 > (int) $number )\n \t\t\tcontinue;\n",
        "applied_rectors": [
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php70\\Rector\\ClassMethod\\Php4ConstructorRector",
          "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
          "Rector\\Php80\\Rector\\ClassConstFetch\\ClassOnThisVariableObjectRector",
          "Rector\\Php80\\Rector\\Class_\\ClassPropertyAssignToConstructorPromotionRector",
          "Rector\\Php80\\Rector\\FuncCall\\ClassOnObjectRector",
          "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
          "Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector",
          "Rector\\TypeDeclaration\\Rector\\ClassMethod\\ReturnNeverTypeRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/extra_large_1000_plus/006_widgets.php"
    ]
  }
}