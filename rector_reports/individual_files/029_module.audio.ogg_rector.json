{
  "file_path": "selected_100_files\\large_500_1000\\029_module.audio.ogg.php",
  "rector_analysis": {
    "php_version_changes": 6,
    "rules_triggered": [
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php56\\Rector\\FuncCall\\PowToExpRector",
      "Rector\\Php70\\Rector\\MethodCall\\ThisCallOnStaticMethodToStaticCallRector",
      "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
      "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_54": 1,
      "php_56": 1,
      "php_70": 2,
      "php_80": 1,
      "php_81": 1
    },
    "has_diff": true,
    "diff_line_count": 177
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:19:24.420415",
    "file_size_kb": 29.9,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/large_500_1000/029_module.audio.ogg.php",
        "diff": "--- Original\n+++ New\n@@ -52,7 +52,7 @@\n \t\t$filedata = $this->fread($oggpageinfo['page_length']);\n \t\t$filedataoffset = 0;\n \n-\t\tif (substr($filedata, 0, 4) == 'fLaC') {\n+\t\tif (str_starts_with($filedata, 'fLaC')) {\n \n \t\t\t$info['audio']['dataformat']   = 'flac';\n \t\t\t$info['audio']['bitrate_mode'] = 'vbr';\n@@ -62,7 +62,7 @@\n \n \t\t\t$this->ParseVorbisPageHeader($filedata, $filedataoffset, $oggpageinfo);\n \n-\t\t} elseif (substr($filedata, 0, 8) == 'Speex   ') {\n+\t\t} elseif (str_starts_with($filedata, 'Speex   ')) {\n \n \t\t\t// http://www.speex.org/manual/node10.html\n \n@@ -102,11 +102,11 @@\n \t\t\t$info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['reserved2']              = getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset, 4));\n \t\t\t$filedataoffset += 4;\n \n-\t\t\t$info['speex']['speex_version'] = trim($info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['speex_version']);\n+\t\t\t$info['speex']['speex_version'] = trim((string) $info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['speex_version']);\n \t\t\t$info['speex']['sample_rate']   = $info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['rate'];\n \t\t\t$info['speex']['channels']      = $info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['nb_channels'];\n \t\t\t$info['speex']['vbr']           = (bool) $info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['vbr'];\n-\t\t\t$info['speex']['band_type']     = $this->SpeexBandModeLookup($info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['mode']);\n+\t\t\t$info['speex']['band_type']     = static::SpeexBandModeLookup($info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['mode']);\n \n \t\t\t$info['audio']['sample_rate']   = $info['speex']['sample_rate'];\n \t\t\t$info['audio']['channels']      = $info['speex']['channels'];\n@@ -115,7 +115,7 @@\n \t\t\t}\n \n \n-\t\t} elseif (substr($filedata, 0, 8) == \"fishead\\x00\") {\n+\t\t} elseif (str_starts_with($filedata, \"fishead\\x00\")) {\n \n \t\t\t// Ogg Skeleton version 3.0 Format Specification\n \t\t\t// http://xiph.org/ogg/doc/skeleton.html\n@@ -148,7 +148,7 @@\n \t\t\t\t$filedata = $this->fread($oggpageinfo['page_length']);\n \t\t\t\t$this->fseek($oggpageinfo['page_end_offset']);\n \n-\t\t\t\tif (substr($filedata, 0, 8) == \"fisbone\\x00\") {\n+\t\t\t\tif (str_starts_with($filedata, \"fisbone\\x00\")) {\n \n \t\t\t\t\t$filedataoffset = 8;\n \t\t\t\t\t$info['ogg']['skeleton']['fisbone']['raw']['message_header_offset']   = getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset,  4));\n@@ -185,7 +185,7 @@\n \t\t\t\t\t//break;\n \t\t\t\t}\n \t\t\t//} while ($oggpageinfo['page_seqno'] == 0);\n-\t\t\t} while (($oggpageinfo['page_seqno'] == 0) && (substr($filedata, 0, 8) != \"fisbone\\x00\"));\n+\t\t\t} while (($oggpageinfo['page_seqno'] == 0) && (!str_starts_with($filedata, \"fisbone\\x00\")));\n \n \t\t\t$this->fseek($oggpageinfo['page_start_offset']);\n \n@@ -286,7 +286,7 @@\n \n \t\t\t\t\t} elseif (($info['audio']['bitrate_mode'] == 'vbr') && ($info['audio']['channels'] == 2) && ($info['audio']['sample_rate'] >= 44100) && ($info['audio']['sample_rate'] <= 48000)) {\n \t\t\t\t\t\t// Set -q N on vbr files\n-\t\t\t\t\t\t$info['audio']['encoder_options'] = '-q '.$this->get_quality_from_nominal_bitrate($info['ogg']['bitrate_nominal']);\n+\t\t\t\t\t\t$info['audio']['encoder_options'] = '-q '.static::get_quality_from_nominal_bitrate($info['ogg']['bitrate_nominal']);\n \n \t\t\t\t\t}\n \t\t\t\t}\n@@ -305,16 +305,16 @@\n \t\t$info['audio']['dataformat'] = 'vorbis';\n \t\t$info['audio']['lossless']   = false;\n \n-\t\t$info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['packet_type'] = getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset, 1));\n+\t\t$info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['packet_type'] = getid3_lib::LittleEndian2Int(substr((string) $filedata, $filedataoffset, 1));\n \t\t$filedataoffset += 1;\n-\t\t$info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['stream_type'] = substr($filedata, $filedataoffset, 6); // hard-coded to 'vorbis'\n+\t\t$info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['stream_type'] = substr((string) $filedata, $filedataoffset, 6); // hard-coded to 'vorbis'\n \t\t$filedataoffset += 6;\n-\t\t$info['ogg']['bitstreamversion'] = getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset, 4));\n+\t\t$info['ogg']['bitstreamversion'] = getid3_lib::LittleEndian2Int(substr((string) $filedata, $filedataoffset, 4));\n \t\t$filedataoffset += 4;\n-\t\t$info['ogg']['numberofchannels'] = getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset, 1));\n+\t\t$info['ogg']['numberofchannels'] = getid3_lib::LittleEndian2Int(substr((string) $filedata, $filedataoffset, 1));\n \t\t$filedataoffset += 1;\n \t\t$info['audio']['channels']       = $info['ogg']['numberofchannels'];\n-\t\t$info['ogg']['samplerate']       = getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset, 4));\n+\t\t$info['ogg']['samplerate']       = getid3_lib::LittleEndian2Int(substr((string) $filedata, $filedataoffset, 4));\n \t\t$filedataoffset += 4;\n \t\tif ($info['ogg']['samplerate'] == 0) {\n \t\t\t$info['error'][] = 'Corrupt Ogg file: sample rate == zero';\n@@ -323,15 +323,15 @@\n \t\t$info['audio']['sample_rate']    = $info['ogg']['samplerate'];\n \t\t$info['ogg']['samples']          = 0; // filled in later\n \t\t$info['ogg']['bitrate_average']  = 0; // filled in later\n-\t\t$info['ogg']['bitrate_max']      = getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset, 4));\n+\t\t$info['ogg']['bitrate_max']      = getid3_lib::LittleEndian2Int(substr((string) $filedata, $filedataoffset, 4));\n \t\t$filedataoffset += 4;\n-\t\t$info['ogg']['bitrate_nominal']  = getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset, 4));\n+\t\t$info['ogg']['bitrate_nominal']  = getid3_lib::LittleEndian2Int(substr((string) $filedata, $filedataoffset, 4));\n \t\t$filedataoffset += 4;\n-\t\t$info['ogg']['bitrate_min']      = getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset, 4));\n+\t\t$info['ogg']['bitrate_min']      = getid3_lib::LittleEndian2Int(substr((string) $filedata, $filedataoffset, 4));\n \t\t$filedataoffset += 4;\n-\t\t$info['ogg']['blocksize_small']  = pow(2,  getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset, 1)) & 0x0F);\n-\t\t$info['ogg']['blocksize_large']  = pow(2, (getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset, 1)) & 0xF0) >> 4);\n-\t\t$info['ogg']['stop_bit']         = getid3_lib::LittleEndian2Int(substr($filedata, $filedataoffset, 1)); // must be 1, marks end of packet\n+\t\t$info['ogg']['blocksize_small']  = 2 ** (getid3_lib::LittleEndian2Int(substr((string) $filedata, $filedataoffset, 1)) & 0x0F);\n+\t\t$info['ogg']['blocksize_large']  = 2 ** ((getid3_lib::LittleEndian2Int(substr((string) $filedata, $filedataoffset, 1)) & 0xF0) >> 4);\n+\t\t$info['ogg']['stop_bit']         = getid3_lib::LittleEndian2Int(substr((string) $filedata, $filedataoffset, 1)); // must be 1, marks end of packet\n \n \t\t$info['audio']['bitrate_mode'] = 'vbr'; // overridden if actually abr\n \t\tif ($info['ogg']['bitrate_max'] == 0xFFFFFFFF) {\n@@ -440,7 +440,7 @@\n \t\t$commentdataoffset += 4;\n \t\t$info['avdataoffset'] = $CommentStartOffset + $commentdataoffset;\n \n-\t\t$basicfields = array('TITLE', 'ARTIST', 'ALBUM', 'TRACKNUMBER', 'GENRE', 'DATE', 'DESCRIPTION', 'COMMENT');\n+\t\t$basicfields = ['TITLE', 'ARTIST', 'ALBUM', 'TRACKNUMBER', 'GENRE', 'DATE', 'DESCRIPTION', 'COMMENT'];\n \t\t$ThisFileInfo_ogg_comments_raw = &$info['ogg']['comments_raw'];\n \t\tfor ($i = 0; $i < $CommentsCount; $i++) {\n \n@@ -466,7 +466,7 @@\n \t\t\t\t\t$commentdata .= $AsYetUnusedData;\n \n \t\t\t\t\t//$commentdata .= $this->fread($info['ogg']['pageheader'][$oggpageinfo['page_seqno']]['page_length']);\n-\t\t\t\t\t$commentdata .= $this->fread($this->OggPageSegmentLength($info['ogg']['pageheader'][$VorbisCommentPage], 1));\n+\t\t\t\t\t$commentdata .= $this->fread(static::OggPageSegmentLength($info['ogg']['pageheader'][$VorbisCommentPage], 1));\n \t\t\t\t}\n \n \t\t\t}\n@@ -527,7 +527,7 @@\n \n \t\t\t\t$commentexploded = explode('=', $commentstring, 2);\n \t\t\t\t$ThisFileInfo_ogg_comments_raw[$i]['key']   = strtoupper($commentexploded[0]);\n-\t\t\t\t$ThisFileInfo_ogg_comments_raw[$i]['value'] = (isset($commentexploded[1]) ? $commentexploded[1] : '');\n+\t\t\t\t$ThisFileInfo_ogg_comments_raw[$i]['value'] = ($commentexploded[1] ?? '');\n \n \t\t\t\tif ($ThisFileInfo_ogg_comments_raw[$i]['key'] == 'METADATA_BLOCK_PICTURE') {\n \n@@ -553,15 +553,15 @@\n \n \t\t\t\t\t$ogg = new self($this->getid3);\n \t\t\t\t\t$ogg->setStringMode($data);\n-\t\t\t\t\t$info['ogg']['comments']['picture'][] = array(\n+\t\t\t\t\t$info['ogg']['comments']['picture'][] = [\n \t\t\t\t\t\t'image_mime' => $imageinfo['mime'],\n \t\t\t\t\t\t'data'       => $ogg->saveAttachment('coverart', 0, strlen($data), $imageinfo['mime']),\n-\t\t\t\t\t);\n+\t\t\t\t\t];\n \t\t\t\t\tunset($ogg);\n \n \t\t\t\t} else {\n \n-\t\t\t\t\t$info['ogg']['comments'][strtolower($ThisFileInfo_ogg_comments_raw[$i]['key'])][] = $ThisFileInfo_ogg_comments_raw[$i]['value'];\n+\t\t\t\t\t$info['ogg']['comments'][strtolower((string) $ThisFileInfo_ogg_comments_raw[$i]['key'])][] = $ThisFileInfo_ogg_comments_raw[$i]['value'];\n \n \t\t\t\t}\n \n@@ -621,13 +621,13 @@\n \t}\n \n \tpublic static function SpeexBandModeLookup($mode) {\n-\t\tstatic $SpeexBandModeLookup = array();\n+\t\tstatic $SpeexBandModeLookup = [];\n \t\tif (empty($SpeexBandModeLookup)) {\n \t\t\t$SpeexBandModeLookup[0] = 'narrow';\n \t\t\t$SpeexBandModeLookup[1] = 'wide';\n \t\t\t$SpeexBandModeLookup[2] = 'ultra-wide';\n \t\t}\n-\t\treturn (isset($SpeexBandModeLookup[$mode]) ? $SpeexBandModeLookup[$mode] : null);\n+\t\treturn ($SpeexBandModeLookup[$mode] ?? null);\n \t}\n \n \n",
        "applied_rectors": [
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php56\\Rector\\FuncCall\\PowToExpRector",
          "Rector\\Php70\\Rector\\MethodCall\\ThisCallOnStaticMethodToStaticCallRector",
          "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
          "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/large_500_1000/029_module.audio.ogg.php"
    ]
  }
}