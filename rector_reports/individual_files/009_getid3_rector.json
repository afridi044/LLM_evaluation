{
  "file_path": "selected_100_files\\extra_large_1000_plus\\009_getid3.php",
  "rector_analysis": {
    "php_version_changes": 8,
    "rules_triggered": [
      "Rector\\Php53\\Rector\\FuncCall\\DirNameFileConstantToDirConstantRector",
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
      "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
      "Rector\\Php74\\Rector\\ArrayDimFetch\\CurlyToSquareBracketArrayStringRector",
      "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
      "Rector\\Php80\\Rector\\NotIdentical\\StrContainsRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_53": 1,
      "php_54": 1,
      "php_70": 1,
      "php_71": 1,
      "php_74": 1,
      "php_80": 2,
      "php_81": 1
    },
    "has_diff": true,
    "diff_line_count": 1023
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:18:09.779554",
    "file_size_kb": 61.2,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/extra_large_1000_plus/009_getid3.php",
        "diff": "--- Original\n+++ New\n@@ -15,7 +15,7 @@\n }\n // Get base path of getID3() - ONCE\n if (!defined('GETID3_INCLUDEPATH')) {\n-\tdefine('GETID3_INCLUDEPATH', dirname(__FILE__).DIRECTORY_SEPARATOR);\n+\tdefine('GETID3_INCLUDEPATH', __DIR__.DIRECTORY_SEPARATOR);\n }\n \n // attempt to define temp dir as something flexible but reliable\n@@ -32,18 +32,18 @@\n $open_basedir = ini_get('open_basedir');\n if ($open_basedir) {\n \t// e.g. \"/var/www/vhosts/getid3.org/httpdocs/:/tmp/\"\n-\t$temp_dir     = str_replace(array('/', '\\\\'), DIRECTORY_SEPARATOR, $temp_dir);\n-\t$open_basedir = str_replace(array('/', '\\\\'), DIRECTORY_SEPARATOR, $open_basedir);\n-\tif (substr($temp_dir, -1, 1) != DIRECTORY_SEPARATOR) {\n+\t$temp_dir     = str_replace(['/', '\\\\'], DIRECTORY_SEPARATOR, $temp_dir);\n+\t$open_basedir = str_replace(['/', '\\\\'], DIRECTORY_SEPARATOR, $open_basedir);\n+\tif (substr((string) $temp_dir, -1, 1) != DIRECTORY_SEPARATOR) {\n \t\t$temp_dir .= DIRECTORY_SEPARATOR;\n \t}\n \t$found_valid_tempdir = false;\n-\t$open_basedirs = explode(PATH_SEPARATOR, $open_basedir);\n+\t$open_basedirs = explode(PATH_SEPARATOR, (string) $open_basedir);\n \tforeach ($open_basedirs as $basedir) {\n-\t\tif (substr($basedir, -1, 1) != DIRECTORY_SEPARATOR) {\n+\t\tif (substr((string) $basedir, -1, 1) != DIRECTORY_SEPARATOR) {\n \t\t\t$basedir .= DIRECTORY_SEPARATOR;\n \t\t}\n-\t\tif (preg_match('#^'.preg_quote($basedir).'#', $temp_dir)) {\n+\t\tif (preg_match('#^'.preg_quote((string) $basedir).'#', (string) $temp_dir)) {\n \t\t\t$found_valid_tempdir = true;\n \t\t\tbreak;\n \t\t}\n@@ -121,10 +121,10 @@\n \n \t\t// Check memory\n \t\t$this->memory_limit = ini_get('memory_limit');\n-\t\tif (preg_match('#([0-9]+)M#i', $this->memory_limit, $matches)) {\n+\t\tif (preg_match('#([0-9]+)M#i', (string) $this->memory_limit, $matches)) {\n \t\t\t// could be stored as \"16M\" rather than 16777216 for example\n \t\t\t$this->memory_limit = $matches[1] * 1048576;\n-\t\t} elseif (preg_match('#([0-9]+)G#i', $this->memory_limit, $matches)) { // The 'G' modifier is available since PHP 5.1.0\n+\t\t} elseif (preg_match('#([0-9]+)G#i', (string) $this->memory_limit, $matches)) { // The 'G' modifier is available since PHP 5.1.0\n \t\t\t// could be stored as \"2G\" rather than 2147483648 for example\n \t\t\t$this->memory_limit = $matches[1] * 1073741824;\n \t\t}\n@@ -181,20 +181,20 @@\n \n \t\t\tif (!is_dir($helperappsdir)) {\n \t\t\t\t$this->startup_warning .= '\"'.$helperappsdir.'\" cannot be defined as GETID3_HELPERAPPSDIR because it does not exist';\n-\t\t\t} elseif (strpos(realpath($helperappsdir), ' ') !== false) {\n+\t\t\t} elseif (str_contains(realpath($helperappsdir), ' ')) {\n \t\t\t\t$DirPieces = explode(DIRECTORY_SEPARATOR, realpath($helperappsdir));\n-\t\t\t\t$path_so_far = array();\n+\t\t\t\t$path_so_far = [];\n \t\t\t\tforeach ($DirPieces as $key => $value) {\n-\t\t\t\t\tif (strpos($value, ' ') !== false) {\n+\t\t\t\t\tif (str_contains((string) $value, ' ')) {\n \t\t\t\t\t\tif (!empty($path_so_far)) {\n \t\t\t\t\t\t\t$commandline = 'dir /x '.escapeshellarg(implode(DIRECTORY_SEPARATOR, $path_so_far));\n \t\t\t\t\t\t\t$dir_listing = `$commandline`;\n-\t\t\t\t\t\t\t$lines = explode(\"\\n\", $dir_listing);\n+\t\t\t\t\t\t\t$lines = explode(\"\\n\", (string) $dir_listing);\n \t\t\t\t\t\t\tforeach ($lines as $line) {\n-\t\t\t\t\t\t\t\t$line = trim($line);\n-\t\t\t\t\t\t\t\tif (preg_match('#^([0-9/]{10}) +([0-9:]{4,5}( [AP]M)?) +(<DIR>|[0-9,]+) +([^ ]{0,11}) +(.+)$#', $line, $matches)) {\n-\t\t\t\t\t\t\t\t\tlist($dummy, $date, $time, $ampm, $filesize, $shortname, $filename) = $matches;\n-\t\t\t\t\t\t\t\t\tif ((strtoupper($filesize) == '<DIR>') && (strtolower($filename) == strtolower($value))) {\n+\t\t\t\t\t\t\t\t$line = trim((string) $line);\n+\t\t\t\t\t\t\t\tif (preg_match('#^([0-9/]{10}) +([0-9:]{4,5}( [AP]M)?) +(<DIR>|[0-9,]+) +([^ ]{0,11}) +(.+)$#', (string) $line, $matches)) {\n+\t\t\t\t\t\t\t\t\t[$dummy, $date, $time, $ampm, $filesize, $shortname, $filename] = $matches;\n+\t\t\t\t\t\t\t\t\tif ((strtoupper((string) $filesize) == '<DIR>') && (strtolower((string) $filename) == strtolower((string) $value))) {\n \t\t\t\t\t\t\t\t\t\t$value = $shortname;\n \t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t}\n@@ -248,17 +248,17 @@\n \n \t\t\t// init result array and set parameters\n \t\t\t$this->filename = $filename;\n-\t\t\t$this->info = array();\n+\t\t\t$this->info = [];\n \t\t\t$this->info['GETID3_VERSION']   = $this->version();\n \t\t\t$this->info['php_memory_limit'] = $this->memory_limit;\n \n \t\t\t// remote files not supported\n-\t\t\tif (preg_match('/^(ht|f)tp:\\/\\//', $filename)) {\n+\t\t\tif (preg_match('/^(ht|f)tp:\\/\\//', (string) $filename)) {\n \t\t\t\tthrow new getid3_exception('Remote files are not supported - please copy the file locally first');\n \t\t\t}\n \n \t\t\t$filename = str_replace('/', DIRECTORY_SEPARATOR, $filename);\n-\t\t\t$filename = preg_replace('#(.+)'.preg_quote(DIRECTORY_SEPARATOR).'{2,}#U', '\\1'.DIRECTORY_SEPARATOR, $filename);\n+\t\t\t$filename = preg_replace('#(.+)'.preg_quote(DIRECTORY_SEPARATOR).'{2,}#U', '\\1'.DIRECTORY_SEPARATOR, (string) $filename);\n \n \t\t\t// open local file\n \t\t\tif (is_readable($filename) && is_file($filename) && ($this->fp = fopen($filename, 'rb'))) {\n@@ -269,8 +269,8 @@\n \n \t\t\t$this->info['filesize'] = filesize($filename);\n \t\t\t// set redundant parameters - might be needed in some include file\n-\t\t\t$this->info['filename']     = basename($filename);\n-\t\t\t$this->info['filepath']     = str_replace('\\\\', '/', realpath(dirname($filename)));\n+\t\t\t$this->info['filename']     = basename((string) $filename);\n+\t\t\t$this->info['filepath']     = str_replace('\\\\', '/', realpath(dirname((string) $filename)));\n \t\t\t$this->info['filenamepath'] = $this->info['filepath'].'/'.$this->info['filename'];\n \n \n@@ -305,10 +305,10 @@\n \t\t\t$this->info['fileformat']          = '';                // filled in later\n \t\t\t$this->info['audio']['dataformat'] = '';                // filled in later, unset if not used\n \t\t\t$this->info['video']['dataformat'] = '';                // filled in later, unset if not used\n-\t\t\t$this->info['tags']                = array();           // filled in later, unset if not used\n-\t\t\t$this->info['error']               = array();           // filled in later, unset if not used\n-\t\t\t$this->info['warning']             = array();           // filled in later, unset if not used\n-\t\t\t$this->info['comments']            = array();           // filled in later, unset if not used\n+\t\t\t$this->info['tags']                = [];           // filled in later, unset if not used\n+\t\t\t$this->info['error']               = [];           // filled in later, unset if not used\n+\t\t\t$this->info['warning']             = [];           // filled in later, unset if not used\n+\t\t\t$this->info['comments']            = [];           // filled in later, unset if not used\n \t\t\t$this->info['encoding']            = $this->encoding;   // required by id3v2 and iso modules - can be unset at the end if desired\n \n \t\t\treturn true;\n@@ -327,7 +327,7 @@\n \t\t\t}\n \n \t\t\t// Handle tags\n-\t\t\tforeach (array('id3v2'=>'id3v2', 'id3v1'=>'id3v1', 'apetag'=>'ape', 'lyrics3'=>'lyrics3') as $tag_name => $tag_key) {\n+\t\t\tforeach (['id3v2'=>'id3v2', 'id3v1'=>'id3v1', 'apetag'=>'ape', 'lyrics3'=>'lyrics3'] as $tag_name => $tag_key) {\n \t\t\t\t$option_tag = 'option_tag_'.$tag_name;\n \t\t\t\tif ($this->$option_tag) {\n \t\t\t\t\t$this->include_module('tag.'.$tag_name);\n@@ -344,7 +344,7 @@\n \t\t\tif (isset($this->info['id3v2']['tag_offset_start'])) {\n \t\t\t\t$this->info['avdataoffset'] = max($this->info['avdataoffset'], $this->info['id3v2']['tag_offset_end']);\n \t\t\t}\n-\t\t\tforeach (array('id3v1'=>'id3v1', 'apetag'=>'ape', 'lyrics3'=>'lyrics3') as $tag_name => $tag_key) {\n+\t\t\tforeach (['id3v1'=>'id3v1', 'apetag'=>'ape', 'lyrics3'=>'lyrics3'] as $tag_name => $tag_key) {\n \t\t\t\tif (isset($this->info[$tag_key]['tag_offset_start'])) {\n \t\t\t\t\t$this->info['avdataend'] = min($this->info['avdataend'], $this->info[$tag_key]['tag_offset_start']);\n \t\t\t\t}\n@@ -354,11 +354,11 @@\n \t\t\tif (!$this->option_tag_id3v2) {\n \t\t\t\tfseek($this->fp, 0, SEEK_SET);\n \t\t\t\t$header = fread($this->fp, 10);\n-\t\t\t\tif ((substr($header, 0, 3) == 'ID3') && (strlen($header) == 10)) {\n+\t\t\t\tif ((str_starts_with((string) $header, 'ID3')) && (strlen((string) $header) == 10)) {\n \t\t\t\t\t$this->info['id3v2']['header']        = true;\n-\t\t\t\t\t$this->info['id3v2']['majorversion']  = ord($header{3});\n-\t\t\t\t\t$this->info['id3v2']['minorversion']  = ord($header{4});\n-\t\t\t\t\t$this->info['avdataoffset']          += getid3_lib::BigEndian2Int(substr($header, 6, 4), 1) + 10; // length of ID3v2 tag in 10-byte header doesn't include 10-byte header length\n+\t\t\t\t\t$this->info['id3v2']['majorversion']  = ord($header[3]);\n+\t\t\t\t\t$this->info['id3v2']['minorversion']  = ord($header[4]);\n+\t\t\t\t\t$this->info['avdataoffset']          += getid3_lib::BigEndian2Int(substr((string) $header, 6, 4), 1) + 10; // length of ID3v2 tag in 10-byte header doesn't include 10-byte header length\n \t\t\t\t}\n \t\t\t}\n \n@@ -406,7 +406,7 @@\n \n \t\t\t// module requires iconv support\n \t\t\t// Check encoding/iconv support\n-\t\t\tif (!empty($determined_format['iconv_req']) && !function_exists('iconv') && !in_array($this->encoding, array('ISO-8859-1', 'UTF-8', 'UTF-16LE', 'UTF-16BE', 'UTF-16'))) {\n+\t\t\tif (!empty($determined_format['iconv_req']) && !function_exists('iconv') && !in_array($this->encoding, ['ISO-8859-1', 'UTF-8', 'UTF-16LE', 'UTF-16BE', 'UTF-16'])) {\n \t\t\t\t$errormessage = 'iconv() support is required for this module ('.$determined_format['include'].') for encodings other than ISO-8859-1, UTF-8, UTF-16LE, UTF16-BE, UTF-16. ';\n \t\t\t\tif (GETID3_OS_ISWINDOWS) {\n \t\t\t\t\t$errormessage .= 'PHP does not have iconv() support. Please enable php_iconv.dll in php.ini, and copy iconv.dll from c:/php/dlls to c:/windows/system32';\n@@ -474,7 +474,7 @@\n \tpublic function error($message) {\n \t\t$this->CleanUp();\n \t\tif (!isset($this->info['error'])) {\n-\t\t\t$this->info['error'] = array();\n+\t\t\t$this->info['error'] = [];\n \t\t}\n \t\t$this->info['error'][] = $message;\n \t\treturn $this->info;\n@@ -492,7 +492,7 @@\n \tprivate function CleanUp() {\n \n \t\t// remove possible empty keys\n-\t\t$AVpossibleEmptyKeys = array('dataformat', 'bits_per_sample', 'encoder_options', 'streams', 'bitrate');\n+\t\t$AVpossibleEmptyKeys = ['dataformat', 'bits_per_sample', 'encoder_options', 'streams', 'bitrate'];\n \t\tforeach ($AVpossibleEmptyKeys as $dummy => $key) {\n \t\t\tif (empty($this->info['audio'][$key]) && isset($this->info['audio'][$key])) {\n \t\t\t\tunset($this->info['audio'][$key]);\n@@ -538,28 +538,28 @@\n \n \t// return array containing information about all supported formats\n \tpublic function GetFileFormatArray() {\n-\t\tstatic $format_info = array();\n+\t\tstatic $format_info = [];\n \t\tif (empty($format_info)) {\n-\t\t\t$format_info = array(\n+\t\t\t$format_info = [\n \n \t\t\t\t// Audio formats\n \n \t\t\t\t// AC-3   - audio      - Dolby AC-3 / Dolby Digital\n-\t\t\t\t'ac3'  => array(\n+\t\t\t\t'ac3'  => [\n \t\t\t\t\t\t\t'pattern'   => '^\\x0B\\x77',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'ac3',\n \t\t\t\t\t\t\t'mime_type' => 'audio/ac3',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// AAC  - audio       - Advanced Audio Coding (AAC) - ADIF format\n-\t\t\t\t'adif' => array(\n+\t\t\t\t'adif' => [\n \t\t\t\t\t\t\t'pattern'   => '^ADIF',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'aac',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n \t\t\t\t\t\t\t'fail_ape'  => 'WARNING',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n /*\n \t\t\t\t// AA   - audio       - Audible Audiobook\n@@ -571,94 +571,94 @@\n \t\t\t\t\t\t),\n */\n \t\t\t\t// AAC  - audio       - Advanced Audio Coding (AAC) - ADTS format (very similar to MP3)\n-\t\t\t\t'adts' => array(\n+\t\t\t\t'adts' => [\n \t\t\t\t\t\t\t'pattern'   => '^\\xFF[\\xF0-\\xF1\\xF8-\\xF9]',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'aac',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n \t\t\t\t\t\t\t'fail_ape'  => 'WARNING',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \n \t\t\t\t// AU   - audio       - NeXT/Sun AUdio (AU)\n-\t\t\t\t'au'   => array(\n+\t\t\t\t'au'   => [\n \t\t\t\t\t\t\t'pattern'   => '^\\.snd',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'au',\n \t\t\t\t\t\t\t'mime_type' => 'audio/basic',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// AVR  - audio       - Audio Visual Research\n-\t\t\t\t'avr'  => array(\n+\t\t\t\t'avr'  => [\n \t\t\t\t\t\t\t'pattern'   => '^2BIT',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'avr',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// BONK - audio       - Bonk v0.9+\n-\t\t\t\t'bonk' => array(\n+\t\t\t\t'bonk' => [\n \t\t\t\t\t\t\t'pattern'   => '^\\x00(BONK|INFO|META| ID3)',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'bonk',\n \t\t\t\t\t\t\t'mime_type' => 'audio/xmms-bonk',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// DSS  - audio       - Digital Speech Standard\n-\t\t\t\t'dss'  => array(\n+\t\t\t\t'dss'  => [\n \t\t\t\t\t\t\t'pattern'   => '^[\\x02-\\x03]ds[s2]',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'dss',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// DTS  - audio       - Dolby Theatre System\n-\t\t\t\t'dts'  => array(\n+\t\t\t\t'dts'  => [\n \t\t\t\t\t\t\t'pattern'   => '^\\x7F\\xFE\\x80\\x01',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'dts',\n \t\t\t\t\t\t\t'mime_type' => 'audio/dts',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// FLAC - audio       - Free Lossless Audio Codec\n-\t\t\t\t'flac' => array(\n+\t\t\t\t'flac' => [\n \t\t\t\t\t\t\t'pattern'   => '^fLaC',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'flac',\n \t\t\t\t\t\t\t'mime_type' => 'audio/x-flac',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// LA   - audio       - Lossless Audio (LA)\n-\t\t\t\t'la'   => array(\n+\t\t\t\t'la'   => [\n \t\t\t\t\t\t\t'pattern'   => '^LA0[2-4]',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'la',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// LPAC - audio       - Lossless Predictive Audio Compression (LPAC)\n-\t\t\t\t'lpac' => array(\n+\t\t\t\t'lpac' => [\n \t\t\t\t\t\t\t'pattern'   => '^LPAC',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'lpac',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// MIDI - audio       - MIDI (Musical Instrument Digital Interface)\n-\t\t\t\t'midi' => array(\n+\t\t\t\t'midi' => [\n \t\t\t\t\t\t\t'pattern'   => '^MThd',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'midi',\n \t\t\t\t\t\t\t'mime_type' => 'audio/midi',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// MAC  - audio       - Monkey's Audio Compressor\n-\t\t\t\t'mac'  => array(\n+\t\t\t\t'mac'  => [\n \t\t\t\t\t\t\t'pattern'   => '^MAC ',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'monkey',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n // has been known to produce false matches in random files (e.g. JPEGs), leave out until more precise matching available\n //\t\t\t\t// MOD  - audio       - MODule (assorted sub-formats)\n@@ -671,66 +671,66 @@\n //\t\t\t\t\t\t),\n \n \t\t\t\t// MOD  - audio       - MODule (Impulse Tracker)\n-\t\t\t\t'it'   => array(\n+\t\t\t\t'it'   => [\n \t\t\t\t\t\t\t'pattern'   => '^IMPM',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'mod',\n \t\t\t\t\t\t\t//'option'    => 'it',\n \t\t\t\t\t\t\t'mime_type' => 'audio/it',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// MOD  - audio       - MODule (eXtended Module, various sub-formats)\n-\t\t\t\t'xm'   => array(\n+\t\t\t\t'xm'   => [\n \t\t\t\t\t\t\t'pattern'   => '^Extended Module',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'mod',\n \t\t\t\t\t\t\t//'option'    => 'xm',\n \t\t\t\t\t\t\t'mime_type' => 'audio/xm',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// MOD  - audio       - MODule (ScreamTracker)\n-\t\t\t\t's3m'  => array(\n+\t\t\t\t's3m'  => [\n \t\t\t\t\t\t\t'pattern'   => '^.{44}SCRM',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'mod',\n \t\t\t\t\t\t\t//'option'    => 's3m',\n \t\t\t\t\t\t\t'mime_type' => 'audio/s3m',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// MPC  - audio       - Musepack / MPEGplus\n-\t\t\t\t'mpc'  => array(\n+\t\t\t\t'mpc'  => [\n \t\t\t\t\t\t\t'pattern'   => '^(MPCK|MP\\+|[\\x00\\x01\\x10\\x11\\x40\\x41\\x50\\x51\\x80\\x81\\x90\\x91\\xC0\\xC1\\xD0\\xD1][\\x20-37][\\x00\\x20\\x40\\x60\\x80\\xA0\\xC0\\xE0])',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'mpc',\n \t\t\t\t\t\t\t'mime_type' => 'audio/x-musepack',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// MP3  - audio       - MPEG-audio Layer 3 (very similar to AAC-ADTS)\n-\t\t\t\t'mp3'  => array(\n+\t\t\t\t'mp3'  => [\n \t\t\t\t\t\t\t'pattern'   => '^\\xFF[\\xE2-\\xE7\\xF2-\\xF7\\xFA-\\xFF][\\x00-\\x0B\\x10-\\x1B\\x20-\\x2B\\x30-\\x3B\\x40-\\x4B\\x50-\\x5B\\x60-\\x6B\\x70-\\x7B\\x80-\\x8B\\x90-\\x9B\\xA0-\\xAB\\xB0-\\xBB\\xC0-\\xCB\\xD0-\\xDB\\xE0-\\xEB\\xF0-\\xFB]',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'mp3',\n \t\t\t\t\t\t\t'mime_type' => 'audio/mpeg',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// OFR  - audio       - OptimFROG\n-\t\t\t\t'ofr'  => array(\n+\t\t\t\t'ofr'  => [\n \t\t\t\t\t\t\t'pattern'   => '^(\\*RIFF|OFR)',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'optimfrog',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// RKAU - audio       - RKive AUdio compressor\n-\t\t\t\t'rkau' => array(\n+\t\t\t\t'rkau' => [\n \t\t\t\t\t\t\t'pattern'   => '^RKA',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'rkau',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// SHN  - audio       - Shorten\n-\t\t\t\t'shn'  => array(\n+\t\t\t\t'shn'  => [\n \t\t\t\t\t\t\t'pattern'   => '^ajkg',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'shorten',\n@@ -737,94 +737,94 @@\n \t\t\t\t\t\t\t'mime_type' => 'audio/xmms-shn',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// TTA  - audio       - TTA Lossless Audio Compressor (http://tta.corecodec.org)\n-\t\t\t\t'tta'  => array(\n+\t\t\t\t'tta'  => [\n \t\t\t\t\t\t\t'pattern'   => '^TTA',  // could also be '^TTA(\\x01|\\x02|\\x03|2|1)'\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'tta',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// VOC  - audio       - Creative Voice (VOC)\n-\t\t\t\t'voc'  => array(\n+\t\t\t\t'voc'  => [\n \t\t\t\t\t\t\t'pattern'   => '^Creative Voice File',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'voc',\n \t\t\t\t\t\t\t'mime_type' => 'audio/voc',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// VQF  - audio       - transform-domain weighted interleave Vector Quantization Format (VQF)\n-\t\t\t\t'vqf'  => array(\n+\t\t\t\t'vqf'  => [\n \t\t\t\t\t\t\t'pattern'   => '^TWIN',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'vqf',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// WV  - audio        - WavPack (v4.0+)\n-\t\t\t\t'wv'   => array(\n+\t\t\t\t'wv'   => [\n \t\t\t\t\t\t\t'pattern'   => '^wvpk',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'wavpack',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \n \t\t\t\t// Audio-Video formats\n \n \t\t\t\t// ASF  - audio/video - Advanced Streaming Format, Windows Media Video, Windows Media Audio\n-\t\t\t\t'asf'  => array(\n+\t\t\t\t'asf'  => [\n \t\t\t\t\t\t\t'pattern'   => '^\\x30\\x26\\xB2\\x75\\x8E\\x66\\xCF\\x11\\xA6\\xD9\\x00\\xAA\\x00\\x62\\xCE\\x6C',\n \t\t\t\t\t\t\t'group'     => 'audio-video',\n \t\t\t\t\t\t\t'module'    => 'asf',\n \t\t\t\t\t\t\t'mime_type' => 'video/x-ms-asf',\n \t\t\t\t\t\t\t'iconv_req' => false,\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// BINK - audio/video - Bink / Smacker\n-\t\t\t\t'bink' => array(\n+\t\t\t\t'bink' => [\n \t\t\t\t\t\t\t'pattern'   => '^(BIK|SMK)',\n \t\t\t\t\t\t\t'group'     => 'audio-video',\n \t\t\t\t\t\t\t'module'    => 'bink',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// FLV  - audio/video - FLash Video\n-\t\t\t\t'flv' => array(\n+\t\t\t\t'flv' => [\n \t\t\t\t\t\t\t'pattern'   => '^FLV\\x01',\n \t\t\t\t\t\t\t'group'     => 'audio-video',\n \t\t\t\t\t\t\t'module'    => 'flv',\n \t\t\t\t\t\t\t'mime_type' => 'video/x-flv',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// MKAV - audio/video - Mastroka\n-\t\t\t\t'matroska' => array(\n+\t\t\t\t'matroska' => [\n \t\t\t\t\t\t\t'pattern'   => '^\\x1A\\x45\\xDF\\xA3',\n \t\t\t\t\t\t\t'group'     => 'audio-video',\n \t\t\t\t\t\t\t'module'    => 'matroska',\n \t\t\t\t\t\t\t'mime_type' => 'video/x-matroska', // may also be audio/x-matroska\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// MPEG - audio/video - MPEG (Moving Pictures Experts Group)\n-\t\t\t\t'mpeg' => array(\n+\t\t\t\t'mpeg' => [\n \t\t\t\t\t\t\t'pattern'   => '^\\x00\\x00\\x01(\\xBA|\\xB3)',\n \t\t\t\t\t\t\t'group'     => 'audio-video',\n \t\t\t\t\t\t\t'module'    => 'mpeg',\n \t\t\t\t\t\t\t'mime_type' => 'video/mpeg',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// NSV  - audio/video - Nullsoft Streaming Video (NSV)\n-\t\t\t\t'nsv'  => array(\n+\t\t\t\t'nsv'  => [\n \t\t\t\t\t\t\t'pattern'   => '^NSV[sf]',\n \t\t\t\t\t\t\t'group'     => 'audio-video',\n \t\t\t\t\t\t\t'module'    => 'nsv',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// Ogg  - audio/video - Ogg (Ogg-Vorbis, Ogg-FLAC, Speex, Ogg-Theora(*), Ogg-Tarkin(*))\n-\t\t\t\t'ogg'  => array(\n+\t\t\t\t'ogg'  => [\n \t\t\t\t\t\t\t'pattern'   => '^OggS',\n \t\t\t\t\t\t\t'group'     => 'audio',\n \t\t\t\t\t\t\t'module'    => 'ogg',\n@@ -831,54 +831,54 @@\n \t\t\t\t\t\t\t'mime_type' => 'application/ogg',\n \t\t\t\t\t\t\t'fail_id3'  => 'WARNING',\n \t\t\t\t\t\t\t'fail_ape'  => 'WARNING',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// QT   - audio/video - Quicktime\n-\t\t\t\t'quicktime' => array(\n+\t\t\t\t'quicktime' => [\n \t\t\t\t\t\t\t'pattern'   => '^.{4}(cmov|free|ftyp|mdat|moov|pnot|skip|wide)',\n \t\t\t\t\t\t\t'group'     => 'audio-video',\n \t\t\t\t\t\t\t'module'    => 'quicktime',\n \t\t\t\t\t\t\t'mime_type' => 'video/quicktime',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// RIFF - audio/video - Resource Interchange File Format (RIFF) / WAV / AVI / CD-audio / SDSS = renamed variant used by SmartSound QuickTracks (www.smartsound.com) / FORM = Audio Interchange File Format (AIFF)\n-\t\t\t\t'riff' => array(\n+\t\t\t\t'riff' => [\n \t\t\t\t\t\t\t'pattern'   => '^(RIFF|SDSS|FORM)',\n \t\t\t\t\t\t\t'group'     => 'audio-video',\n \t\t\t\t\t\t\t'module'    => 'riff',\n \t\t\t\t\t\t\t'mime_type' => 'audio/x-wave',\n \t\t\t\t\t\t\t'fail_ape'  => 'WARNING',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// Real - audio/video - RealAudio, RealVideo\n-\t\t\t\t'real' => array(\n+\t\t\t\t'real' => [\n \t\t\t\t\t\t\t'pattern'   => '^(\\\\.RMF|\\\\.ra)',\n \t\t\t\t\t\t\t'group'     => 'audio-video',\n \t\t\t\t\t\t\t'module'    => 'real',\n \t\t\t\t\t\t\t'mime_type' => 'audio/x-realaudio',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// SWF - audio/video - ShockWave Flash\n-\t\t\t\t'swf' => array(\n+\t\t\t\t'swf' => [\n \t\t\t\t\t\t\t'pattern'   => '^(F|C)WS',\n \t\t\t\t\t\t\t'group'     => 'audio-video',\n \t\t\t\t\t\t\t'module'    => 'swf',\n \t\t\t\t\t\t\t'mime_type' => 'application/x-shockwave-flash',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// TS - audio/video - MPEG-2 Transport Stream\n-\t\t\t\t'ts' => array(\n+\t\t\t\t'ts' => [\n \t\t\t\t\t\t\t'pattern'   => '^(\\x47.{187}){10,}', // packets are 188 bytes long and start with 0x47 \"G\".  Check for at least 10 packets matching this pattern\n \t\t\t\t\t\t\t'group'     => 'audio-video',\n \t\t\t\t\t\t\t'module'    => 'ts',\n \t\t\t\t\t\t\t'mime_type' => 'video/MP2T',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \n \t\t\t\t// Still-Image formats\n \n \t\t\t\t// BMP  - still image - Bitmap (Windows, OS/2; uncompressed, RLE8, RLE4)\n-\t\t\t\t'bmp'  => array(\n+\t\t\t\t'bmp'  => [\n \t\t\t\t\t\t\t'pattern'   => '^BM',\n \t\t\t\t\t\t\t'group'     => 'graphic',\n \t\t\t\t\t\t\t'module'    => 'bmp',\n@@ -885,10 +885,10 @@\n \t\t\t\t\t\t\t'mime_type' => 'image/bmp',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// GIF  - still image - Graphics Interchange Format\n-\t\t\t\t'gif'  => array(\n+\t\t\t\t'gif'  => [\n \t\t\t\t\t\t\t'pattern'   => '^GIF',\n \t\t\t\t\t\t\t'group'     => 'graphic',\n \t\t\t\t\t\t\t'module'    => 'gif',\n@@ -895,10 +895,10 @@\n \t\t\t\t\t\t\t'mime_type' => 'image/gif',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// JPEG - still image - Joint Photographic Experts Group (JPEG)\n-\t\t\t\t'jpg'  => array(\n+\t\t\t\t'jpg'  => [\n \t\t\t\t\t\t\t'pattern'   => '^\\xFF\\xD8\\xFF',\n \t\t\t\t\t\t\t'group'     => 'graphic',\n \t\t\t\t\t\t\t'module'    => 'jpg',\n@@ -905,10 +905,10 @@\n \t\t\t\t\t\t\t'mime_type' => 'image/jpeg',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// PCD  - still image - Kodak Photo CD\n-\t\t\t\t'pcd'  => array(\n+\t\t\t\t'pcd'  => [\n \t\t\t\t\t\t\t'pattern'   => '^.{2048}PCD_IPI\\x00',\n \t\t\t\t\t\t\t'group'     => 'graphic',\n \t\t\t\t\t\t\t'module'    => 'pcd',\n@@ -915,11 +915,11 @@\n \t\t\t\t\t\t\t'mime_type' => 'image/x-photo-cd',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \n \t\t\t\t// PNG  - still image - Portable Network Graphics (PNG)\n-\t\t\t\t'png'  => array(\n+\t\t\t\t'png'  => [\n \t\t\t\t\t\t\t'pattern'   => '^\\x89\\x50\\x4E\\x47\\x0D\\x0A\\x1A\\x0A',\n \t\t\t\t\t\t\t'group'     => 'graphic',\n \t\t\t\t\t\t\t'module'    => 'png',\n@@ -926,11 +926,11 @@\n \t\t\t\t\t\t\t'mime_type' => 'image/png',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \n \t\t\t\t// SVG  - still image - Scalable Vector Graphics (SVG)\n-\t\t\t\t'svg'  => array(\n+\t\t\t\t'svg'  => [\n \t\t\t\t\t\t\t'pattern'   => '(<!DOCTYPE svg PUBLIC |xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\")',\n \t\t\t\t\t\t\t'group'     => 'graphic',\n \t\t\t\t\t\t\t'module'    => 'svg',\n@@ -937,11 +937,11 @@\n \t\t\t\t\t\t\t'mime_type' => 'image/svg+xml',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \n \t\t\t\t// TIFF - still image - Tagged Information File Format (TIFF)\n-\t\t\t\t'tiff' => array(\n+\t\t\t\t'tiff' => [\n \t\t\t\t\t\t\t'pattern'   => '^(II\\x2A\\x00|MM\\x00\\x2A)',\n \t\t\t\t\t\t\t'group'     => 'graphic',\n \t\t\t\t\t\t\t'module'    => 'tiff',\n@@ -948,11 +948,11 @@\n \t\t\t\t\t\t\t'mime_type' => 'image/tiff',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \n \t\t\t\t// EFAX - still image - eFax (TIFF derivative)\n-\t\t\t\t'efax'  => array(\n+\t\t\t\t'efax'  => [\n \t\t\t\t\t\t\t'pattern'   => '^\\xDC\\xFE',\n \t\t\t\t\t\t\t'group'     => 'graphic',\n \t\t\t\t\t\t\t'module'    => 'efax',\n@@ -959,13 +959,13 @@\n \t\t\t\t\t\t\t'mime_type' => 'image/efax',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \n \t\t\t\t// Data formats\n \n \t\t\t\t// ISO  - data        - International Standards Organization (ISO) CD-ROM Image\n-\t\t\t\t'iso'  => array(\n+\t\t\t\t'iso'  => [\n \t\t\t\t\t\t\t'pattern'   => '^.{32769}CD001',\n \t\t\t\t\t\t\t'group'     => 'misc',\n \t\t\t\t\t\t\t'module'    => 'iso',\n@@ -973,10 +973,10 @@\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n \t\t\t\t\t\t\t'iconv_req' => false,\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// RAR  - data        - RAR compressed data\n-\t\t\t\t'rar'  => array(\n+\t\t\t\t'rar'  => [\n \t\t\t\t\t\t\t'pattern'   => '^Rar\\!',\n \t\t\t\t\t\t\t'group'     => 'archive',\n \t\t\t\t\t\t\t'module'    => 'rar',\n@@ -983,10 +983,10 @@\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// SZIP - audio/data  - SZIP compressed data\n-\t\t\t\t'szip' => array(\n+\t\t\t\t'szip' => [\n \t\t\t\t\t\t\t'pattern'   => '^SZ\\x0A\\x04',\n \t\t\t\t\t\t\t'group'     => 'archive',\n \t\t\t\t\t\t\t'module'    => 'szip',\n@@ -993,10 +993,10 @@\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// TAR  - data        - TAR compressed data\n-\t\t\t\t'tar'  => array(\n+\t\t\t\t'tar'  => [\n \t\t\t\t\t\t\t'pattern'   => '^.{100}[0-9\\x20]{7}\\x00[0-9\\x20]{7}\\x00[0-9\\x20]{7}\\x00[0-9\\x20\\x00]{12}[0-9\\x20\\x00]{12}',\n \t\t\t\t\t\t\t'group'     => 'archive',\n \t\t\t\t\t\t\t'module'    => 'tar',\n@@ -1003,10 +1003,10 @@\n \t\t\t\t\t\t\t'mime_type' => 'application/x-tar',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// GZIP  - data        - GZIP compressed data\n-\t\t\t\t'gz'  => array(\n+\t\t\t\t'gz'  => [\n \t\t\t\t\t\t\t'pattern'   => '^\\x1F\\x8B\\x08',\n \t\t\t\t\t\t\t'group'     => 'archive',\n \t\t\t\t\t\t\t'module'    => 'gzip',\n@@ -1013,10 +1013,10 @@\n \t\t\t\t\t\t\t'mime_type' => 'application/x-gzip',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// ZIP  - data         - ZIP compressed data\n-\t\t\t\t'zip'  => array(\n+\t\t\t\t'zip'  => [\n \t\t\t\t\t\t\t'pattern'   => '^PK\\x03\\x04',\n \t\t\t\t\t\t\t'group'     => 'archive',\n \t\t\t\t\t\t\t'module'    => 'zip',\n@@ -1023,13 +1023,13 @@\n \t\t\t\t\t\t\t'mime_type' => 'application/zip',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \n \t\t\t\t// Misc other formats\n \n \t\t\t\t// PAR2 - data        - Parity Volume Set Specification 2.0\n-\t\t\t\t'par2' => array (\n+\t\t\t\t'par2' =>  [\n \t\t\t\t\t\t\t'pattern'   => '^PAR2\\x00PKT',\n \t\t\t\t\t\t\t'group'     => 'misc',\n \t\t\t\t\t\t\t'module'    => 'par2',\n@@ -1036,10 +1036,10 @@\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// PDF  - data        - Portable Document Format\n-\t\t\t\t'pdf'  => array(\n+\t\t\t\t'pdf'  => [\n \t\t\t\t\t\t\t'pattern'   => '^\\x25PDF',\n \t\t\t\t\t\t\t'group'     => 'misc',\n \t\t\t\t\t\t\t'module'    => 'pdf',\n@@ -1046,10 +1046,10 @@\n \t\t\t\t\t\t\t'mime_type' => 'application/pdf',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t// MSOFFICE  - data   - ZIP compressed data\n-\t\t\t\t'msoffice' => array(\n+\t\t\t\t'msoffice' => [\n \t\t\t\t\t\t\t'pattern'   => '^\\xD0\\xCF\\x11\\xE0\\xA1\\xB1\\x1A\\xE1', // D0CF11E == DOCFILE == Microsoft Office Document\n \t\t\t\t\t\t\t'group'     => 'misc',\n \t\t\t\t\t\t\t'module'    => 'msoffice',\n@@ -1056,17 +1056,17 @@\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n \t\t\t\t\t\t\t'fail_id3'  => 'ERROR',\n \t\t\t\t\t\t\t'fail_ape'  => 'ERROR',\n-\t\t\t\t\t\t),\n+\t\t\t\t\t\t],\n \n \t\t\t\t // CUE  - data       - CUEsheet (index to single-file disc images)\n-\t\t\t\t 'cue' => array(\n+\t\t\t\t 'cue' => [\n \t\t\t\t\t\t\t'pattern'   => '', // empty pattern means cannot be automatically detected, will fall through all other formats and match based on filename and very basic file contents\n \t\t\t\t\t\t\t'group'     => 'misc',\n \t\t\t\t\t\t\t'module'    => 'cue',\n \t\t\t\t\t\t\t'mime_type' => 'application/octet-stream',\n-\t\t\t\t\t\t   ),\n+\t\t\t\t\t\t   ],\n \n-\t\t\t);\n+\t\t\t];\n \t\t}\n \n \t\treturn $format_info;\n@@ -1084,7 +1084,7 @@\n \t\tforeach ($this->GetFileFormatArray() as $format_name => $info) {\n \t\t\t// The /s switch on preg_match() forces preg_match() NOT to treat\n \t\t\t// newline (0x0A) characters as special chars but do a binary match\n-\t\t\tif (!empty($info['pattern']) && preg_match('#'.$info['pattern'].'#s', $filedata)) {\n+\t\t\tif (!empty($info['pattern']) && preg_match('#'.$info['pattern'].'#s', (string) $filedata)) {\n \t\t\t\t$info['include'] = 'module.'.$info['group'].'.'.$info['module'].'.php';\n \t\t\t\treturn $info;\n \t\t\t}\n@@ -1091,7 +1091,7 @@\n \t\t}\n \n \n-\t\tif (preg_match('#\\.mp[123a]$#i', $filename)) {\n+\t\tif (preg_match('#\\.mp[123a]$#i', (string) $filename)) {\n \t\t\t// Too many mp3 encoders on the market put gabage in front of mpeg files\n \t\t\t// use assume format on these if format detection failed\n \t\t\t$GetFileFormatArray = $this->GetFileFormatArray();\n@@ -1098,7 +1098,7 @@\n \t\t\t$info = $GetFileFormatArray['mp3'];\n \t\t\t$info['include'] = 'module.'.$info['group'].'.'.$info['module'].'.php';\n \t\t\treturn $info;\n-\t\t} elseif (preg_match('/\\.cue$/i', $filename) && preg_match('#FILE \"[^\"]+\" (BINARY|MOTOROLA|AIFF|WAVE|MP3)#', $filedata)) {\n+\t\t} elseif (preg_match('/\\.cue$/i', (string) $filename) && preg_match('#FILE \"[^\"]+\" (BINARY|MOTOROLA|AIFF|WAVE|MP3)#', (string) $filedata)) {\n \t\t\t// there's not really a useful consistent \"magic\" at the beginning of .cue files to identify them\n \t\t\t// so until I think of something better, just go by filename if all other format checks fail\n \t\t\t// and verify there's at least one instance of \"TRACK xx AUDIO\" in the file\n@@ -1141,32 +1141,32 @@\n \t\t// key name => array (tag name, character encoding)\n \t\tstatic $tags;\n \t\tif (empty($tags)) {\n-\t\t\t$tags = array(\n-\t\t\t\t'asf'       => array('asf'           , 'UTF-16LE'),\n-\t\t\t\t'midi'      => array('midi'          , 'ISO-8859-1'),\n-\t\t\t\t'nsv'       => array('nsv'           , 'ISO-8859-1'),\n-\t\t\t\t'ogg'       => array('vorbiscomment' , 'UTF-8'),\n-\t\t\t\t'png'       => array('png'           , 'UTF-8'),\n-\t\t\t\t'tiff'      => array('tiff'          , 'ISO-8859-1'),\n-\t\t\t\t'quicktime' => array('quicktime'     , 'UTF-8'),\n-\t\t\t\t'real'      => array('real'          , 'ISO-8859-1'),\n-\t\t\t\t'vqf'       => array('vqf'           , 'ISO-8859-1'),\n-\t\t\t\t'zip'       => array('zip'           , 'ISO-8859-1'),\n-\t\t\t\t'riff'      => array('riff'          , 'ISO-8859-1'),\n-\t\t\t\t'lyrics3'   => array('lyrics3'       , 'ISO-8859-1'),\n-\t\t\t\t'id3v1'     => array('id3v1'         , $this->encoding_id3v1),\n-\t\t\t\t'id3v2'     => array('id3v2'         , 'UTF-8'), // not according to the specs (every frame can have a different encoding), but getID3() force-converts all encodings to UTF-8\n-\t\t\t\t'ape'       => array('ape'           , 'UTF-8'),\n-\t\t\t\t'cue'       => array('cue'           , 'ISO-8859-1'),\n-\t\t\t\t'matroska'  => array('matroska'      , 'UTF-8'),\n-\t\t\t\t'flac'      => array('vorbiscomment' , 'UTF-8'),\n-\t\t\t\t'divxtag'   => array('divx'          , 'ISO-8859-1'),\n-\t\t\t);\n+\t\t\t$tags = [\n+\t\t\t\t'asf'       => ['asf'           , 'UTF-16LE'],\n+\t\t\t\t'midi'      => ['midi'          , 'ISO-8859-1'],\n+\t\t\t\t'nsv'       => ['nsv'           , 'ISO-8859-1'],\n+\t\t\t\t'ogg'       => ['vorbiscomment' , 'UTF-8'],\n+\t\t\t\t'png'       => ['png'           , 'UTF-8'],\n+\t\t\t\t'tiff'      => ['tiff'          , 'ISO-8859-1'],\n+\t\t\t\t'quicktime' => ['quicktime'     , 'UTF-8'],\n+\t\t\t\t'real'      => ['real'          , 'ISO-8859-1'],\n+\t\t\t\t'vqf'       => ['vqf'           , 'ISO-8859-1'],\n+\t\t\t\t'zip'       => ['zip'           , 'ISO-8859-1'],\n+\t\t\t\t'riff'      => ['riff'          , 'ISO-8859-1'],\n+\t\t\t\t'lyrics3'   => ['lyrics3'       , 'ISO-8859-1'],\n+\t\t\t\t'id3v1'     => ['id3v1'         , $this->encoding_id3v1],\n+\t\t\t\t'id3v2'     => ['id3v2'         , 'UTF-8'], // not according to the specs (every frame can have a different encoding), but getID3() force-converts all encodings to UTF-8\n+\t\t\t\t'ape'       => ['ape'           , 'UTF-8'],\n+\t\t\t\t'cue'       => ['cue'           , 'ISO-8859-1'],\n+\t\t\t\t'matroska'  => ['matroska'      , 'UTF-8'],\n+\t\t\t\t'flac'      => ['vorbiscomment' , 'UTF-8'],\n+\t\t\t\t'divxtag'   => ['divx'          , 'ISO-8859-1'],\n+\t\t\t];\n \t\t}\n \n \t\t// loop through comments array\n \t\tforeach ($tags as $comment_name => $tagname_encoding_array) {\n-\t\t\tlist($tag_name, $encoding) = $tagname_encoding_array;\n+\t\t\t[$tag_name, $encoding] = $tagname_encoding_array;\n \n \t\t\t// fill in default encoding type if not already present\n \t\t\tif (isset($this->info[$comment_name]) && !isset($this->info[$comment_name]['encoding'])) {\n@@ -1178,10 +1178,10 @@\n \t\t\t\tforeach ($this->info[$comment_name]['comments'] as $tag_key => $valuearray) {\n \t\t\t\t\tforeach ($valuearray as $key => $value) {\n \t\t\t\t\t\tif (is_string($value)) {\n-\t\t\t\t\t\t\t$value = trim($value, \" \\r\\n\\t\"); // do not trim nulls from $value!! Unicode characters will get mangled if trailing nulls are removed!\n+\t\t\t\t\t\t\t$value = trim((string) $value, \" \\r\\n\\t\"); // do not trim nulls from $value!! Unicode characters will get mangled if trailing nulls are removed!\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif ($value) {\n-\t\t\t\t\t\t\t$this->info['tags'][trim($tag_name)][trim($tag_key)][] = $value;\n+\t\t\t\t\t\t\t$this->info['tags'][trim((string) $tag_name)][trim((string) $tag_key)][] = $value;\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tif ($tag_key == 'picture') {\n@@ -1215,7 +1215,7 @@\n \t\t// pictures can take up a lot of space, and we don't need multiple copies of them\n \t\t// let there be a single copy in [comments][picture], and not elsewhere\n \t\tif (!empty($this->info['tags'])) {\n-\t\t\t$unset_keys = array('tags', 'tags_html');\n+\t\t\t$unset_keys = ['tags', 'tags_html'];\n \t\t\tforeach ($this->info['tags'] as $tagtype => $tagarray) {\n \t\t\t\tforeach ($tagarray as $tagname => $tagdata) {\n \t\t\t\t\tif ($tagname == 'picture') {\n@@ -1325,7 +1325,7 @@\n \t\t\t\t} else {\n \n \t\t\t\t\t$commandline = 'vorbiscomment -w -c \"'.$empty.'\" \"'.$file.'\" \"'.$temp.'\" 2>&1';\n-\t\t\t\t\t$commandline = 'vorbiscomment -w -c '.escapeshellarg($empty).' '.escapeshellarg($file).' '.escapeshellarg($temp).' 2>&1';\n+\t\t\t\t\t$commandline = 'vorbiscomment -w -c '.escapeshellarg((string) $empty).' '.escapeshellarg((string) $file).' '.escapeshellarg((string) $temp).' 2>&1';\n \t\t\t\t\t$VorbisCommentError = `$commandline`;\n \n \t\t\t\t}\n@@ -1397,8 +1397,8 @@\n \n \t\t// Calculate combined bitrate - audio + video\n \t\t$CombinedBitrate  = 0;\n-\t\t$CombinedBitrate += (isset($this->info['audio']['bitrate']) ? $this->info['audio']['bitrate'] : 0);\n-\t\t$CombinedBitrate += (isset($this->info['video']['bitrate']) ? $this->info['video']['bitrate'] : 0);\n+\t\t$CombinedBitrate += ($this->info['audio']['bitrate'] ?? 0);\n+\t\t$CombinedBitrate += ($this->info['video']['bitrate'] ?? 0);\n \t\tif (($CombinedBitrate > 0) && empty($this->info['bitrate'])) {\n \t\t\t$this->info['bitrate'] = $CombinedBitrate;\n \t\t}\n@@ -1598,7 +1598,7 @@\n \t\t// Save info\n \t\t$saved_avdataoffset = $this->getid3->info['avdataoffset'];\n \t\t$saved_avdataend    = $this->getid3->info['avdataend'];\n-\t\t$saved_filesize     = (isset($this->getid3->info['filesize']) ? $this->getid3->info['filesize'] : null); // may be not set if called as dependency without openfile() call\n+\t\t$saved_filesize     = ($this->getid3->info['filesize'] ?? null); // may be not set if called as dependency without openfile() call\n \n \t\t// Reset some info\n \t\t$this->getid3->info['avdataoffset'] = 0;\n@@ -1619,7 +1619,7 @@\n \tpublic function setStringMode($string) {\n \t\t$this->data_string_flag   = true;\n \t\t$this->data_string        = $string;\n-\t\t$this->data_string_length = strlen($string);\n+\t\t$this->data_string_length = strlen((string) $string);\n \t}\n \n \tprotected function ftell() {\n@@ -1632,7 +1632,7 @@\n \tprotected function fread($bytes) {\n \t\tif ($this->data_string_flag) {\n \t\t\t$this->data_string_position += $bytes;\n-\t\t\treturn substr($this->data_string, $this->data_string_position - $bytes, $bytes);\n+\t\t\treturn substr((string) $this->data_string, $this->data_string_position - $bytes, $bytes);\n \t\t}\n \t    $pos = $this->ftell() + $bytes;\n \t    if (!getid3_lib::intValueSupported($pos)) {\n@@ -1712,7 +1712,7 @@\n \n \t\t\t\t$this->fseek($offset);\n \t\t\t\t$attachment = $this->fread($length); // get whole data in one pass, till it is anyway stored in memory\n-\t\t\t\tif ($attachment === false || strlen($attachment) != $length) {\n+\t\t\t\tif ($attachment === false || strlen((string) $attachment) != $length) {\n \t\t\t\t\tthrow new Exception('failed to read attachment data');\n \t\t\t\t}\n \n@@ -1720,7 +1720,7 @@\n \t\t\t} else {\n \n \t\t\t\t// set up destination path\n-\t\t\t\t$dir = rtrim(str_replace(array('/', '\\\\'), DIRECTORY_SEPARATOR, $this->getid3->option_save_attachments), DIRECTORY_SEPARATOR);\n+\t\t\t\t$dir = rtrim(str_replace(['/', '\\\\'], DIRECTORY_SEPARATOR, $this->getid3->option_save_attachments), DIRECTORY_SEPARATOR);\n \t\t\t\tif (!is_dir($dir) || !is_writable($dir)) { // check supplied directory\n \t\t\t\t\tthrow new Exception('supplied path ('.$dir.') does not exist, or is not writable');\n \t\t\t\t}\n@@ -1736,7 +1736,7 @@\n \t\t\t\t$buffersize = ($this->data_string_flag ? $length : $this->getid3->fread_buffer_size());\n \t\t\t\t$bytesleft = $length;\n \t\t\t\twhile ($bytesleft > 0) {\n-\t\t\t\t\tif (($buffer = $this->fread(min($buffersize, $bytesleft))) === false || ($byteswritten = fwrite($fp_dest, $buffer)) === false || ($byteswritten === 0)) {\n+\t\t\t\t\tif (($buffer = $this->fread(min($buffersize, $bytesleft))) === false || ($byteswritten = fwrite($fp_dest, (string) $buffer)) === false || ($byteswritten === 0)) {\n \t\t\t\t\t\tthrow new Exception($buffer === false ? 'not enough data to read' : 'failed to write to destination file, may be not enough disk space');\n \t\t\t\t\t}\n \t\t\t\t\t$bytesleft -= $byteswritten;\n",
        "applied_rectors": [
          "Rector\\Php53\\Rector\\FuncCall\\DirNameFileConstantToDirConstantRector",
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
          "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
          "Rector\\Php74\\Rector\\ArrayDimFetch\\CurlyToSquareBracketArrayStringRector",
          "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
          "Rector\\Php80\\Rector\\NotIdentical\\StrContainsRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/extra_large_1000_plus/009_getid3.php"
    ]
  }
}