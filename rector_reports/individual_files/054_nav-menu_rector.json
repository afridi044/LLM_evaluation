{
  "file_path": "selected_100_files\\large_500_1000\\054_nav-menu.php",
  "rector_analysis": {
    "php_version_changes": 5,
    "rules_triggered": [
      "Rector\\CodeQuality\\Rector\\ClassMethod\\OptionalParametersAfterRequiredRector",
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php70\\Rector\\StmtsAwareInterface\\IfIssetToCoalescingRector",
      "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_54": 1,
      "php_70": 2,
      "php_81": 1
    },
    "has_diff": true,
    "diff_line_count": 279
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:20:43.451492",
    "file_size_kb": 28.1,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/large_500_1000/054_nav-menu.php",
        "diff": "--- Original\n+++ New\n@@ -70,7 +70,7 @@\n  *\n  * @param array $locations Associative array of menu location identifiers (like a slug) and descriptive text.\n  */\n-function register_nav_menus( $locations = array() ) {\n+function register_nav_menus( $locations = [] ) {\n \tglobal $_wp_registered_nav_menus;\n \n \tadd_theme_support( 'menus' );\n@@ -107,7 +107,7 @@\n  * @param string $description Menu location descriptive text.\n  */\n function register_nav_menu( $location, $description ) {\n-\tregister_nav_menus( array( $location => $description ) );\n+\tregister_nav_menus( [ $location => $description ] );\n }\n /**\n  * Returns an array of all registered navigation menus in a theme\n@@ -117,9 +117,7 @@\n  */\n function get_registered_nav_menus() {\n \tglobal $_wp_registered_nav_menus;\n-\tif ( isset( $_wp_registered_nav_menus ) )\n-\t\treturn $_wp_registered_nav_menus;\n-\treturn array();\n+\treturn $_wp_registered_nav_menus ?? [];\n }\n \n /**\n@@ -131,7 +129,7 @@\n \n function get_nav_menu_locations() {\n \t$locations = get_theme_mod( 'nav_menu_locations' );\n-\treturn ( is_array( $locations ) ) ? $locations : array();\n+\treturn ( is_array( $locations ) ) ? $locations : [];\n }\n \n /**\n@@ -173,7 +171,7 @@\n  * @return int|WP_Error Menu ID on success, WP_Error object on failure.\n  */\n function wp_create_nav_menu( $menu_name ) {\n-\treturn wp_update_nav_menu_object( 0, array( 'menu-name' => $menu_name ) );\n+\treturn wp_update_nav_menu_object( 0, [ 'menu-name' => $menu_name ] );\n }\n \n /**\n@@ -229,17 +227,17 @@\n  * @param array $menu_data The array of menu data.\n  * @return int|WP_Error Menu ID on success, WP_Error object on failure.\n  */\n-function wp_update_nav_menu_object( $menu_id = 0, $menu_data = array() ) {\n+function wp_update_nav_menu_object( $menu_id = 0, $menu_data = [] ) {\n \t$menu_id = (int) $menu_id;\n \n \t$_menu = wp_get_nav_menu_object( $menu_id );\n \n-\t$args = array(\n-\t\t'description' => ( isset( $menu_data['description'] ) ? $menu_data['description']  : '' ),\n-\t\t'name'        => ( isset( $menu_data['menu-name']   ) ? $menu_data['menu-name']    : '' ),\n+\t$args = [\n+\t\t'description' => ( $menu_data['description'] ?? '' ),\n+\t\t'name'        => ( $menu_data['menu-name'] ?? '' ),\n \t\t'parent'      => ( isset( $menu_data['parent']      ) ? (int) $menu_data['parent'] : 0  ),\n \t\t'slug'        => null,\n-\t);\n+\t];\n \n \t// double-check that we're not going to have one menu take the name of another\n \t$_possible_existing = get_term_by( 'name', $menu_data['menu-name'], 'nav_menu' );\n@@ -308,7 +306,7 @@\n  * @param array $menu_item_data The menu item's data.\n  * @return int|WP_Error The menu item's database ID or WP_Error object on failure.\n  */\n-function wp_update_nav_menu_item( $menu_id = 0, $menu_item_db_id = 0, $menu_item_data = array() ) {\n+function wp_update_nav_menu_item( $menu_id = 0, $menu_item_db_id = 0, $menu_item_data = [] ) {\n \t$menu_id = (int) $menu_id;\n \t$menu_item_db_id = (int) $menu_item_db_id;\n \n@@ -326,7 +324,7 @@\n \t\treturn $menu;\n \t}\n \n-\t$defaults = array(\n+\t$defaults = [\n \t\t'menu-item-db-id' => $menu_item_db_id,\n \t\t'menu-item-object-id' => 0,\n \t\t'menu-item-object' => '',\n@@ -341,7 +339,7 @@\n \t\t'menu-item-classes' => '',\n \t\t'menu-item-xfn' => '',\n \t\t'menu-item-status' => '',\n-\t);\n+\t];\n \n \t$args = wp_parse_args( $menu_item_data, $defaults );\n \n@@ -348,7 +346,7 @@\n \tif ( 0 == $menu_id ) {\n \t\t$args['menu-item-position'] = 1;\n \t} elseif ( 0 == (int) $args['menu-item-position'] ) {\n-\t\t$menu_items = 0 == $menu_id ? array() : (array) wp_get_nav_menu_items( $menu_id, array( 'post_status' => 'publish,draft' ) );\n+\t\t$menu_items = 0 == $menu_id ? [] : (array) wp_get_nav_menu_items( $menu_id, [ 'post_status' => 'publish,draft' ] );\n \t\t$last_item = array_pop( $menu_items );\n \t\t$args['menu-item-position'] = ( $last_item && isset( $last_item->menu_order ) ) ? 1 + $last_item->menu_order : count( $menu_items );\n \t}\n@@ -383,7 +381,7 @@\n \t}\n \n \t// Populate the menu item object\n-\t$post = array(\n+\t$post = [\n \t\t'menu_order' => $args['menu-item-position'],\n \t\t'ping_status' => 0,\n \t\t'post_content' => $args['menu-item-description'],\n@@ -391,7 +389,7 @@\n \t\t'post_parent' => $original_parent,\n \t\t'post_title' => $args['menu-item-title'],\n \t\t'post_type' => 'nav_menu_item',\n-\t);\n+\t];\n \n \t$update = 0 != $menu_item_db_id;\n \n@@ -407,7 +405,7 @@\n \t// Associate the menu item with the menu term\n \t// Only set the menu term if it isn't set to avoid unnecessary wp_get_object_terms()\n \t if ( $menu_id && ( ! $update || ! is_object_in_term( $menu_item_db_id, 'nav_menu', (int) $menu->term_id ) ) ) {\n-\t\twp_set_object_terms( $menu_item_db_id, array( $menu->term_id ), 'nav_menu' );\n+\t\twp_set_object_terms( $menu_item_db_id, [ $menu->term_id ], 'nav_menu' );\n \t}\n \n \tif ( 'custom' == $args['menu-item-type'] ) {\n@@ -423,7 +421,7 @@\n \tupdate_post_meta( $menu_item_db_id, '_menu_item_object', sanitize_key($args['menu-item-object']) );\n \tupdate_post_meta( $menu_item_db_id, '_menu_item_target', sanitize_key($args['menu-item-target']) );\n \n-\t$args['menu-item-classes'] = array_map( 'sanitize_html_class', explode( ' ', $args['menu-item-classes'] ) );\n+\t$args['menu-item-classes'] = array_map( 'sanitize_html_class', explode( ' ', (string) $args['menu-item-classes'] ) );\n \t$args['menu-item-xfn'] = implode( ' ', array_map( 'sanitize_html_class', explode( ' ', $args['menu-item-xfn'] ) ) );\n \tupdate_post_meta( $menu_item_db_id, '_menu_item_classes', $args['menu-item-classes'] );\n \tupdate_post_meta( $menu_item_db_id, '_menu_item_xfn', $args['menu-item-xfn'] );\n@@ -465,8 +463,8 @@\n  * @param array $args Array of arguments passed on to get_terms().\n  * @return array menu objects\n  */\n-function wp_get_nav_menus( $args = array() ) {\n-\t$defaults = array( 'hide_empty' => false, 'orderby' => 'none' );\n+function wp_get_nav_menus( $args = [] ) {\n+\t$defaults = [ 'hide_empty' => false, 'orderby' => 'none' ];\n \t$args = wp_parse_args( $args, $defaults );\n \n \t/**\n@@ -537,13 +535,13 @@\n  * @param string $args\n  * @return mixed $items array of menu items, else false.\n  */\n-function wp_get_nav_menu_items( $menu, $args = array() ) {\n+function wp_get_nav_menu_items( $menu, $args = [] ) {\n \t$menu = wp_get_nav_menu_object( $menu );\n \n \tif ( ! $menu )\n \t\treturn false;\n \n-\tstatic $fetched = array();\n+\tstatic $fetched = [];\n \n \t$items = get_objects_in_term( $menu->term_id, 'nav_menu' );\n \n@@ -550,8 +548,8 @@\n \tif ( empty( $items ) )\n \t\treturn $items;\n \n-\t$defaults = array( 'order' => 'ASC', 'orderby' => 'menu_order', 'post_type' => 'nav_menu_item',\n-\t\t'post_status' => 'publish', 'output' => ARRAY_A, 'output_key' => 'menu_order', 'nopaging' => true );\n+\t$defaults = [ 'order' => 'ASC', 'orderby' => 'menu_order', 'post_type' => 'nav_menu_item',\n+\t\t'post_status' => 'publish', 'output' => ARRAY_A, 'output_key' => 'menu_order', 'nopaging' => true ];\n \t$args = wp_parse_args( $args, $defaults );\n \t$args['include'] = $items;\n \n@@ -563,8 +561,8 @@\n \t// Get all posts and terms at once to prime the caches\n \tif ( empty( $fetched[$menu->term_id] ) || wp_using_ext_object_cache() ) {\n \t\t$fetched[$menu->term_id] = true;\n-\t\t$posts = array();\n-\t\t$terms = array();\n+\t\t$posts = [];\n+\t\t$terms = [];\n \t\tforeach ( $items as $item ) {\n \t\t\t$object_id = get_post_meta( $item->ID, '_menu_item_object_id', true );\n \t\t\t$object    = get_post_meta( $item->ID, '_menu_item_object',    true );\n@@ -578,7 +576,7 @@\n \n \t\tif ( ! empty( $posts ) ) {\n \t\t\tforeach ( array_keys($posts) as $post_type ) {\n-\t\t\t\tget_posts( array('post__in' => $posts[$post_type], 'post_type' => $post_type, 'nopaging' => true, 'update_post_term_cache' => false) );\n+\t\t\t\tget_posts( ['post__in' => $posts[$post_type], 'post_type' => $post_type, 'nopaging' => true, 'update_post_term_cache' => false] );\n \t\t\t}\n \t\t}\n \t\tunset($posts);\n@@ -585,7 +583,7 @@\n \n \t\tif ( ! empty( $terms ) ) {\n \t\t\tforeach ( array_keys($terms) as $taxonomy ) {\n-\t\t\t\tget_terms($taxonomy, array('include' => $terms[$taxonomy]) );\n+\t\t\t\tget_terms($taxonomy, ['include' => $terms[$taxonomy]] );\n \t\t\t}\n \t\t}\n \t\tunset($terms);\n@@ -734,7 +732,7 @@\n \n \t\t\t/** This filter is documented in wp-includes/nav-menu.php */\n \t\t\t$menu_item->description = apply_filters( 'nav_menu_description', '' );\n-\t\t\t$menu_item->classes = array();\n+\t\t\t$menu_item->classes = [];\n \t\t\t$menu_item->xfn = '';\n \t\t}\n \t} elseif ( isset( $menu_item->taxonomy ) ) {\n@@ -754,7 +752,7 @@\n \t\t$menu_item->target = '';\n \t\t$menu_item->attr_title = '';\n \t\t$menu_item->description = get_term_field( 'description', $menu_item->term_id, $menu_item->taxonomy );\n-\t\t$menu_item->classes = array();\n+\t\t$menu_item->classes = [];\n \t\t$menu_item->xfn = '';\n \n \t}\n@@ -781,17 +779,17 @@\n  */\n function wp_get_associated_nav_menu_items( $object_id = 0, $object_type = 'post_type', $taxonomy = '' ) {\n \t$object_id = (int) $object_id;\n-\t$menu_item_ids = array();\n+\t$menu_item_ids = [];\n \n \t$query = new WP_Query;\n \t$menu_items = $query->query(\n-\t\tarray(\n+\t\t[\n \t\t\t'meta_key' => '_menu_item_object_id',\n \t\t\t'meta_value' => $object_id,\n \t\t\t'post_status' => 'any',\n \t\t\t'post_type' => 'nav_menu_item',\n \t\t\t'posts_per_page' => -1,\n-\t\t)\n+\t\t]\n \t);\n \tforeach( (array) $menu_items as $menu_item ) {\n \t\tif ( isset( $menu_item->ID ) && is_nav_menu_item( $menu_item->ID ) ) {\n@@ -842,7 +840,7 @@\n  * @param int $object_id The ID of the original object being trashed.\n  *\n  */\n-function _wp_delete_tax_menu_item( $object_id = 0, $tt_id, $taxonomy ) {\n+function _wp_delete_tax_menu_item( $tt_id, $taxonomy, $object_id = 0 ) {\n \t$object_id = (int) $object_id;\n \n \t$menu_item_ids = wp_get_associated_nav_menu_items( $object_id, 'taxonomy', $taxonomy );\n@@ -875,15 +873,15 @@\n \tif ( empty( $auto_add ) || ! is_array( $auto_add ) )\n \t\treturn;\n \n-\t$args = array(\n+\t$args = [\n \t\t'menu-item-object-id' => $post->ID,\n \t\t'menu-item-object' => $post->post_type,\n \t\t'menu-item-type' => 'post_type',\n \t\t'menu-item-status' => 'publish',\n-\t);\n+\t];\n \n \tforeach ( $auto_add as $menu_id ) {\n-\t\t$items = wp_get_nav_menu_items( $menu_id, array( 'post_status' => 'publish,draft' ) );\n+\t\t$items = wp_get_nav_menu_items( $menu_id, [ 'post_status' => 'publish,draft' ] );\n \t\tif ( ! is_array( $items ) )\n \t\t\tcontinue;\n \t\tforeach ( $items as $item ) {\n",
        "applied_rectors": [
          "Rector\\CodeQuality\\Rector\\ClassMethod\\OptionalParametersAfterRequiredRector",
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php70\\Rector\\StmtsAwareInterface\\IfIssetToCoalescingRector",
          "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/large_500_1000/054_nav-menu.php"
    ]
  }
}