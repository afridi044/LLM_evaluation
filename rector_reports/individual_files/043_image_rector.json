{
  "file_path": "selected_100_files\\large_500_1000\\043_image.php",
  "rector_analysis": {
    "php_version_changes": 5,
    "rules_triggered": [
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
      "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector",
      "Rector\\Php82\\Rector\\FuncCall\\Utf8DecodeEncodeToMbConvertEncodingRector"
    ],
    "changes_by_php_version": {
      "php_54": 1,
      "php_71": 1,
      "php_80": 1,
      "php_81": 1,
      "php_82": 1
    },
    "has_diff": true,
    "diff_line_count": 242
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:20:09.610825",
    "file_size_kb": 19.0,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/large_500_1000/043_image.php",
        "diff": "--- Original\n+++ New\n@@ -45,7 +45,7 @@\n \t\treturn $src;\n \n \tif ( ! $dst_file )\n-\t\t$dst_file = str_replace( basename( $src_file ), 'cropped-' . basename( $src_file ), $src_file );\n+\t\t$dst_file = str_replace( basename( (string) $src_file ), 'cropped-' . basename( (string) $src_file ), $src_file );\n \n \t/*\n \t * The directory containing the original file may no longer exist when\n@@ -74,7 +74,7 @@\n function wp_generate_attachment_metadata( $attachment_id, $file ) {\n \t$attachment = get_post( $attachment_id );\n \n-\t$metadata = array();\n+\t$metadata = [];\n \t$support = false;\n \tif ( preg_match('!^image/!', get_post_mime_type( $attachment )) && file_is_displayable_image($file) ) {\n \t\t$imagesize = getimagesize( $file );\n@@ -87,9 +87,9 @@\n \t\t// Make thumbnails and other intermediate sizes.\n \t\tglobal $_wp_additional_image_sizes;\n \n-\t\t$sizes = array();\n+\t\t$sizes = [];\n \t\tforeach ( get_intermediate_image_sizes() as $s ) {\n-\t\t\t$sizes[$s] = array( 'width' => '', 'height' => '', 'crop' => false );\n+\t\t\t$sizes[$s] = [ 'width' => '', 'height' => '', 'crop' => false ];\n \t\t\tif ( isset( $_wp_additional_image_sizes[$s]['width'] ) )\n \t\t\t\t$sizes[$s]['width'] = intval( $_wp_additional_image_sizes[$s]['width'] ); // For theme-added sizes\n \t\t\telse\n@@ -119,7 +119,7 @@\n \t\t\tif ( ! is_wp_error( $editor ) )\n \t\t\t\t$metadata['sizes'] = $editor->multi_resize( $sizes );\n \t\t} else {\n-\t\t\t$metadata['sizes'] = array();\n+\t\t\t$metadata['sizes'] = [];\n \t\t}\n \n \t\t// Fetch additional metadata from EXIF/IPTC.\n@@ -137,8 +137,8 @@\n \n \tif ( $support && ! empty( $metadata['image']['data'] ) ) {\n \t\t// Check for existing cover.\n-\t\t$hash = md5( $metadata['image']['data'] );\n-\t\t$posts = get_posts( array(\n+\t\t$hash = md5( (string) $metadata['image']['data'] );\n+\t\t$posts = get_posts( [\n \t\t\t'fields' => 'ids',\n \t\t\t'post_type' => 'attachment',\n \t\t\t'post_mime_type' => $metadata['image']['mime'],\n@@ -146,7 +146,7 @@\n \t\t\t'posts_per_page' => 1,\n \t\t\t'meta_key' => '_cover_hash',\n \t\t\t'meta_value' => $hash\n-\t\t) );\n+\t\t] );\n \t\t$exists = reset( $posts );\n \n \t\tif ( ! empty( $exists ) ) {\n@@ -164,11 +164,11 @@\n \t\t\t$basename = str_replace( '.', '-', basename( $file ) ) . '-image' . $ext;\n \t\t\t$uploaded = wp_upload_bits( $basename, '', $metadata['image']['data'] );\n \t\t\tif ( false === $uploaded['error'] ) {\n-\t\t\t\t$image_attachment = array(\n+\t\t\t\t$image_attachment = [\n \t\t\t\t\t'post_mime_type' => $metadata['image']['mime'],\n \t\t\t\t\t'post_type' => 'attachment',\n \t\t\t\t\t'post_content' => '',\n-\t\t\t\t);\n+\t\t\t\t];\n \t\t\t\t/**\n \t\t\t\t * Filter the parameters for the attachment thumbnail creation.\n \t\t\t\t *\n@@ -213,7 +213,7 @@\n  * @return int|float\n  */\n function wp_exif_frac2dec($str) {\n-\t@list( $n, $d ) = explode( '/', $str );\n+\t@[$n, $d] = explode( '/', $str );\n \tif ( !empty($d) )\n \t\treturn $n / $d;\n \treturn $str;\n@@ -228,8 +228,8 @@\n  * @return int\n  */\n function wp_exif_date2ts($str) {\n-\t@list( $date, $time ) = explode( ' ', trim($str) );\n-\t@list( $y, $m, $d ) = explode( ':', $date );\n+\t@[$date, $time] = explode( ' ', trim($str) );\n+\t@[$y, $m, $d] = explode( ':', $date );\n \n \treturn strtotime( \"{$y}-{$m}-{$d} {$time}\" );\n }\n@@ -254,7 +254,7 @@\n \tif ( ! file_exists( $file ) )\n \t\treturn false;\n \n-\tlist( , , $sourceImageType ) = getimagesize( $file );\n+\t[, , $sourceImageType] = getimagesize( $file );\n \n \t/*\n \t * EXIF contains a bunch of data we'll probably never need formatted in ways\n@@ -262,7 +262,7 @@\n \t * that are likely to be useful. Fractions and numbers are converted to\n \t * floats, dates to unix timestamps, and everything else to strings.\n \t */\n-\t$meta = array(\n+\t$meta = [\n \t\t'aperture' => 0,\n \t\t'credit' => '',\n \t\t'camera' => '',\n@@ -274,7 +274,7 @@\n \t\t'shutter_speed' => 0,\n \t\t'title' => '',\n \t\t'orientation' => 0,\n-\t);\n+\t];\n \n \t/*\n \t * Read IPTC first, since it might contain data not available in exif such\n@@ -335,47 +335,47 @@\n \t *\n \t * @param array $image_types Image types to check for exif data.\n \t */\n-\tif ( is_callable( 'exif_read_data' ) && in_array( $sourceImageType, apply_filters( 'wp_read_image_metadata_types', array( IMAGETYPE_JPEG, IMAGETYPE_TIFF_II, IMAGETYPE_TIFF_MM ) ) ) ) {\n+\tif ( is_callable( 'exif_read_data' ) && in_array( $sourceImageType, apply_filters( 'wp_read_image_metadata_types', [ IMAGETYPE_JPEG, IMAGETYPE_TIFF_II, IMAGETYPE_TIFF_MM ] ) ) ) {\n \t\t$exif = @exif_read_data( $file );\n \n \t\tif ( empty( $meta['title'] ) && ! empty( $exif['Title'] ) ) {\n-\t\t\t$meta['title'] = trim( $exif['Title'] );\n+\t\t\t$meta['title'] = trim( (string) $exif['Title'] );\n \t\t}\n \n \t\tif ( ! empty( $exif['ImageDescription'] ) ) {\n \t\t\tmbstring_binary_safe_encoding();\n-\t\t\t$description_length = strlen( $exif['ImageDescription'] );\n+\t\t\t$description_length = strlen( (string) $exif['ImageDescription'] );\n \t\t\treset_mbstring_encoding();\n \n \t\t\tif ( empty( $meta['title'] ) && $description_length < 80 ) {\n \t\t\t\t// Assume the title is stored in ImageDescription\n-\t\t\t\t$meta['title'] = trim( $exif['ImageDescription'] );\n-\t\t\t\tif ( empty( $meta['caption'] ) && ! empty( $exif['COMPUTED']['UserComment'] ) && trim( $exif['COMPUTED']['UserComment'] ) != $meta['title'] ) {\n-\t\t\t\t\t$meta['caption'] = trim( $exif['COMPUTED']['UserComment'] );\n+\t\t\t\t$meta['title'] = trim( (string) $exif['ImageDescription'] );\n+\t\t\t\tif ( empty( $meta['caption'] ) && ! empty( $exif['COMPUTED']['UserComment'] ) && trim( (string) $exif['COMPUTED']['UserComment'] ) != $meta['title'] ) {\n+\t\t\t\t\t$meta['caption'] = trim( (string) $exif['COMPUTED']['UserComment'] );\n \t\t\t\t}\n-\t\t\t} elseif ( empty( $meta['caption'] ) && trim( $exif['ImageDescription'] ) != $meta['title'] ) {\n-\t\t\t\t$meta['caption'] = trim( $exif['ImageDescription'] );\n+\t\t\t} elseif ( empty( $meta['caption'] ) && trim( (string) $exif['ImageDescription'] ) != $meta['title'] ) {\n+\t\t\t\t$meta['caption'] = trim( (string) $exif['ImageDescription'] );\n \t\t\t}\n-\t\t} elseif ( empty( $meta['caption'] ) && ! empty( $exif['Comments'] ) && trim( $exif['Comments'] ) != $meta['title'] ) {\n-\t\t\t$meta['caption'] = trim( $exif['Comments'] );\n+\t\t} elseif ( empty( $meta['caption'] ) && ! empty( $exif['Comments'] ) && trim( (string) $exif['Comments'] ) != $meta['title'] ) {\n+\t\t\t$meta['caption'] = trim( (string) $exif['Comments'] );\n \t\t}\n \n \t\tif ( empty( $meta['credit'] ) ) {\n \t\t\tif ( ! empty( $exif['Artist'] ) ) {\n-\t\t\t\t$meta['credit'] = trim( $exif['Artist'] );\n+\t\t\t\t$meta['credit'] = trim( (string) $exif['Artist'] );\n \t\t\t} elseif ( ! empty($exif['Author'] ) ) {\n-\t\t\t\t$meta['credit'] = trim( $exif['Author'] );\n+\t\t\t\t$meta['credit'] = trim( (string) $exif['Author'] );\n \t\t\t}\n \t\t}\n \n \t\tif ( empty( $meta['copyright'] ) && ! empty( $exif['Copyright'] ) ) {\n-\t\t\t$meta['copyright'] = trim( $exif['Copyright'] );\n+\t\t\t$meta['copyright'] = trim( (string) $exif['Copyright'] );\n \t\t}\n \t\tif ( ! empty( $exif['FNumber'] ) ) {\n \t\t\t$meta['aperture'] = round( wp_exif_frac2dec( $exif['FNumber'] ), 2 );\n \t\t}\n \t\tif ( ! empty( $exif['Model'] ) ) {\n-\t\t\t$meta['camera'] = trim( $exif['Model'] );\n+\t\t\t$meta['camera'] = trim( (string) $exif['Model'] );\n \t\t}\n \t\tif ( empty( $meta['created_timestamp'] ) && ! empty( $exif['DateTimeDigitized'] ) ) {\n \t\t\t$meta['created_timestamp'] = wp_exif_date2ts( $exif['DateTimeDigitized'] );\n@@ -385,7 +385,7 @@\n \t\t}\n \t\tif ( ! empty( $exif['ISOSpeedRatings'] ) ) {\n \t\t\t$meta['iso'] = is_array( $exif['ISOSpeedRatings'] ) ? reset( $exif['ISOSpeedRatings'] ) : $exif['ISOSpeedRatings'];\n-\t\t\t$meta['iso'] = trim( $meta['iso'] );\n+\t\t\t$meta['iso'] = trim( (string) $meta['iso'] );\n \t\t}\n \t\tif ( ! empty( $exif['ExposureTime'] ) ) {\n \t\t\t$meta['shutter_speed'] = (string) wp_exif_frac2dec( $exif['ExposureTime'] );\n@@ -395,9 +395,9 @@\n \t\t}\n \t}\n \n-\tforeach ( array( 'title', 'caption', 'credit', 'copyright', 'camera', 'iso' ) as $key ) {\n+\tforeach ( [ 'title', 'caption', 'credit', 'copyright', 'camera', 'iso' ] as $key ) {\n \t\tif ( $meta[ $key ] && ! seems_utf8( $meta[ $key ] ) ) {\n-\t\t\t$meta[ $key ] = utf8_encode( $meta[ $key ] );\n+\t\t\t$meta[ $key ] = mb_convert_encoding( $meta[ $key ], 'UTF-8', 'ISO-8859-1' );\n \t\t}\n \t}\n \n@@ -436,7 +436,7 @@\n  * @return bool True if suitable, false if not suitable.\n  */\n function file_is_displayable_image($path) {\n-\t$displayable_image_types = array( IMAGETYPE_GIF, IMAGETYPE_JPEG, IMAGETYPE_PNG, IMAGETYPE_BMP );\n+\t$displayable_image_types = [ IMAGETYPE_GIF, IMAGETYPE_JPEG, IMAGETYPE_PNG, IMAGETYPE_BMP ];\n \n \t$info = @getimagesize( $path );\n \tif ( empty( $info ) ) {\n@@ -473,20 +473,12 @@\n \tif ( empty( $filepath ) )\n \t\treturn false;\n \n-\tswitch ( $mime_type ) {\n-\t\tcase 'image/jpeg':\n-\t\t\t$image = imagecreatefromjpeg($filepath);\n-\t\t\tbreak;\n-\t\tcase 'image/png':\n-\t\t\t$image = imagecreatefrompng($filepath);\n-\t\t\tbreak;\n-\t\tcase 'image/gif':\n-\t\t\t$image = imagecreatefromgif($filepath);\n-\t\t\tbreak;\n-\t\tdefault:\n-\t\t\t$image = false;\n-\t\t\tbreak;\n-\t}\n+\t$image = match ($mime_type) {\n+        'image/jpeg' => imagecreatefromjpeg($filepath),\n+        'image/png' => imagecreatefrompng($filepath),\n+        'image/gif' => imagecreatefromgif($filepath),\n+        default => false,\n+    };\n \tif ( is_resource($image) ) {\n \t\t/**\n \t\t * Filter the current image being loaded for editing.\n",
        "applied_rectors": [
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
          "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector",
          "Rector\\Php82\\Rector\\FuncCall\\Utf8DecodeEncodeToMbConvertEncodingRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/large_500_1000/043_image.php"
    ]
  }
}