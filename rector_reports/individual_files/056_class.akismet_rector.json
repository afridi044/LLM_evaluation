{
  "file_path": "selected_100_files\\large_500_1000\\056_class.akismet.php",
  "rector_analysis": {
    "php_version_changes": 4,
    "rules_triggered": [
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
      "Rector\\Php70\\Rector\\Variable\\WrapVariableVariableNameInCurlyBracesRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_54": 1,
      "php_70": 2,
      "php_81": 1
    },
    "has_diff": true,
    "diff_line_count": 271
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:20:50.842969",
    "file_size_kb": 35.2,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/large_500_1000/056_class.akismet.php",
        "diff": "--- Original\n+++ New\n@@ -7,7 +7,7 @@\n \n \tprivate static $last_comment = '';\n \tprivate static $initiated = false;\n-\tprivate static $prevent_moderation_email_for_these_comments = array();\n+\tprivate static $prevent_moderation_email_for_these_comments = [];\n \tprivate static $last_comment_result = null;\n \t\n \tpublic static function init() {\n@@ -22,25 +22,25 @@\n \tprivate static function init_hooks() {\n \t\tself::$initiated = true;\n \n-\t\tadd_action( 'wp_insert_comment', array( 'Akismet', 'auto_check_update_meta' ), 10, 2 );\n-\t\tadd_action( 'preprocess_comment', array( 'Akismet', 'auto_check_comment' ), 1 );\n-\t\tadd_action( 'akismet_scheduled_delete', array( 'Akismet', 'delete_old_comments' ) );\n-\t\tadd_action( 'akismet_scheduled_delete', array( 'Akismet', 'delete_old_comments_meta' ) );\n-\t\tadd_action( 'akismet_schedule_cron_recheck', array( 'Akismet', 'cron_recheck' ) );\n+\t\tadd_action( 'wp_insert_comment', [ 'Akismet', 'auto_check_update_meta' ], 10, 2 );\n+\t\tadd_action( 'preprocess_comment', [ 'Akismet', 'auto_check_comment' ], 1 );\n+\t\tadd_action( 'akismet_scheduled_delete', [ 'Akismet', 'delete_old_comments' ] );\n+\t\tadd_action( 'akismet_scheduled_delete', [ 'Akismet', 'delete_old_comments_meta' ] );\n+\t\tadd_action( 'akismet_schedule_cron_recheck', [ 'Akismet', 'cron_recheck' ] );\n \n \t\t$akismet_comment_nonce_option = apply_filters( 'akismet_comment_nonce', get_option( 'akismet_comment_nonce' ) );\n \n \t\tif ( $akismet_comment_nonce_option == 'true' || $akismet_comment_nonce_option == '' )\n-\t\t\tadd_action( 'comment_form',  array( 'Akismet',  'add_comment_nonce' ), 1 );\n+\t\t\tadd_action( 'comment_form',  [ 'Akismet',  'add_comment_nonce' ], 1 );\n \n-\t\tadd_action( 'admin_head-edit-comments.php', array( 'Akismet', 'load_form_js' ) );\n-\t\tadd_action( 'comment_form', array( 'Akismet', 'load_form_js' ) );\n-\t\tadd_action( 'comment_form', array( 'Akismet', 'inject_ak_js' ) );\n+\t\tadd_action( 'admin_head-edit-comments.php', [ 'Akismet', 'load_form_js' ] );\n+\t\tadd_action( 'comment_form', [ 'Akismet', 'load_form_js' ] );\n+\t\tadd_action( 'comment_form', [ 'Akismet', 'inject_ak_js' ] );\n \n-\t\tadd_filter( 'comment_moderation_recipients', array( 'Akismet', 'disable_moderation_emails_if_unreachable' ), 1000, 2 );\n-\t\tadd_filter( 'pre_comment_approved', array( 'Akismet', 'last_comment_status' ), 10, 2 );\n+\t\tadd_filter( 'comment_moderation_recipients', [ 'Akismet', 'disable_moderation_emails_if_unreachable' ], 1000, 2 );\n+\t\tadd_filter( 'pre_comment_approved', [ 'Akismet', 'last_comment_status' ], 10, 2 );\n \t\t\n-\t\tadd_action( 'transition_comment_status', array( 'Akismet', 'transition_comment_status' ), 10, 3 );\n+\t\tadd_action( 'transition_comment_status', [ 'Akismet', 'transition_comment_status' ], 10, 3 );\n \n \t\tif ( '3.0.5' == $GLOBALS['wp_version'] ) {\n \t\t\tremove_filter( 'comment_text', 'wp_kses_data' );\n@@ -54,7 +54,7 @@\n \t}\n \n \tpublic static function check_key_status( $key, $ip = null ) {\n-\t\treturn self::http_post( Akismet::build_query( array( 'key' => $key, 'blog' => get_option('home') ) ), 'verify-key', $ip );\n+\t\treturn self::http_post( Akismet::build_query( [ 'key' => $key, 'blog' => get_option('home') ] ), 'verify-key', $ip );\n \t}\n \n \tpublic static function verify_key( $key, $ip = null ) {\n@@ -105,7 +105,7 @@\n \t\t\t\t$comment[\"POST_{$key}\"] = $value;\n \t\t}\n \n-\t\t$ignore = array( 'HTTP_COOKIE', 'HTTP_COOKIE2', 'PHP_AUTH_PW' );\n+\t\t$ignore = [ 'HTTP_COOKIE', 'HTTP_COOKIE2', 'PHP_AUTH_PW' ];\n \n \t\tforeach ( $_SERVER as $key => $value ) {\n \t\t\tif ( !in_array( $key, $ignore ) && is_string($value) )\n@@ -123,7 +123,7 @@\n \n \t\tself::update_alert( $response );\n \n-\t\t$commentdata['comment_as_submitted'] = array_intersect_key( $comment, array( 'blog' => '', 'blog_charset' => '', 'blog_lang' => '', 'blog_ua' => '', 'comment_agent' => '', 'comment_author' => '', 'comment_author_IP' => '', 'comment_author_email' => '', 'comment_author_url' => '', 'comment_content' => '', 'comment_date_gmt' => '', 'comment_tags' => '', 'comment_type' => '', 'guid' => '', 'is_test' => '', 'permalink' => '', 'reporter' => '', 'site_domain' => '', 'submit_referer' => '', 'submit_uri' => '', 'user_ID' => '', 'user_agent' => '', 'user_id' => '', 'user_ip' => '' ) );\n+\t\t$commentdata['comment_as_submitted'] = array_intersect_key( $comment, [ 'blog' => '', 'blog_charset' => '', 'blog_lang' => '', 'blog_ua' => '', 'comment_agent' => '', 'comment_author' => '', 'comment_author_IP' => '', 'comment_author_email' => '', 'comment_author_url' => '', 'comment_content' => '', 'comment_date_gmt' => '', 'comment_tags' => '', 'comment_type' => '', 'guid' => '', 'is_test' => '', 'permalink' => '', 'reporter' => '', 'site_domain' => '', 'submit_referer' => '', 'submit_uri' => '', 'user_ID' => '', 'user_agent' => '', 'user_id' => '', 'user_ip' => '' ] );\n \t\t$commentdata['akismet_result']       = $response[1];\n \n \t\tif ( isset( $response[0]['x-akismet-pro-tip'] ) )\n@@ -146,7 +146,7 @@\n \t\t\t\t// akismet_result_spam() won't be called so bump the counter here\n \t\t\t\tif ( $incr = apply_filters('akismet_spam_count_incr', 1) )\n \t\t\t\t\tupdate_option( 'akismet_spam_count', get_option('akismet_spam_count') + $incr );\n-\t\t\t\t$redirect_to = isset( $_SERVER['HTTP_REFERER'] ) ? $_SERVER['HTTP_REFERER'] : get_permalink( $post );\n+\t\t\t\t$redirect_to = $_SERVER['HTTP_REFERER'] ?? get_permalink( $post );\n \t\t\t\twp_safe_redirect( esc_url_raw( $redirect_to ) );\n \t\t\t\tdie();\n \t\t\t}\n@@ -196,7 +196,7 @@\n \t\t\t// wp_filter_comment expects comment_author_IP\n \t\t\tself::$last_comment = wp_filter_comment(\n \t\t\t\tarray_merge(\n-\t\t\t\t\tarray( 'comment_author_IP' => self::get_ip_address() ),\n+\t\t\t\t\t[ 'comment_author_IP' => self::get_ip_address() ],\n \t\t\t\t\t$comment\n \t\t\t\t)\n \t\t\t);\n@@ -240,7 +240,7 @@\n \t\t\t\t\t} // abnormal result: error\n \t\t\t\t\telse {\n \t\t\t\t\t\tupdate_comment_meta( $comment->comment_ID, 'akismet_error', time() );\n-\t\t\t\t\t\tself::update_comment_history( $comment->comment_ID, sprintf( __('Akismet was unable to check this comment (response: %s), will automatically retry again later.', 'akismet'), substr(self::$last_comment['akismet_result'], 0, 50)), 'check-error' );\n+\t\t\t\t\t\tself::update_comment_history( $comment->comment_ID, sprintf( __('Akismet was unable to check this comment (response: %s), will automatically retry again later.', 'akismet'), substr((string) self::$last_comment['akismet_result'], 0, 50)), 'check-error' );\n \t\t\t\t\t}\n \n \t\t\t\t\t// record the complete original data as submitted for checking\n@@ -260,7 +260,7 @@\n \t\t\tif ( empty( $comment_ids ) )\n \t\t\t\treturn;\n \n-\t\t\t$wpdb->queries = array();\n+\t\t\t$wpdb->queries = [];\n \n \t\t\tdo_action( 'delete_comment', $comment_ids );\n \n@@ -292,7 +292,7 @@\n \t\t\tif ( empty( $comment_ids ) )\n \t\t\t\treturn;\n \n-\t\t\t$wpdb->queries = array();\n+\t\t\t$wpdb->queries = [];\n \n \t\t\tforeach ( $comment_ids as $comment_id ) {\n \t\t\t\tdelete_comment_meta( $comment_id, 'akismet_as_submitted' );\n@@ -324,7 +324,7 @@\n \t\t\treturn false;\n \n \t\t$history = get_comment_meta( $comment_id, 'akismet_history', false );\n-\t\tusort( $history, array( 'Akismet', '_cmp_time' ) );\n+\t\tusort( $history, [ 'Akismet', '_cmp_time' ] );\n \t\treturn $history;\n \t}\n \n@@ -340,12 +340,12 @@\n \t\tif ( is_object( $current_user ) && isset( $current_user->user_login ) )\n \t\t\t$user = $current_user->user_login;\n \n-\t\t$event = array(\n+\t\t$event = [\n \t\t\t'time'    => self::_get_microtime(),\n \t\t\t'message' => $message,\n \t\t\t'event'   => $event,\n \t\t\t'user'    => $user,\n-\t\t);\n+\t\t];\n \n \t\t// $unique = false so as to allow multiple values per comment\n \t\t$r = add_comment_meta( $comment_id, 'akismet_history', $event, false );\n@@ -407,12 +407,12 @@\n \t\t// determine why the transition_comment_status action was triggered.  And there are several different ways by which\n \t\t// to spam and unspam comments: bulk actions, ajax, links in moderation emails, the dashboard, and perhaps others.\n \t\t// We'll assume that this is an explicit user action if certain POST/GET variables exist.\n-\t\tif ( ( isset( $_POST['status'] ) && in_array( $_POST['status'], array( 'spam', 'unspam' ) ) ) ||\n+\t\tif ( ( isset( $_POST['status'] ) && in_array( $_POST['status'], [ 'spam', 'unspam' ] ) ) ||\n \t\t\t ( isset( $_POST['spam'] )   && (int) $_POST['spam'] == 1 ) ||\n \t\t\t ( isset( $_POST['unspam'] ) && (int) $_POST['unspam'] == 1 ) ||\n-\t\t\t ( isset( $_POST['comment_status'] )  && in_array( $_POST['comment_status'], array( 'spam', 'unspam' ) ) ) ||\n-\t\t\t ( isset( $_GET['action'] )  && in_array( $_GET['action'], array( 'spam', 'unspam' ) ) ) ||\n-\t\t\t ( isset( $_POST['action'] ) && in_array( $_POST['action'], array( 'editedcomment' ) ) )\n+\t\t\t ( isset( $_POST['comment_status'] )  && in_array( $_POST['comment_status'], [ 'spam', 'unspam' ] ) ) ||\n+\t\t\t ( isset( $_GET['action'] )  && in_array( $_GET['action'], [ 'spam', 'unspam' ] ) ) ||\n+\t\t\t ( isset( $_POST['action'] ) && in_array( $_POST['action'], [ 'editedcomment' ] ) )\n \t\t ) {\n \t\t\tif ( $new_status == 'spam' && ( $old_status == 'approved' || $old_status == 'unapproved' || !$old_status ) ) {\n \t\t\t\treturn self::submit_spam_comment( $comment->comment_ID );\n@@ -541,7 +541,7 @@\n \t\tforeach ( (array) $comment_errors as $comment_id ) {\n \t\t\t// if the comment no longer exists, or is too old, remove the meta entry from the queue to avoid getting stuck\n \t\t\t$comment = get_comment( $comment_id );\n-\t\t\tif ( !$comment || strtotime( $comment->comment_date_gmt ) < strtotime( \"-15 days\" ) ) {\n+\t\t\tif ( !$comment || strtotime( (string) $comment->comment_date_gmt ) < strtotime( \"-15 days\" ) ) {\n \t\t\t\tdelete_comment_meta( $comment_id, 'akismet_error' );\n \t\t\t\tdelete_comment_meta( $comment_id, 'akismet_delayed_moderation_email' );\n \t\t\t\tcontinue;\n@@ -583,7 +583,7 @@\n \t\t\t} else {\n \t\t\t\t// If this comment has been pending moderation for longer than MAX_DELAY_BEFORE_MODERATION_EMAIL,\n \t\t\t\t// send a moderation email now.\n-\t\t\t\tif ( ( intval( gmdate( 'U' ) ) - strtotime( $comment->comment_date_gmt ) ) < self::MAX_DELAY_BEFORE_MODERATION_EMAIL ) {\n+\t\t\t\tif ( ( intval( gmdate( 'U' ) ) - strtotime( (string) $comment->comment_date_gmt ) ) < self::MAX_DELAY_BEFORE_MODERATION_EMAIL ) {\n \t\t\t\t\tdelete_comment_meta( $comment_id, 'akismet_delayed_moderation_email' );\n \t\t\t\t\twp_notify_moderator( $comment_id );\n \t\t\t\t}\n@@ -638,7 +638,7 @@\n \t}\n \n \tpublic static function get_ip_address() {\n-\t\treturn isset( $_SERVER['REMOTE_ADDR'] ) ? $_SERVER['REMOTE_ADDR'] : null;\n+\t\treturn $_SERVER['REMOTE_ADDR'] ?? null;\n \t}\n \t\n \t/**\n@@ -669,11 +669,11 @@\n \t}\n \n \tprivate static function get_user_agent() {\n-\t\treturn isset( $_SERVER['HTTP_USER_AGENT'] ) ? $_SERVER['HTTP_USER_AGENT'] : null;\n+\t\treturn $_SERVER['HTTP_USER_AGENT'] ?? null;\n \t}\n \n \tprivate static function get_referer() {\n-\t\treturn isset( $_SERVER['HTTP_REFERER'] ) ? $_SERVER['HTTP_REFERER'] : null;\n+\t\treturn $_SERVER['HTTP_REFERER'] ?? null;\n \t}\n \n \t// return a comma-separated list of role names for the given user\n@@ -735,7 +735,7 @@\n \t\t\tforeach ( self::$prevent_moderation_email_for_these_comments as $possible_match ) {\n \t\t\t\tif ( self::comments_match( $possible_match, $comment ) ) {\n \t\t\t\t\tupdate_comment_meta( $comment_id, 'akismet_delayed_moderation_email', true );\n-\t\t\t\t\treturn array();\n+\t\t\t\t\treturn [];\n \t\t\t\t}\n \t\t\t}\n \t\t}\n@@ -780,24 +780,24 @@\n \t\t\t$http_host = $ip;\n \t\t}\n \n-\t\t$http_args = array(\n+\t\t$http_args = [\n \t\t\t'body' => $request,\n-\t\t\t'headers' => array(\n+\t\t\t'headers' => [\n \t\t\t\t'Content-Type' => 'application/x-www-form-urlencoded; charset=' . get_option( 'blog_charset' ),\n \t\t\t\t'Host' => $host,\n \t\t\t\t'User-Agent' => $akismet_ua,\n-\t\t\t),\n+\t\t\t],\n \t\t\t'httpversion' => '1.0',\n \t\t\t'timeout' => 15\n-\t\t);\n+\t\t];\n \n \t\t$akismet_url = \"http://{$http_host}/1.1/{$path}\";\n \t\t$response = wp_remote_post( $akismet_url, $http_args );\n \t\tAkismet::log( compact( 'akismet_url', 'http_args', 'response' ) );\n \t\tif ( is_wp_error( $response ) )\n-\t\t\treturn array( '', '' );\n+\t\t\treturn [ '', '' ];\n \n-\t\treturn array( $response['headers'], $response['body'] );\n+\t\treturn [ $response['headers'], $response['body'] ];\n \t}\n \n \t// given a response from an API call like check_key_status(), update the alert code options if an alert is present.\n@@ -824,9 +824,9 @@\n \tpublic static function load_form_js() {\n \t\t// WP < 3.3 can't enqueue a script this late in the game and still have it appear in the footer.\n \t\t// Once we drop support for everything pre-3.3, this can change back to a single enqueue call.\n-\t\twp_register_script( 'akismet-form', AKISMET__PLUGIN_URL . '_inc/form.js', array(), AKISMET_VERSION, true );\n-\t\tadd_action( 'wp_footer', array( 'Akismet', 'print_form_js' ) );\n-\t\tadd_action( 'admin_footer', array( 'Akismet', 'print_form_js' ) );\n+\t\twp_register_script( 'akismet-form', AKISMET__PLUGIN_URL . '_inc/form.js', [], AKISMET_VERSION, true );\n+\t\tadd_action( 'wp_footer', [ 'Akismet', 'print_form_js' ] );\n+\t\tadd_action( 'admin_footer', [ 'Akismet', 'print_form_js' ] );\n \t}\n \t\n \tpublic static function print_form_js() {\n@@ -880,11 +880,11 @@\n \t\texit;\n \t}\n \n-\tpublic static function view( $name, array $args = array() ) {\n+\tpublic static function view( $name, array $args = [] ) {\n \t\t$args = apply_filters( 'akismet_view_arguments', $args, $name );\n \t\t\n \t\tforeach ( $args AS $key => $val ) {\n-\t\t\t$$key = $val;\n+\t\t\t${$key} = $val;\n \t\t}\n \t\t\n \t\tload_plugin_textdomain( 'akismet' );\n",
        "applied_rectors": [
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
          "Rector\\Php70\\Rector\\Variable\\WrapVariableVariableNameInCurlyBracesRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/large_500_1000/056_class.akismet.php"
    ]
  }
}