{
  "file_path": "selected_100_files\\large_500_1000\\008_wp-login.php",
  "rector_analysis": {
    "php_version_changes": 8,
    "rules_triggered": [
      "Rector\\Php53\\Rector\\FuncCall\\DirNameFileConstantToDirConstantRector",
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
      "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
      "Rector\\Php73\\Rector\\FuncCall\\SetCookieRector",
      "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
      "Rector\\Php80\\Rector\\NotIdentical\\StrContainsRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_53": 1,
      "php_54": 1,
      "php_70": 1,
      "php_71": 1,
      "php_73": 1,
      "php_80": 2,
      "php_81": 1
    },
    "has_diff": true,
    "diff_line_count": 178
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:18:05.282247",
    "file_size_kb": 32.3,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/large_500_1000/008_wp-login.php",
        "diff": "--- Original\n+++ New\n@@ -9,11 +9,11 @@\n  */\n \n /** Make sure that the WordPress bootstrap has run before continuing. */\n-require( dirname(__FILE__) . '/wp-load.php' );\n+require( __DIR__ . '/wp-load.php' );\n \n // Redirect to https login if forced to use SSL\n if ( force_ssl_admin() && ! is_ssl() ) {\n-\tif ( 0 === strpos($_SERVER['REQUEST_URI'], 'http') ) {\n+\tif ( str_starts_with((string) $_SERVER['REQUEST_URI'], 'http') ) {\n \t\twp_redirect( set_url_scheme( $_SERVER['REQUEST_URI'], 'https' ) );\n \t\texit();\n \t} else {\n@@ -42,7 +42,7 @@\n \t\t$wp_error = new WP_Error();\n \n \t// Shake it!\n-\t$shake_error_codes = array( 'empty_password', 'empty_email', 'invalid_email', 'invalidcombo', 'empty_username', 'invalid_username', 'incorrect_password' );\n+\t$shake_error_codes = [ 'empty_password', 'empty_email', 'invalid_email', 'invalidcombo', 'empty_username', 'invalid_username', 'incorrect_password' ];\n \t/**\n \t * Filter the error codes array for shaking the login form.\n \t *\n@@ -118,7 +118,7 @@\n \t */\n \t$login_header_title = apply_filters( 'login_headertitle', $login_header_title );\n \n-\t$classes = array( 'login-action-' . $action, 'wp-core-ui' );\n+\t$classes = [ 'login-action-' . $action, 'wp-core-ui' ];\n \tif ( wp_is_mobile() )\n \t\t$classes[] = 'mobile';\n \tif ( is_rtl() )\n@@ -274,12 +274,12 @@\n \n \tif ( empty( $_POST['user_login'] ) ) {\n \t\t$errors->add('empty_username', __('<strong>ERROR</strong>: Enter a username or e-mail address.'));\n-\t} else if ( strpos( $_POST['user_login'], '@' ) ) {\n-\t\t$user_data = get_user_by( 'email', trim( $_POST['user_login'] ) );\n+\t} else if ( strpos( (string) $_POST['user_login'], '@' ) ) {\n+\t\t$user_data = get_user_by( 'email', trim( (string) $_POST['user_login'] ) );\n \t\tif ( empty( $user_data ) )\n \t\t\t$errors->add('invalid_email', __('<strong>ERROR</strong>: There is no user registered with that email address.'));\n \t} else {\n-\t\t$login = trim($_POST['user_login']);\n+\t\t$login = trim((string) $_POST['user_login']);\n \t\t$user_data = get_user_by('login', $login);\n \t}\n \n@@ -355,7 +355,7 @@\n \t\t$wp_hasher = new PasswordHash( 8, true );\n \t}\n \t$hashed = $wp_hasher->HashPassword( $key );\n-\t$wpdb->update( $wpdb->users, array( 'user_activation_key' => $hashed ), array( 'user_login' => $user_login ) );\n+\t$wpdb->update( $wpdb->users, [ 'user_activation_key' => $hashed ], [ 'user_login' => $user_login ] );\n \n \t$message = __('Someone requested that the password be reset for the following account:') . \"\\r\\n\\r\\n\";\n \t$message .= network_home_url( '/' ) . \"\\r\\n\\r\\n\";\n@@ -362,7 +362,7 @@\n \t$message .= sprintf(__('Username: %s'), $user_login) . \"\\r\\n\\r\\n\";\n \t$message .= __('If this was a mistake, just ignore this email and nothing will happen.') . \"\\r\\n\\r\\n\";\n \t$message .= __('To reset your password, visit the following address:') . \"\\r\\n\\r\\n\";\n-\t$message .= '<' . network_site_url(\"wp-login.php?action=rp&key=$key&login=\" . rawurlencode($user_login), 'login') . \">\\r\\n\";\n+\t$message .= '<' . network_site_url(\"wp-login.php?action=rp&key=$key&login=\" . rawurlencode((string) $user_login), 'login') . \">\\r\\n\";\n \n \tif ( is_multisite() )\n \t\t$blogname = $GLOBALS['current_site']->site_name;\n@@ -403,7 +403,7 @@\n // Main\n //\n \n-$action = isset($_REQUEST['action']) ? $_REQUEST['action'] : 'login';\n+$action = $_REQUEST['action'] ?? 'login';\n $errors = new WP_Error();\n \n if ( isset($_GET['key']) )\n@@ -410,7 +410,7 @@\n \t$action = 'resetpass';\n \n // validate action so as to default to the login screen\n-if ( !in_array( $action, array( 'postpass', 'logout', 'lostpassword', 'retrievepassword', 'resetpass', 'rp', 'register', 'login' ), true ) && false === has_filter( 'login_form_' . $action ) )\n+if ( !in_array( $action, [ 'postpass', 'logout', 'lostpassword', 'retrievepassword', 'resetpass', 'rp', 'register', 'login' ], true ) && false === has_filter( 'login_form_' . $action ) )\n \t$action = 'login';\n \n nocache_headers();\n@@ -428,9 +428,9 @@\n \n //Set a cookie now to see if they are supported by the browser.\n $secure = ( 'https' === parse_url( site_url(), PHP_URL_SCHEME ) && 'https' === parse_url( home_url(), PHP_URL_SCHEME ) );\n-setcookie( TEST_COOKIE, 'WP Cookie check', 0, COOKIEPATH, COOKIE_DOMAIN, $secure );\n+setcookie( TEST_COOKIE, 'WP Cookie check', ['expires' => 0, 'path' => COOKIEPATH, 'domain' => COOKIE_DOMAIN, 'secure' => $secure] );\n if ( SITECOOKIEPATH != COOKIEPATH )\n-\tsetcookie( TEST_COOKIE, 'WP Cookie check', 0, SITECOOKIEPATH, COOKIE_DOMAIN, $secure );\n+\tsetcookie( TEST_COOKIE, 'WP Cookie check', ['expires' => 0, 'path' => SITECOOKIEPATH, 'domain' => COOKIE_DOMAIN, 'secure' => $secure] );\n \n /**\n  * Fires when the login form is initialized.\n@@ -470,7 +470,7 @@\n \t */\n \t$expire = apply_filters( 'post_password_expires', time() + 10 * DAY_IN_SECONDS );\n \t$secure = ( 'https' === parse_url( home_url(), PHP_URL_SCHEME ) );\n-\tsetcookie( 'wp-postpass_' . COOKIEHASH, $hasher->HashPassword( wp_unslash( $_POST['post_password'] ) ), $expire, COOKIEPATH, COOKIE_DOMAIN, $secure );\n+\tsetcookie( 'wp-postpass_' . COOKIEHASH, $hasher->HashPassword( wp_unslash( $_POST['post_password'] ) ), ['expires' => $expire, 'path' => COOKIEPATH, 'domain' => COOKIE_DOMAIN, 'secure' => $secure] );\n \n \twp_safe_redirect( wp_get_referer() );\n \texit();\n@@ -559,17 +559,17 @@\n \n case 'resetpass' :\n case 'rp' :\n-\tlist( $rp_path ) = explode( '?', wp_unslash( $_SERVER['REQUEST_URI'] ) );\n+\t[$rp_path] = explode( '?', wp_unslash( $_SERVER['REQUEST_URI'] ) );\n \t$rp_cookie = 'wp-resetpass-' . COOKIEHASH;\n \tif ( isset( $_GET['key'] ) ) {\n \t\t$value = sprintf( '%s:%s', wp_unslash( $_GET['login'] ), wp_unslash( $_GET['key'] ) );\n-\t\tsetcookie( $rp_cookie, $value, 0, $rp_path, COOKIE_DOMAIN, is_ssl(), true );\n-\t\twp_safe_redirect( remove_query_arg( array( 'key', 'login' ) ) );\n+\t\tsetcookie( $rp_cookie, $value, ['expires' => 0, 'path' => $rp_path, 'domain' => COOKIE_DOMAIN, 'secure' => is_ssl(), 'httponly' => true] );\n+\t\twp_safe_redirect( remove_query_arg( [ 'key', 'login' ] ) );\n \t\texit;\n \t}\n \n-\tif ( isset( $_COOKIE[ $rp_cookie ] ) && 0 < strpos( $_COOKIE[ $rp_cookie ], ':' ) ) {\n-\t\tlist( $rp_login, $rp_key ) = explode( ':', wp_unslash( $_COOKIE[ $rp_cookie ] ), 2 );\n+\tif ( isset( $_COOKIE[ $rp_cookie ] ) && 0 < strpos( (string) $_COOKIE[ $rp_cookie ], ':' ) ) {\n+\t\t[$rp_login, $rp_key] = explode( ':', wp_unslash( $_COOKIE[ $rp_cookie ] ), 2 );\n \t\t$user = check_password_reset_key( $rp_key, $rp_login );\n \t} else {\n \t\t$user = false;\n@@ -576,7 +576,7 @@\n \t}\n \n \tif ( ! $user || is_wp_error( $user ) ) {\n-\t\tsetcookie( $rp_cookie, ' ', time() - YEAR_IN_SECONDS, $rp_path, COOKIE_DOMAIN, is_ssl(), true );\n+\t\tsetcookie( $rp_cookie, ' ', ['expires' => time() - YEAR_IN_SECONDS, 'path' => $rp_path, 'domain' => COOKIE_DOMAIN, 'secure' => is_ssl(), 'httponly' => true] );\n \t\tif ( $user && $user->get_error_code() === 'expired_key' )\n \t\t\twp_redirect( site_url( 'wp-login.php?action=lostpassword&error=expiredkey' ) );\n \t\telse\n@@ -601,7 +601,7 @@\n \n \tif ( ( ! $errors->get_error_code() ) && isset( $_POST['pass1'] ) && !empty( $_POST['pass1'] ) ) {\n \t\treset_password($user, $_POST['pass1']);\n-\t\tsetcookie( $rp_cookie, ' ', time() - YEAR_IN_SECONDS, $rp_path, COOKIE_DOMAIN, is_ssl(), true );\n+\t\tsetcookie( $rp_cookie, ' ', ['expires' => time() - YEAR_IN_SECONDS, 'path' => $rp_path, 'domain' => COOKIE_DOMAIN, 'secure' => is_ssl(), 'httponly' => true] );\n \t\tlogin_header( __( 'Password Reset' ), '<p class=\"message reset-pass\">' . __( 'Your password has been reset.' ) . ' <a href=\"' . esc_url( wp_login_url() ) . '\">' . __( 'Log in' ) . '</a></p>' );\n \t\tlogin_footer();\n \t\texit;\n@@ -755,8 +755,8 @@\n \tif ( isset( $_REQUEST['redirect_to'] ) ) {\n \t\t$redirect_to = $_REQUEST['redirect_to'];\n \t\t// Redirect to https if user wants ssl\n-\t\tif ( $secure_cookie && false !== strpos($redirect_to, 'wp-admin') )\n-\t\t\t$redirect_to = preg_replace('|^http://|', 'https://', $redirect_to);\n+\t\tif ( $secure_cookie && str_contains((string) $redirect_to, 'wp-admin') )\n+\t\t\t$redirect_to = preg_replace('|^http://|', 'https://', (string) $redirect_to);\n \t} else {\n \t\t$redirect_to = admin_url();\n \t}\n@@ -776,7 +776,7 @@\n \t\t}\n \t}\n \n-\t$requested_redirect_to = isset( $_REQUEST['redirect_to'] ) ? $_REQUEST['redirect_to'] : '';\n+\t$requested_redirect_to = $_REQUEST['redirect_to'] ?? '';\n \t/**\n \t * Filter the login redirect URL.\n \t *\n@@ -896,7 +896,7 @@\n \n <?php if ( ! $interim_login ) { ?>\n <p id=\"nav\">\n-<?php if ( ! isset( $_GET['checkemail'] ) || ! in_array( $_GET['checkemail'], array( 'confirm', 'newpass' ) ) ) :\n+<?php if ( ! isset( $_GET['checkemail'] ) || ! in_array( $_GET['checkemail'], [ 'confirm', 'newpass' ] ) ) :\n \tif ( get_option( 'users_can_register' ) ) :\n \t\t$registration_url = sprintf( '<a href=\"%s\">%s</a>', esc_url( wp_registration_url() ), __( 'Register' ) );\n \n",
        "applied_rectors": [
          "Rector\\Php53\\Rector\\FuncCall\\DirNameFileConstantToDirConstantRector",
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
          "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
          "Rector\\Php73\\Rector\\FuncCall\\SetCookieRector",
          "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
          "Rector\\Php80\\Rector\\NotIdentical\\StrContainsRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/large_500_1000/008_wp-login.php"
    ]
  }
}