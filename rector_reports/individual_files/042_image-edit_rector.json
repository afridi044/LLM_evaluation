{
  "file_path": "selected_100_files\\large_500_1000\\042_image-edit.php",
  "rector_analysis": {
    "php_version_changes": 5,
    "rules_triggered": [
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php70\\Rector\\FuncCall\\RandomFunctionRector",
      "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
      "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_54": 1,
      "php_70": 2,
      "php_80": 1,
      "php_81": 1
    },
    "has_diff": true,
    "diff_line_count": 172
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:20:06.112190",
    "file_size_kb": 28.8,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/large_500_1000/042_image-edit.php",
        "diff": "--- Original\n+++ New\n@@ -47,7 +47,7 @@\n \t\t<p><?php printf( __('Original dimensions %s'), $meta['width'] . ' &times; ' . $meta['height'] ); ?></p>\n \t\t<?php endif ?>\n \t\t<div class=\"imgedit-submit\">\n-\t\t<span class=\"nowrap\"><input type=\"text\" id=\"imgedit-scale-width-<?php echo $post_id; ?>\" onkeyup=\"imageEdit.scaleChanged(<?php echo $post_id; ?>, 1)\" onblur=\"imageEdit.scaleChanged(<?php echo $post_id; ?>, 1)\" style=\"width:4em;\" value=\"<?php echo isset( $meta['width'] ) ? $meta['width'] : 0; ?>\" /> &times; <input type=\"text\" id=\"imgedit-scale-height-<?php echo $post_id; ?>\" onkeyup=\"imageEdit.scaleChanged(<?php echo $post_id; ?>, 0)\" onblur=\"imageEdit.scaleChanged(<?php echo $post_id; ?>, 0)\" style=\"width:4em;\" value=\"<?php echo isset( $meta['height'] ) ? $meta['height'] : 0; ?>\" />\n+\t\t<span class=\"nowrap\"><input type=\"text\" id=\"imgedit-scale-width-<?php echo $post_id; ?>\" onkeyup=\"imageEdit.scaleChanged(<?php echo $post_id; ?>, 1)\" onblur=\"imageEdit.scaleChanged(<?php echo $post_id; ?>, 1)\" style=\"width:4em;\" value=\"<?php echo $meta['width'] ?? 0; ?>\" /> &times; <input type=\"text\" id=\"imgedit-scale-height-<?php echo $post_id; ?>\" onkeyup=\"imageEdit.scaleChanged(<?php echo $post_id; ?>, 0)\" onblur=\"imageEdit.scaleChanged(<?php echo $post_id; ?>, 0)\" style=\"width:4em;\" value=\"<?php echo $meta['height'] ?? 0; ?>\" />\n \t\t<span class=\"imgedit-scale-warn\" id=\"imgedit-scale-warn-<?php echo $post_id; ?>\">!</span></span>\n \t\t<input type=\"button\" onclick=\"imageEdit.action(<?php echo \"$post_id, '$nonce'\"; ?>, 'scale')\" class=\"button button-primary\" value=\"<?php esc_attr_e( 'Scale' ); ?>\" />\n \t\t</div>\n@@ -151,7 +151,7 @@\n \t\t\t<div onclick=\"imageEdit.crop(<?php echo \"$post_id, '$nonce'\"; ?>, this)\" class=\"imgedit-crop disabled\" title=\"<?php esc_attr_e( 'Crop' ); ?>\"></div><?php\n \n \t\t// On some setups GD library does not provide imagerotate() - Ticket #11536\n-\t\tif ( wp_image_editor_supports( array( 'mime_type' => get_post_mime_type( $post_id ), 'methods' => array( 'rotate' ) ) ) ) { ?>\n+\t\tif ( wp_image_editor_supports( [ 'mime_type' => get_post_mime_type( $post_id ), 'methods' => [ 'rotate' ] ] ) ) { ?>\n \t\t\t<div class=\"imgedit-rleft\"  onclick=\"imageEdit.rotate( 90, <?php echo \"$post_id, '$nonce'\"; ?>, this)\" title=\"<?php esc_attr_e( 'Rotate counter-clockwise' ); ?>\"></div>\n \t\t\t<div class=\"imgedit-rright\" onclick=\"imageEdit.rotate(-90, <?php echo \"$post_id, '$nonce'\"; ?>, this)\" title=\"<?php esc_attr_e( 'Rotate clockwise' ); ?>\"></div>\n \t<?php } else {\n@@ -173,11 +173,11 @@\n \t\t<input type=\"hidden\" id=\"imgedit-history-<?php echo $post_id; ?>\" value=\"\" />\n \t\t<input type=\"hidden\" id=\"imgedit-undone-<?php echo $post_id; ?>\" value=\"0\" />\n \t\t<input type=\"hidden\" id=\"imgedit-selection-<?php echo $post_id; ?>\" value=\"\" />\n-\t\t<input type=\"hidden\" id=\"imgedit-x-<?php echo $post_id; ?>\" value=\"<?php echo isset( $meta['width'] ) ? $meta['width'] : 0; ?>\" />\n-\t\t<input type=\"hidden\" id=\"imgedit-y-<?php echo $post_id; ?>\" value=\"<?php echo isset( $meta['height'] ) ? $meta['height'] : 0; ?>\" />\n+\t\t<input type=\"hidden\" id=\"imgedit-x-<?php echo $post_id; ?>\" value=\"<?php echo $meta['width'] ?? 0; ?>\" />\n+\t\t<input type=\"hidden\" id=\"imgedit-y-<?php echo $post_id; ?>\" value=\"<?php echo $meta['height'] ?? 0; ?>\" />\n \n \t\t<div id=\"imgedit-crop-<?php echo $post_id; ?>\" class=\"imgedit-crop-wrap\">\n-\t\t<img id=\"image-preview-<?php echo $post_id; ?>\" onload=\"imageEdit.imgLoaded('<?php echo $post_id; ?>')\" src=\"<?php echo admin_url( 'admin-ajax.php', 'relative' ); ?>?action=imgedit-preview&amp;_ajax_nonce=<?php echo $nonce; ?>&amp;postid=<?php echo $post_id; ?>&amp;rand=<?php echo rand(1, 99999); ?>\" />\n+\t\t<img id=\"image-preview-<?php echo $post_id; ?>\" onload=\"imageEdit.imgLoaded('<?php echo $post_id; ?>')\" src=\"<?php echo admin_url( 'admin-ajax.php', 'relative' ); ?>?action=imgedit-preview&amp;_ajax_nonce=<?php echo $nonce; ?>&amp;postid=<?php echo $post_id; ?>&amp;rand=<?php echo random_int(1, 99999); ?>\" />\n \t\t</div>\n \n \t\t<div class=\"imgedit-submit\">\n@@ -311,18 +311,13 @@\n \t\tif ( null !== $saved )\n \t\t\treturn $saved;\n \n-\t\tswitch ( $mime_type ) {\n-\t\t\tcase 'image/jpeg':\n-\n-\t\t\t\t/** This filter is documented in wp-includes/class-wp-image-editor.php */\n-\t\t\t\treturn imagejpeg( $image, $filename, apply_filters( 'jpeg_quality', 90, 'edit_image' ) );\n-\t\t\tcase 'image/png':\n-\t\t\t\treturn imagepng( $image, $filename );\n-\t\t\tcase 'image/gif':\n-\t\t\t\treturn imagegif( $image, $filename );\n-\t\t\tdefault:\n-\t\t\t\treturn false;\n-\t\t}\n+\t\treturn match ($mime_type) {\n+            /** This filter is documented in wp-includes/class-wp-image-editor.php */\n+            'image/jpeg' => imagejpeg( $image, $filename, apply_filters( 'jpeg_quality', 90, 'edit_image' ) ),\n+            'image/png' => imagepng( $image, $filename ),\n+            'image/gif' => imagegif( $image, $filename ),\n+            default => false,\n+        };\n \t}\n }\n \n@@ -430,7 +425,7 @@\n \n \t// Combine operations.\n \tif ( count($changes) > 1 ) {\n-\t\t$filtered = array($changes[0]);\n+\t\t$filtered = [$changes[0]];\n \t\tfor ( $i = 0, $j = 1; $j < count($changes); $j++ ) {\n \t\t\t$combined = false;\n \t\t\tif ( $filtered[$i]->type == $changes[$j]->type ) {\n@@ -567,7 +562,7 @@\n \t}\n \n \t$parts = pathinfo($file);\n-\t$suffix = time() . rand(100, 999);\n+\t$suffix = time() . random_int(100, 999);\n \t$default_sizes = get_intermediate_image_sizes();\n \n \tif ( isset($backup_sizes['full-orig']) && is_array($backup_sizes['full-orig']) ) {\n@@ -584,7 +579,7 @@\n \t\t\t\t\t@unlink($delpath);\n \t\t\t\t}\n \t\t\t} elseif ( isset( $meta['width'], $meta['height'] ) ) {\n-\t\t\t\t$backup_sizes[\"full-$suffix\"] = array('width' => $meta['width'], 'height' => $meta['height'], 'file' => $parts['basename']);\n+\t\t\t\t$backup_sizes[\"full-$suffix\"] = ['width' => $meta['width'], 'height' => $meta['height'], 'file' => $parts['basename']];\n \t\t\t}\n \t\t}\n \n@@ -603,7 +598,7 @@\n \t\t\t\tif ( defined('IMAGE_EDIT_OVERWRITE') && IMAGE_EDIT_OVERWRITE ) {\n \n \t\t\t\t\t// Delete only if it's edited image\n-\t\t\t\t\tif ( preg_match('/-e[0-9]{13}-/', $meta['sizes'][$default_size]['file']) ) {\n+\t\t\t\t\tif ( preg_match('/-e[0-9]{13}-/', (string) $meta['sizes'][$default_size]['file']) ) {\n \t\t\t\t\t\t/** This filter is documented in wp-admin/custom-header.php */\n \t\t\t\t\t\t$delpath = apply_filters( 'wp_delete_file', path_join($parts['dirname'], $meta['sizes'][$default_size]['file']) );\n \t\t\t\t\t\t@unlink($delpath);\n@@ -654,7 +649,7 @@\n \n \t$fwidth = !empty($_REQUEST['fwidth']) ? intval($_REQUEST['fwidth']) : 0;\n \t$fheight = !empty($_REQUEST['fheight']) ? intval($_REQUEST['fheight']) : 0;\n-\t$target = !empty($_REQUEST['target']) ? preg_replace('/[^a-z0-9_-]+/i', '', $_REQUEST['target']) : '';\n+\t$target = !empty($_REQUEST['target']) ? preg_replace('/[^a-z0-9_-]+/i', '', (string) $_REQUEST['target']) : '';\n \t$scale = !empty($_REQUEST['do']) && 'scale' == $_REQUEST['do'];\n \n \tif ( $scale && $fwidth > 0 && $fheight > 0 ) {\n@@ -692,13 +687,13 @@\n \t}\n \n \tif ( !is_array($backup_sizes) )\n-\t\t$backup_sizes = array();\n+\t\t$backup_sizes = [];\n \n \t// Generate new filename.\n \t$path = get_attached_file($post_id);\n \t$path_parts = pathinfo( $path );\n \t$filename = $path_parts['filename'];\n-\t$suffix = time() . rand(100, 999);\n+\t$suffix = time() . random_int(100, 999);\n \n \tif ( defined('IMAGE_EDIT_OVERWRITE') && IMAGE_EDIT_OVERWRITE &&\n \t\tisset($backup_sizes['full-orig']) && $backup_sizes['full-orig']['file'] != $path_parts['basename'] ) {\n@@ -736,7 +731,7 @@\n \t\t}\n \n \t\tif ( $tag )\n-\t\t\t$backup_sizes[$tag] = array('width' => $meta['width'], 'height' => $meta['height'], 'file' => $path_parts['basename']);\n+\t\t\t$backup_sizes[$tag] = ['width' => $meta['width'], 'height' => $meta['height'], 'file' => $path_parts['basename']];\n \n \t\t$success = update_attached_file( $post_id, $new_path );\n \n@@ -749,18 +744,18 @@\n \t\tif ( $success && ('nothumb' == $target || 'all' == $target) ) {\n \t\t\t$sizes = get_intermediate_image_sizes();\n \t\t\tif ( 'nothumb' == $target )\n-\t\t\t\t$sizes = array_diff( $sizes, array('thumbnail') );\n+\t\t\t\t$sizes = array_diff( $sizes, ['thumbnail'] );\n \t\t}\n \n \t\t$return->fw = $meta['width'];\n \t\t$return->fh = $meta['height'];\n \t} elseif ( 'thumbnail' == $target ) {\n-\t\t$sizes = array( 'thumbnail' );\n+\t\t$sizes = [ 'thumbnail' ];\n \t\t$success = $delete = $nocrop = true;\n \t}\n \n \tif ( isset( $sizes ) ) {\n-\t\t$_sizes = array();\n+\t\t$_sizes = [];\n \n \t\tforeach ( $sizes as $size ) {\n \t\t\t$tag = false;\n@@ -786,7 +781,7 @@\n \t\t\t\t$crop   = ( $nocrop ) ? false : get_option( \"{$size}_crop\" );\n \t\t\t}\n \n-\t\t\t$_sizes[ $size ] = array( 'width' => $width, 'height' => $height, 'crop' => $crop );\n+\t\t\t$_sizes[ $size ] = [ 'width' => $width, 'height' => $height, 'crop' => $crop ];\n \t\t}\n \n \t\t$meta['sizes'] = array_merge( $meta['sizes'], $img->multi_resize( $_sizes ) );\n@@ -801,7 +796,7 @@\n \t\tif ( $target == 'thumbnail' || $target == 'all' || $target == 'full' ) {\n \t\t\t// Check if it's an image edit from attachment edit screen\n \t\t\tif ( ! empty( $_REQUEST['context'] ) && 'edit-attachment' == $_REQUEST['context'] ) {\n-\t\t\t\t$thumb_url = wp_get_attachment_image_src( $post_id, array( 900, 600 ), true );\n+\t\t\t\t$thumb_url = wp_get_attachment_image_src( $post_id, [ 900, 600 ], true );\n \t\t\t\t$return->thumbnail = $thumb_url[0];\n \t\t\t} else {\n \t\t\t\t$file_url = wp_get_attachment_url($post_id);\n",
        "applied_rectors": [
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php70\\Rector\\FuncCall\\RandomFunctionRector",
          "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
          "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/large_500_1000/042_image-edit.php"
    ]
  }
}