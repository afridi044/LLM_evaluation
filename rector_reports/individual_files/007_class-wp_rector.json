{
  "file_path": "selected_100_files\\large_500_1000\\007_class-wp.php",
  "rector_analysis": {
    "php_version_changes": 9,
    "rules_triggered": [
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php70\\Rector\\ClassMethod\\Php4ConstructorRector",
      "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
      "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
      "Rector\\Php80\\Rector\\Class_\\ClassPropertyAssignToConstructorPromotionRector",
      "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
      "Rector\\Php80\\Rector\\NotIdentical\\StrContainsRector",
      "Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_54": 1,
      "php_70": 2,
      "php_71": 1,
      "php_80": 3,
      "php_81": 2
    },
    "has_diff": true,
    "diff_line_count": 301
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:18:01.211205",
    "file_size_kb": 22.8,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/large_500_1000/007_class-wp.php",
        "diff": "--- Original\n+++ New\n@@ -15,7 +15,7 @@\n \t * @access public\n \t * @var array\n \t */\n-\tpublic $public_query_vars = array('m', 'p', 'posts', 'w', 'cat', 'withcomments', 'withoutcomments', 's', 'search', 'exact', 'sentence', 'calendar', 'page', 'paged', 'more', 'tb', 'pb', 'author', 'order', 'orderby', 'year', 'monthnum', 'day', 'hour', 'minute', 'second', 'name', 'category_name', 'tag', 'feed', 'author_name', 'static', 'pagename', 'page_id', 'error', 'comments_popup', 'attachment', 'attachment_id', 'subpost', 'subpost_id', 'preview', 'robots', 'taxonomy', 'term', 'cpage', 'post_type');\n+\tpublic $public_query_vars = ['m', 'p', 'posts', 'w', 'cat', 'withcomments', 'withoutcomments', 's', 'search', 'exact', 'sentence', 'calendar', 'page', 'paged', 'more', 'tb', 'pb', 'author', 'order', 'orderby', 'year', 'monthnum', 'day', 'hour', 'minute', 'second', 'name', 'category_name', 'tag', 'feed', 'author_name', 'static', 'pagename', 'page_id', 'error', 'comments_popup', 'attachment', 'attachment_id', 'subpost', 'subpost_id', 'preview', 'robots', 'taxonomy', 'term', 'cpage', 'post_type'];\n \n \t/**\n \t * Private query variables.\n@@ -25,7 +25,7 @@\n \t * @since 2.0.0\n \t * @var array\n \t */\n-\tpublic $private_query_vars = array( 'offset', 'posts_per_page', 'posts_per_archive_page', 'showposts', 'nopaging', 'post_type', 'post_status', 'category__in', 'category__not_in', 'category__and', 'tag__in', 'tag__not_in', 'tag__and', 'tag_slug__in', 'tag_slug__and', 'tag_id', 'post_mime_type', 'perm', 'comments_per_page', 'post__in', 'post__not_in', 'post_parent', 'post_parent__in', 'post_parent__not_in' );\n+\tpublic $private_query_vars = [ 'offset', 'posts_per_page', 'posts_per_archive_page', 'showposts', 'nopaging', 'post_type', 'post_status', 'category__in', 'category__not_in', 'category__and', 'tag__in', 'tag__not_in', 'tag__and', 'tag_slug__in', 'tag_slug__and', 'tag_id', 'post_mime_type', 'perm', 'comments_per_page', 'post__in', 'post__not_in', 'post_parent', 'post_parent__in', 'post_parent__not_in' ];\n \n \t/**\n \t * Extra query variables set by the user.\n@@ -33,7 +33,7 @@\n \t * @since 2.1.0\n \t * @var array\n \t */\n-\tpublic $extra_query_vars = array();\n+\tpublic $extra_query_vars = [];\n \n \t/**\n \t * Query variables for setting up the WordPress Query Loop.\n@@ -132,8 +132,8 @@\n \t\tif ( ! apply_filters( 'do_parse_request', true, $this, $extra_query_vars ) )\n \t\t\treturn;\n \n-\t\t$this->query_vars = array();\n-\t\t$post_type_query_vars = array();\n+\t\t$this->query_vars = [];\n+\t\t$post_type_query_vars = [];\n \n \t\tif ( is_array($extra_query_vars) )\n \t\t\t$this->extra_query_vars = & $extra_query_vars;\n@@ -150,11 +150,11 @@\n \t\t\t$error = '404';\n \t\t\t$this->did_permalink = true;\n \n-\t\t\t$pathinfo = isset( $_SERVER['PATH_INFO'] ) ? $_SERVER['PATH_INFO'] : '';\n-\t\t\tlist( $pathinfo ) = explode( '?', $pathinfo );\n+\t\t\t$pathinfo = $_SERVER['PATH_INFO'] ?? '';\n+\t\t\t[$pathinfo] = explode( '?', (string) $pathinfo );\n \t\t\t$pathinfo = str_replace( \"%\", \"%25\", $pathinfo );\n \n-\t\t\tlist( $req_uri ) = explode( '?', $_SERVER['REQUEST_URI'] );\n+\t\t\t[$req_uri] = explode( '?', (string) $_SERVER['REQUEST_URI'] );\n \t\t\t$self = $_SERVER['PHP_SELF'];\n \t\t\t$home_path = trim( parse_url( home_url(), PHP_URL_PATH ), '/' );\n \n@@ -165,13 +165,13 @@\n \t\t\t$req_uri = str_replace($pathinfo, '', $req_uri);\n \t\t\t$req_uri = trim($req_uri, '/');\n \t\t\t$req_uri = preg_replace(\"|^$home_path|i\", '', $req_uri);\n-\t\t\t$req_uri = trim($req_uri, '/');\n+\t\t\t$req_uri = trim((string) $req_uri, '/');\n \t\t\t$pathinfo = trim($pathinfo, '/');\n \t\t\t$pathinfo = preg_replace(\"|^$home_path|i\", '', $pathinfo);\n-\t\t\t$pathinfo = trim($pathinfo, '/');\n-\t\t\t$self = trim($self, '/');\n+\t\t\t$pathinfo = trim((string) $pathinfo, '/');\n+\t\t\t$self = trim((string) $self, '/');\n \t\t\t$self = preg_replace(\"|^$home_path|i\", '', $self);\n-\t\t\t$self = trim($self, '/');\n+\t\t\t$self = trim((string) $self, '/');\n \n \t\t\t// The requested permalink is in $pathinfo for path info requests and\n \t\t\t//  $req_uri for other requests.\n@@ -193,18 +193,18 @@\n \t\t\t\tif ( isset( $rewrite['$'] ) ) {\n \t\t\t\t\t$this->matched_rule = '$';\n \t\t\t\t\t$query = $rewrite['$'];\n-\t\t\t\t\t$matches = array('');\n+\t\t\t\t\t$matches = [''];\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tforeach ( (array) $rewrite as $match => $query ) {\n \t\t\t\t\t// If the requesting file is the anchor of the match, prepend it to the path info.\n-\t\t\t\t\tif ( ! empty($req_uri) && strpos($match, $req_uri) === 0 && $req_uri != $request )\n+\t\t\t\t\tif ( ! empty($req_uri) && str_starts_with($match, $req_uri) && $req_uri != $request )\n \t\t\t\t\t\t$request_match = $req_uri . '/' . $request;\n \n \t\t\t\t\tif ( preg_match(\"#^$match#\", $request_match, $matches) ||\n \t\t\t\t\t\tpreg_match(\"#^$match#\", urldecode($request_match), $matches) ) {\n \n-\t\t\t\t\t\tif ( $wp_rewrite->use_verbose_page_rules && preg_match( '/pagename=\\$matches\\[([0-9]+)\\]/', $query, $varmatch ) ) {\n+\t\t\t\t\t\tif ( $wp_rewrite->use_verbose_page_rules && preg_match( '/pagename=\\$matches\\[([0-9]+)\\]/', (string) $query, $varmatch ) ) {\n \t\t\t\t\t\t\t// this is a verbose page match, lets check to be sure about it\n \t\t\t\t\t\t\tif ( ! get_page_by_path( $matches[ $varmatch[1] ] ) )\n \t\t\t\t\t\t \t\tcontinue;\n@@ -219,7 +219,7 @@\n \n \t\t\tif ( isset( $this->matched_rule ) ) {\n \t\t\t\t// Trim the query of everything up to the '?'.\n-\t\t\t\t$query = preg_replace(\"!^.+\\?!\", '', $query);\n+\t\t\t\t$query = preg_replace(\"!^.+\\?!\", '', (string) $query);\n \n \t\t\t\t// Substitute the substring matches into the query.\n \t\t\t\t$query = addslashes(WP_MatchesMapRegex::apply($query, $matches));\n@@ -235,10 +235,10 @@\n \t\t\t}\n \n \t\t\t// If req_uri is empty or if it is a request for ourself, unset error.\n-\t\t\tif ( empty($request) || $req_uri == $self || strpos($_SERVER['PHP_SELF'], 'wp-admin/') !== false ) {\n+\t\t\tif ( empty($request) || $req_uri == $self || str_contains((string) $_SERVER['PHP_SELF'], 'wp-admin/') ) {\n \t\t\t\tunset( $error, $_GET['error'] );\n \n-\t\t\t\tif ( isset($perma_query_vars) && strpos($_SERVER['PHP_SELF'], 'wp-admin/') !== false )\n+\t\t\t\tif ( isset($perma_query_vars) && str_contains((string) $_SERVER['PHP_SELF'], 'wp-admin/') )\n \t\t\t\t\tunset( $perma_query_vars );\n \n \t\t\t\t$this->did_permalink = false;\n@@ -258,7 +258,7 @@\n \t\t */\n \t\t$this->public_query_vars = apply_filters( 'query_vars', $this->public_query_vars );\n \n-\t\tforeach ( get_post_types( array(), 'objects' ) as $post_type => $t )\n+\t\tforeach ( get_post_types( [], 'objects' ) as $post_type => $t )\n \t\t\tif ( $t->query_var )\n \t\t\t\t$post_type_query_vars[$t->query_var] = $post_type;\n \n@@ -291,13 +291,13 @@\n \t\t}\n \n \t\t// Convert urldecoded spaces back into +\n-\t\tforeach ( get_taxonomies( array() , 'objects' ) as $taxonomy => $t )\n+\t\tforeach ( get_taxonomies( [] , 'objects' ) as $taxonomy => $t )\n \t\t\tif ( $t->query_var && isset( $this->query_vars[$t->query_var] ) )\n \t\t\t\t$this->query_vars[$t->query_var] = str_replace( ' ', '+', $this->query_vars[$t->query_var] );\n \n \t\t// Limit publicly queried post_types to those that are publicly_queryable\n \t\tif ( isset( $this->query_vars['post_type']) ) {\n-\t\t\t$queryable_post_types = get_post_types( array('publicly_queryable' => true) );\n+\t\t\t$queryable_post_types = get_post_types( ['publicly_queryable' => true] );\n \t\t\tif ( ! is_array( $this->query_vars['post_type'] ) ) {\n \t\t\t\tif ( ! in_array( $this->query_vars['post_type'], $queryable_post_types ) )\n \t\t\t\t\tunset( $this->query_vars['post_type'] );\n@@ -330,7 +330,7 @@\n \t\t *\n \t\t * @param WP &$this Current WordPress environment instance (passed by reference).\n \t\t */\n-\t\tdo_action_ref_array( 'parse_request', array( &$this ) );\n+\t\tdo_action_ref_array( 'parse_request', [ &$this ] );\n \t}\n \n \t/**\n@@ -342,7 +342,7 @@\n \t * @since 2.0.0\n \t */\n \tpublic function send_headers() {\n-\t\t$headers = array('X-Pingback' => get_bloginfo('pingback_url'));\n+\t\t$headers = ['X-Pingback' => get_bloginfo('pingback_url')];\n \t\t$status = null;\n \t\t$exit_required = false;\n \n@@ -354,7 +354,7 @@\n \t\t\t\tif ( ! is_user_logged_in() )\n \t\t\t\t\t$headers = array_merge($headers, wp_get_nocache_headers());\n \t\t\t\t$headers['Content-Type'] = get_option('html_type') . '; charset=' . get_option('blog_charset');\n-\t\t\t} elseif ( in_array( $status, array( 403, 500, 502, 503 ) ) ) {\n+\t\t\t} elseif ( in_array( $status, [ 403, 500, 502, 503 ] ) ) {\n \t\t\t\t$exit_required = true;\n \t\t\t}\n \t\t} else if ( empty($this->query_vars['feed']) ) {\n@@ -362,7 +362,7 @@\n \t\t} else {\n \t\t\t// We're showing a feed, so WP is indeed the only thing that last changed\n \t\t\tif ( !empty($this->query_vars['withcomments'])\n-\t\t\t\t|| false !== strpos( $this->query_vars['feed'], 'comments-' )\n+\t\t\t\t|| str_contains( (string) $this->query_vars['feed'], 'comments-' )\n \t\t\t\t|| ( empty($this->query_vars['withoutcomments'])\n \t\t\t\t\t&& ( !empty($this->query_vars['p'])\n \t\t\t\t\t\t|| !empty($this->query_vars['name'])\n@@ -385,7 +385,7 @@\n \t\t\t\t$client_etag = wp_unslash( $_SERVER['HTTP_IF_NONE_MATCH'] );\n \t\t\telse $client_etag = false;\n \n-\t\t\t$client_last_modified = empty($_SERVER['HTTP_IF_MODIFIED_SINCE']) ? '' : trim($_SERVER['HTTP_IF_MODIFIED_SINCE']);\n+\t\t\t$client_last_modified = empty($_SERVER['HTTP_IF_MODIFIED_SINCE']) ? '' : trim((string) $_SERVER['HTTP_IF_MODIFIED_SINCE']);\n \t\t\t// If string is empty, return 0. If not, attempt to parse into a timestamp\n \t\t\t$client_modified_timestamp = $client_last_modified ? strtotime($client_last_modified) : 0;\n \n@@ -445,7 +445,7 @@\n \t\t *\n \t\t * @param WP &$this Current WordPress environment instance (passed by reference).\n \t\t */\n-\t\tdo_action_ref_array( 'send_headers', array( &$this ) );\n+\t\tdo_action_ref_array( 'send_headers', [ &$this ] );\n \t}\n \n \t/**\n@@ -508,7 +508,7 @@\n \n \t\t$GLOBALS['query_string'] = $this->query_string;\n \t\t$GLOBALS['posts'] = & $wp_query->posts;\n-\t\t$GLOBALS['post'] = isset( $wp_query->post ) ? $wp_query->post : null;\n+\t\t$GLOBALS['post'] = $wp_query->post ?? null;\n \t\t$GLOBALS['request'] = $wp_query->request;\n \n \t\tif ( $wp_query->is_single() || $wp_query->is_page() ) {\n@@ -620,7 +620,7 @@\n \t\t *\n \t\t * @param WP &$this Current WordPress environment instance (passed by reference).\n \t\t */\n-\t\tdo_action_ref_array( 'wp', array( &$this ) );\n+\t\tdo_action_ref_array( 'wp', [ &$this ] );\n \t}\n \n }\n@@ -632,14 +632,6 @@\n  */\n class WP_MatchesMapRegex {\n \t/**\n-\t * store for matches\n-\t *\n-\t * @access private\n-\t * @var array\n-\t */\n-\tprivate $_matches;\n-\n-\t/**\n \t * store for mapping result\n \t *\n \t * @access public\n@@ -648,14 +640,6 @@\n \tpublic $output;\n \n \t/**\n-\t * subject to perform mapping on (query string containing $matches[] references\n-\t *\n-\t * @access private\n-\t * @var string\n-\t */\n-\tprivate $_subject;\n-\n-\t/**\n \t * regexp pattern to match $matches[] references\n \t *\n \t * @var string\n@@ -725,19 +709,27 @@\n \t * @return mixed|bool Return value of the callback, false otherwise.\n \t */\n \tpublic function __call( $name, $arguments ) {\n-\t\treturn call_user_func_array( array( $this, $name ), $arguments );\n+\t\treturn call_user_func_array( [ $this, $name ], $arguments );\n \t}\n \n \t/**\n-\t * constructor\n-\t *\n-\t * @param string $subject subject if regex\n-\t * @param array  $matches data to use in map\n-\t * @return self\n-\t */\n-\tpublic function WP_MatchesMapRegex($subject, $matches) {\n-\t\t$this->_subject = $subject;\n-\t\t$this->_matches = $matches;\n+     * constructor\n+     *\n+     * @param string $_subject subject if regex\n+     * @param array $_matches data to use in map\n+     * @return self\n+     */\n+    public function __construct(/**\n+     * subject to perform mapping on (query string containing $matches[] references\n+     *\n+     * @access private\n+     */\n+    private $_subject, /**\n+     * store for matches\n+     *\n+     * @access private\n+     */\n+    private $_matches) {\n \t\t$this->output = $this->_map();\n \t}\n \n@@ -763,7 +755,7 @@\n \t * @return string\n \t */\n \tprivate function _map() {\n-\t\t$callback = array($this, 'callback');\n+\t\t$callback = $this->callback(...);\n \t\treturn preg_replace_callback($this->_pattern, $callback, $this->_subject);\n \t}\n \n@@ -775,7 +767,7 @@\n \t * @return string\n \t */\n \tpublic function callback($matches) {\n-\t\t$index = intval(substr($matches[0], 9, -1));\n+\t\t$index = intval(substr((string) $matches[0], 9, -1));\n \t\treturn ( isset( $this->_matches[$index] ) ? urlencode($this->_matches[$index]) : '' );\n \t}\n \n",
        "applied_rectors": [
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php70\\Rector\\ClassMethod\\Php4ConstructorRector",
          "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
          "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
          "Rector\\Php80\\Rector\\Class_\\ClassPropertyAssignToConstructorPromotionRector",
          "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
          "Rector\\Php80\\Rector\\NotIdentical\\StrContainsRector",
          "Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/large_500_1000/007_class-wp.php"
    ]
  }
}