{
  "file_path": "selected_100_files\\large_500_1000\\021_class-pop3.php",
  "rector_analysis": {
    "php_version_changes": 7,
    "rules_triggered": [
      "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
      "Rector\\Php73\\Rector\\FuncCall\\StringifyStrNeedlesRector",
      "Rector\\Php74\\Rector\\ArrayDimFetch\\CurlyToSquareBracketArrayStringRector",
      "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_52": 1,
      "php_54": 1,
      "php_71": 1,
      "php_73": 1,
      "php_74": 1,
      "php_80": 1,
      "php_81": 1
    },
    "has_diff": true,
    "diff_line_count": 206
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:18:58.826634",
    "file_size_kb": 20.3,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/large_500_1000/021_class-pop3.php",
        "diff": "--- Original\n+++ New\n@@ -17,30 +17,30 @@\n  */\n \n class POP3 {\n-    var $ERROR      = '';       //  Error string.\n+    public $ERROR      = '';       //  Error string.\n \n-    var $TIMEOUT    = 60;       //  Default timeout before giving up on a\n+    public $TIMEOUT    = 60;       //  Default timeout before giving up on a\n                                 //  network operation.\n \n-    var $COUNT      = -1;       //  Mailbox msg count\n+    public $COUNT      = -1;       //  Mailbox msg count\n \n-    var $BUFFER     = 512;      //  Socket buffer for socket fgets() calls.\n+    public $BUFFER     = 512;      //  Socket buffer for socket fgets() calls.\n                                 //  Per RFC 1939 the returned line a POP3\n                                 //  server can send is 512 bytes.\n \n-    var $FP         = '';       //  The connection to the server's\n+    public $FP         = '';       //  The connection to the server's\n                                 //  file descriptor\n \n-    var $MAILSERVER = '';       // Set this to hard code the server name\n+    public $MAILSERVER = '';       // Set this to hard code the server name\n \n-    var $DEBUG      = FALSE;    // set to true to echo pop3\n+    public $DEBUG      = FALSE;    // set to true to echo pop3\n                                 // commands and responses to error_log\n                                 // this WILL log passwords!\n \n-    var $BANNER     = '';       //  Holds the banner returned by the\n+    public $BANNER     = '';       //  Holds the banner returned by the\n                                 //  pop server - used for apop()\n \n-    var $ALLOWAPOP  = FALSE;    //  Allow or disallow apop()\n+    public $ALLOWAPOP  = FALSE;    //  Allow or disallow apop()\n                                 //  This must be set to true\n                                 //  manually\n \n@@ -179,7 +179,7 @@\n             } else {\n                 $AuthString = $banner;\n                 $AuthString .= $pass;\n-                $APOPString = md5($AuthString);\n+                $APOPString = md5((string) $AuthString);\n                 $cmd = \"APOP $login $APOPString\";\n                 $reply = $this->send_cmd($cmd);\n                 if(!$this->is_ok($reply)) {\n@@ -248,10 +248,10 @@\n         }\n \n         $count = 0;\n-        $MsgArray = array();\n+        $MsgArray = [];\n \n         $line = fgets($fp,$buffer);\n-        while ( !preg_match('/^\\.\\r\\n/',$line))\n+        while ( !preg_match('/^\\.\\r\\n/',(string) $line))\n         {\n             $MsgArray[$count] = $line;\n             $count++;\n@@ -280,7 +280,7 @@\n         }\n         if($Total == 0)\n         {\n-            return array(\"0\",\"0\");\n+            return [\"0\",\"0\"];\n             // return -1;   // mailbox empty\n         }\n \n@@ -300,7 +300,7 @@\n                 $this->ERROR = \"POP3 pop_list: \" . _(\"Error \") . \"[$reply]\";\n                 return false;\n             }\n-            list($junk,$num,$size) = preg_split('/\\s+/',$reply);\n+            [$junk, $num, $size] = preg_split('/\\s+/',(string) $reply);\n             return $size;\n         }\n         $cmd = \"LIST\";\n@@ -311,7 +311,7 @@\n             $this->ERROR = \"POP3 pop_list: \" . _(\"Error \") .  \"[$reply]\";\n             return false;\n         }\n-        $MsgArray = array();\n+        $MsgArray = [];\n         $MsgArray[0] = $Total;\n         for($msgC=1;$msgC <= $Total; $msgC++)\n         {\n@@ -318,12 +318,12 @@\n             if($msgC > $Total) { break; }\n             $line = fgets($fp,$this->BUFFER);\n             $line = $this->strip_clf($line);\n-            if(strpos($line, '.') === 0)\n+            if(str_starts_with((string) $line, '.'))\n             {\n                 $this->ERROR = \"POP3 pop_list: \" . _(\"Premature end of list\");\n                 return false;\n             }\n-            list($thisMsg,$msgSize) = preg_split('/\\s+/',$line);\n+            [$thisMsg, $msgSize] = preg_split('/\\s+/',(string) $line);\n             settype($thisMsg,\"integer\");\n             if($thisMsg != $msgC)\n             {\n@@ -361,12 +361,12 @@\n         }\n \n         $count = 0;\n-        $MsgArray = array();\n+        $MsgArray = [];\n \n         $line = fgets($fp,$buffer);\n-        while ( !preg_match('/^\\.\\r\\n/',$line))\n+        while ( !preg_match('/^\\.\\r\\n/',(string) $line))\n         {\n-            if ( $line{0} == '.' ) { $line = substr($line,1); }\n+            if ( $line[0] == '.' ) { $line = substr((string) $line,1); }\n             $MsgArray[$count] = $line;\n             $count++;\n             $line = fgets($fp,$buffer);\n@@ -394,7 +394,7 @@\n             return $last;\n         }\n \n-        $Vars = preg_split('/\\s+/',$reply);\n+        $Vars = preg_split('/\\s+/',(string) $reply);\n         $count = $Vars[1];\n         $size = $Vars[2];\n         settype($count,\"integer\");\n@@ -401,7 +401,7 @@\n         settype($size,\"integer\");\n         if($type != \"count\")\n         {\n-            return array($count,$size);\n+            return [$count,$size];\n         }\n         return $count;\n     }\n@@ -525,12 +525,12 @@\n                 $this->ERROR = \"POP3 uidl: \" . _(\"Error \") . \"[$reply]\";\n                 return false;\n             }\n-            list ($ok,$num,$myUidl) = preg_split('/\\s+/',$reply);\n+            [$ok, $num, $myUidl] = preg_split('/\\s+/',(string) $reply);\n             return $myUidl;\n         } else {\n             $this->update_timer();\n \n-            $UIDLArray = array();\n+            $UIDLArray = [];\n             $Total = $this->COUNT;\n             $UIDLArray[0] = $Total;\n \n@@ -552,8 +552,8 @@\n             $line = \"\";\n             $count = 1;\n             $line = fgets($fp,$buffer);\n-            while ( !preg_match('/^\\.\\r\\n/',$line)) {\n-                list ($msg,$msgUidl) = preg_split('/\\s+/',$line);\n+            while ( !preg_match('/^\\.\\r\\n/',(string) $line)) {\n+                [$msg, $msgUidl] = preg_split('/\\s+/',(string) $line);\n                 $msgUidl = $this->strip_clf($msgUidl);\n                 if($count == $msg) {\n                     $UIDLArray[$msg] = $msgUidl;\n@@ -602,7 +602,7 @@\n         if( empty($cmd) )\n             return false;\n         else\n-            return( stripos($cmd, '+OK') !== false );\n+            return( stripos((string) $cmd, '+OK') !== false );\n     }\n \n     function strip_clf ($text = \"\") {\n@@ -611,7 +611,7 @@\n         if(empty($text))\n             return $text;\n         else {\n-            $stripped = str_replace(array(\"\\r\",\"\\n\"),'',$text);\n+            $stripped = str_replace([\"\\r\",\"\\n\"],'',$text);\n             return $stripped;\n         }\n     }\n@@ -619,10 +619,10 @@\n     function parse_banner ( $server_text ) {\n         $outside = true;\n         $banner = \"\";\n-        $length = strlen($server_text);\n+        $length = strlen((string) $server_text);\n         for($count =0; $count < $length; $count++)\n         {\n-            $digit = substr($server_text,$count,1);\n+            $digit = substr((string) $server_text,$count,1);\n             if(!empty($digit))             {\n                 if( (!$outside) && ($digit != '<') && ($digit != '>') )\n                 {\n@@ -647,6 +647,6 @@\n // For php4 compatibility\n if (!function_exists(\"stripos\")) {\n     function stripos($haystack, $needle){\n-        return strpos($haystack, stristr( $haystack, $needle ));\n+        return strpos((string) $haystack, (string) stristr( (string) $haystack, (string) $needle ));\n     }\n }\n",
        "applied_rectors": [
          "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php71\\Rector\\List_\\ListToArrayDestructRector",
          "Rector\\Php73\\Rector\\FuncCall\\StringifyStrNeedlesRector",
          "Rector\\Php74\\Rector\\ArrayDimFetch\\CurlyToSquareBracketArrayStringRector",
          "Rector\\Php80\\Rector\\Identical\\StrStartsWithRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/large_500_1000/021_class-pop3.php"
    ]
  }
}