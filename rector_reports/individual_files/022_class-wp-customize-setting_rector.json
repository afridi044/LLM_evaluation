{
  "file_path": "selected_100_files\\large_500_1000\\022_class-wp-customize-setting.php",
  "rector_analysis": {
    "php_version_changes": 6,
    "rules_triggered": [
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
      "Rector\\Php80\\Rector\\Class_\\ClassPropertyAssignToConstructorPromotionRector",
      "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
      "Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector",
      "Rector\\Php83\\Rector\\ClassMethod\\AddOverrideAttributeToOverriddenMethodsRector"
    ],
    "changes_by_php_version": {
      "php_54": 1,
      "php_70": 1,
      "php_80": 2,
      "php_81": 1,
      "php_83": 1
    },
    "has_diff": true,
    "diff_line_count": 186
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:19:01.720402",
    "file_size_kb": 14.0,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/large_500_1000/022_class-wp-customize-setting.php",
        "diff": "--- Original\n+++ New\n@@ -19,12 +19,6 @@\n \t * @access public\n \t * @var string\n \t */\n-\tpublic $id;\n-\n-\t/**\n-\t * @access public\n-\t * @var string\n-\t */\n \tpublic $type = 'theme_mod';\n \n \t/**\n@@ -52,7 +46,7 @@\n \tpublic $sanitize_callback    = '';\n \tpublic $sanitize_js_callback = '';\n \n-\tprotected $id_data = array();\n+\tprotected $id_data = [];\n \n \t/**\n \t * Cached and sanitized $_POST value for the setting.\n@@ -75,7 +69,10 @@\n \t * @param array                $args    Setting arguments.\n \t * @return WP_Customize_Setting $setting\n \t */\n-\tpublic function __construct( $manager, $id, $args = array() ) {\n+\tpublic function __construct( $manager, /**\n+     * @access public\n+     */\n+    public $id, $args = [] ) {\n \t\t$keys = array_keys( get_object_vars( $this ) );\n \t\tforeach ( $keys as $key ) {\n \t\t\tif ( isset( $args[ $key ] ) )\n@@ -83,7 +80,6 @@\n \t\t}\n \n \t\t$this->manager = $manager;\n-\t\t$this->id = $id;\n \n \t\t// Parse the ID for array keys.\n \t\t$this->id_data[ 'keys' ] = preg_split( '/\\[/', str_replace( ']', '', $this->id ) );\n@@ -111,14 +107,14 @@\n \tpublic function preview() {\n \t\tswitch( $this->type ) {\n \t\t\tcase 'theme_mod' :\n-\t\t\t\tadd_filter( 'theme_mod_' . $this->id_data[ 'base' ], array( $this, '_preview_filter' ) );\n+\t\t\t\tadd_filter( 'theme_mod_' . $this->id_data[ 'base' ], $this->_preview_filter(...) );\n \t\t\t\tbreak;\n \t\t\tcase 'option' :\n \t\t\t\tif ( empty( $this->id_data[ 'keys' ] ) )\n-\t\t\t\t\tadd_filter( 'pre_option_' . $this->id_data[ 'base' ], array( $this, '_preview_filter' ) );\n+\t\t\t\t\tadd_filter( 'pre_option_' . $this->id_data[ 'base' ], $this->_preview_filter(...) );\n \t\t\t\telse {\n-\t\t\t\t\tadd_filter( 'option_' . $this->id_data[ 'base' ], array( $this, '_preview_filter' ) );\n-\t\t\t\t\tadd_filter( 'default_option_' . $this->id_data[ 'base' ], array( $this, '_preview_filter' ) );\n+\t\t\t\t\tadd_filter( 'option_' . $this->id_data[ 'base' ], $this->_preview_filter(...) );\n+\t\t\t\t\tadd_filter( 'default_option_' . $this->id_data[ 'base' ], $this->_preview_filter(...) );\n \t\t\t\t}\n \t\t\t\tbreak;\n \t\t\tdefault :\n@@ -232,28 +228,22 @@\n \t * @return mixed The result of saving the value.\n \t */\n \tprotected function update( $value ) {\n-\t\tswitch( $this->type ) {\n-\t\t\tcase 'theme_mod' :\n-\t\t\t\treturn $this->_update_theme_mod( $value );\n-\n-\t\t\tcase 'option' :\n-\t\t\t\treturn $this->_update_option( $value );\n-\n-\t\t\tdefault :\n-\n-\t\t\t\t/**\n-\t\t\t\t * Fires when the WP_Customize_Setting::update() method is called for settings\n-\t\t\t\t * not handled as theme_mods or options.\n-\t\t\t\t *\n-\t\t\t\t * The dynamic portion of the hook name, $this->type, refers to the type of setting.\n-\t\t\t\t *\n-\t\t\t\t * @since 3.4.0\n-\t\t\t\t *\n-\t\t\t\t * @param mixed                $value Value of the setting.\n-\t\t\t\t * @param WP_Customize_Setting $this  WP_Customize_Setting instance.\n-\t\t\t\t */\n-\t\t\t\treturn do_action( 'customize_update_' . $this->type, $value, $this );\n-\t\t}\n+\t\treturn match ($this->type) {\n+            'theme_mod' => $this->_update_theme_mod( $value ),\n+            'option' => $this->_update_option( $value ),\n+            /**\n+             * Fires when the WP_Customize_Setting::update() method is called for settings\n+             * not handled as theme_mods or options.\n+             *\n+             * The dynamic portion of the hook name, $this->type, refers to the type of setting.\n+             *\n+             * @since 3.4.0\n+             *\n+             * @param mixed                $value Value of the setting.\n+             * @param WP_Customize_Setting $this  WP_Customize_Setting instance.\n+             */\n+            default => do_action( 'customize_update_' . $this->type, $value, $this ),\n+        };\n \t}\n \n \t/**\n@@ -395,7 +385,7 @@\n \t */\n \tfinal protected function multidimensional( &$root, $keys, $create = false ) {\n \t\tif ( $create && empty( $root ) )\n-\t\t\t$root = array();\n+\t\t\t$root = [];\n \n \t\tif ( ! isset( $root ) || empty( $keys ) )\n \t\t\treturn;\n@@ -405,7 +395,7 @@\n \n \t\tforeach ( $keys as $key ) {\n \t\t\tif ( $create && ! isset( $node[ $key ] ) )\n-\t\t\t\t$node[ $key ] = array();\n+\t\t\t\t$node[ $key ] = [];\n \n \t\t\tif ( ! is_array( $node ) || ! isset( $node[ $key ] ) )\n \t\t\t\treturn;\n@@ -414,16 +404,16 @@\n \t\t}\n \n \t\tif ( $create && ! isset( $node[ $last ] ) )\n-\t\t\t$node[ $last ] = array();\n+\t\t\t$node[ $last ] = [];\n \n \t\tif ( ! isset( $node[ $last ] ) )\n \t\t\treturn;\n \n-\t\treturn array(\n+\t\treturn [\n \t\t\t'root' => &$root,\n \t\t\t'node' => &$node,\n \t\t\t'key'  => $last,\n-\t\t);\n+\t\t];\n \t}\n \n \t/**\n@@ -462,7 +452,7 @@\n \t */\n \tfinal protected function multidimensional_get( $root, $keys, $default = null ) {\n \t\tif ( empty( $keys ) ) // If there are no keys, test the root.\n-\t\t\treturn isset( $root ) ? $root : $default;\n+\t\t\treturn $root ?? $default;\n \n \t\t$result = $this->multidimensional( $root, $keys );\n \t\treturn isset( $result ) ? $result['node'][ $result['key'] ] : $default;\n@@ -497,7 +487,8 @@\n \t/**\n \t * @since 3.4.0\n \t */\n-\tpublic function update( $value ) {}\n+\t#[\\Override]\n+    public function update( $value ) {}\n }\n \n /**\n@@ -517,7 +508,8 @@\n \t *\n \t * @param $value\n \t */\n-\tpublic function update( $value ) {\n+\t#[\\Override]\n+    public function update( $value ) {\n \t\tglobal $custom_image_header;\n \n \t\t// If the value doesn't exist (removed or random),\n@@ -548,7 +540,8 @@\n \t *\n \t * @param $value\n \t */\n-\tpublic function update( $value ) {\n+\t#[\\Override]\n+    public function update( $value ) {\n \t\tremove_theme_mod( 'background_image_thumb' );\n \t}\n }\n",
        "applied_rectors": [
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector",
          "Rector\\Php80\\Rector\\Class_\\ClassPropertyAssignToConstructorPromotionRector",
          "Rector\\Php80\\Rector\\Switch_\\ChangeSwitchToMatchRector",
          "Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector",
          "Rector\\Php83\\Rector\\ClassMethod\\AddOverrideAttributeToOverriddenMethodsRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/large_500_1000/022_class-wp-customize-setting.php"
    ]
  }
}