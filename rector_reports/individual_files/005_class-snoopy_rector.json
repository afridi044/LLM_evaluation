{
  "file_path": "selected_100_files\\extra_large_1000_plus\\005_class-snoopy.php",
  "rector_analysis": {
    "php_version_changes": 5,
    "rules_triggered": [
      "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
      "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
      "Rector\\Php71\\Rector\\Assign\\AssignArrayToStringRector",
      "Rector\\Php72\\Rector\\While_\\WhileEachToForeachRector",
      "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
    ],
    "changes_by_php_version": {
      "php_52": 1,
      "php_54": 1,
      "php_71": 1,
      "php_72": 1,
      "php_81": 1
    },
    "has_diff": true,
    "diff_line_count": 571
  },
  "analysis_metadata": {
    "rector_version": "2.1.0",
    "analysis_date": "2025-08-31T05:17:52.033488",
    "file_size_kb": 36.9,
    "analysis_type": "version_specific_only"
  },
  "raw_rector_output": {
    "totals": {
      "changed_files": 1,
      "errors": 0
    },
    "file_diffs": [
      {
        "file": "selected_100_files/extra_large_1000_plus/005_class-snoopy.php",
        "diff": "--- Original\n+++ New\n@@ -41,54 +41,54 @@\n \n \t/* user definable vars */\n \n-\tvar $host\t\t\t=\t\"www.php.net\";\t\t// host name we are connecting to\n-\tvar $port\t\t\t=\t80;\t\t\t\t\t// port we are connecting to\n-\tvar $proxy_host\t\t=\t\"\";\t\t\t\t\t// proxy host to use\n-\tvar $proxy_port\t\t=\t\"\";\t\t\t\t\t// proxy port to use\n-\tvar $proxy_user\t\t=\t\"\";\t\t\t\t\t// proxy user to use\n-\tvar $proxy_pass\t\t=\t\"\";\t\t\t\t\t// proxy password to use\n+\tpublic $host\t\t\t=\t\"www.php.net\";\t\t// host name we are connecting to\n+\tpublic $port\t\t\t=\t80;\t\t\t\t\t// port we are connecting to\n+\tpublic $proxy_host\t\t=\t\"\";\t\t\t\t\t// proxy host to use\n+\tpublic $proxy_port\t\t=\t\"\";\t\t\t\t\t// proxy port to use\n+\tpublic $proxy_user\t\t=\t\"\";\t\t\t\t\t// proxy user to use\n+\tpublic $proxy_pass\t\t=\t\"\";\t\t\t\t\t// proxy password to use\n \n-\tvar $agent\t\t\t=\t\"Snoopy v1.2.4\";\t// agent we masquerade as\n-\tvar\t$referer\t\t=\t\"\";\t\t\t\t\t// referer info to pass\n-\tvar $cookies\t\t=\tarray();\t\t\t// array of cookies to pass\n+\tpublic $agent\t\t\t=\t\"Snoopy v1.2.4\";\t// agent we masquerade as\n+\tpublic $referer\t\t=\t\"\";\t\t\t\t\t// referer info to pass\n+\tpublic $cookies\t\t=\t[];\t\t\t// array of cookies to pass\n \t\t\t\t\t\t\t\t\t\t\t\t// $cookies[\"username\"]=\"joe\";\n-\tvar\t$rawheaders\t\t=\tarray();\t\t\t// array of raw headers to send\n+\tpublic $rawheaders\t\t=\t[];\t\t\t// array of raw headers to send\n \t\t\t\t\t\t\t\t\t\t\t\t// $rawheaders[\"Content-type\"]=\"text/html\";\n \n-\tvar $maxredirs\t\t=\t5;\t\t\t\t\t// http redirection depth maximum. 0 = disallow\n-\tvar $lastredirectaddr\t=\t\"\";\t\t\t\t// contains address of last redirected address\n-\tvar\t$offsiteok\t\t=\ttrue;\t\t\t\t// allows redirection off-site\n-\tvar $maxframes\t\t=\t0;\t\t\t\t\t// frame content depth maximum. 0 = disallow\n-\tvar $expandlinks\t=\ttrue;\t\t\t\t// expand links to fully qualified URLs.\n+\tpublic $maxredirs\t\t=\t5;\t\t\t\t\t// http redirection depth maximum. 0 = disallow\n+\tpublic $lastredirectaddr\t=\t\"\";\t\t\t\t// contains address of last redirected address\n+\tpublic $offsiteok\t\t=\ttrue;\t\t\t\t// allows redirection off-site\n+\tpublic $maxframes\t\t=\t0;\t\t\t\t\t// frame content depth maximum. 0 = disallow\n+\tpublic $expandlinks\t=\ttrue;\t\t\t\t// expand links to fully qualified URLs.\n \t\t\t\t\t\t\t\t\t\t\t\t// this only applies to fetchlinks()\n \t\t\t\t\t\t\t\t\t\t\t\t// submitlinks(), and submittext()\n-\tvar $passcookies\t=\ttrue;\t\t\t\t// pass set cookies back through redirects\n+\tpublic $passcookies\t=\ttrue;\t\t\t\t// pass set cookies back through redirects\n \t\t\t\t\t\t\t\t\t\t\t\t// NOTE: this currently does not respect\n \t\t\t\t\t\t\t\t\t\t\t\t// dates, domains or paths.\n \n-\tvar\t$user\t\t\t=\t\"\";\t\t\t\t\t// user for http authentication\n-\tvar\t$pass\t\t\t=\t\"\";\t\t\t\t\t// password for http authentication\n+\tpublic $user\t\t\t=\t\"\";\t\t\t\t\t// user for http authentication\n+\tpublic $pass\t\t\t=\t\"\";\t\t\t\t\t// password for http authentication\n \n \t// http accept types\n-\tvar $accept\t\t\t=\t\"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*\";\n+\tpublic $accept\t\t\t=\t\"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*\";\n \n-\tvar $results\t\t=\t\"\";\t\t\t\t\t// where the content is put\n+\tpublic $results\t\t=\t[];\t\t\t\t\t// where the content is put\n \n-\tvar $error\t\t\t=\t\"\";\t\t\t\t\t// error messages sent here\n-\tvar\t$response_code\t=\t\"\";\t\t\t\t\t// response code returned from server\n-\tvar\t$headers\t\t=\tarray();\t\t\t// headers returned from server sent here\n-\tvar\t$maxlength\t\t=\t500000;\t\t\t\t// max return data length (body)\n-\tvar $read_timeout\t=\t0;\t\t\t\t\t// timeout on read operations, in seconds\n+\tpublic $error\t\t\t=\t\"\";\t\t\t\t\t// error messages sent here\n+\tpublic $response_code\t=\t\"\";\t\t\t\t\t// response code returned from server\n+\tpublic $headers\t\t=\t[];\t\t\t// headers returned from server sent here\n+\tpublic $maxlength\t\t=\t500000;\t\t\t\t// max return data length (body)\n+\tpublic $read_timeout\t=\t0;\t\t\t\t\t// timeout on read operations, in seconds\n \t\t\t\t\t\t\t\t\t\t\t\t// supported only since PHP 4 Beta 4\n \t\t\t\t\t\t\t\t\t\t\t\t// set to 0 to disallow timeouts\n-\tvar $timed_out\t\t=\tfalse;\t\t\t\t// if a read operation timed out\n-\tvar\t$status\t\t\t=\t0;\t\t\t\t\t// http request status\n+\tpublic $timed_out\t\t=\tfalse;\t\t\t\t// if a read operation timed out\n+\tpublic $status\t\t\t=\t0;\t\t\t\t\t// http request status\n \n-\tvar $temp_dir\t\t=\t\"/tmp\";\t\t\t\t// temporary directory that the webserver\n+\tpublic $temp_dir\t\t=\t\"/tmp\";\t\t\t\t// temporary directory that the webserver\n \t\t\t\t\t\t\t\t\t\t\t\t// has permission to write to.\n \t\t\t\t\t\t\t\t\t\t\t\t// under Windows, this should be C:\\temp\n \n-\tvar\t$curl_path\t\t=\t\"/usr/local/bin/curl\";\n+\tpublic $curl_path\t\t=\t\"/usr/local/bin/curl\";\n \t\t\t\t\t\t\t\t\t\t\t\t// Snoopy will use cURL for fetching\n \t\t\t\t\t\t\t\t\t\t\t\t// SSL content if a full system path to\n \t\t\t\t\t\t\t\t\t\t\t\t// the cURL binary is supplied here.\n@@ -102,20 +102,20 @@\n \n \t/**** Private variables ****/\n \n-\tvar\t$_maxlinelen\t=\t4096;\t\t\t\t// max line length (headers)\n+\tpublic $_maxlinelen\t=\t4096;\t\t\t\t// max line length (headers)\n \n-\tvar $_httpmethod\t=\t\"GET\";\t\t\t\t// default http request method\n-\tvar $_httpversion\t=\t\"HTTP/1.0\";\t\t\t// default http request version\n-\tvar $_submit_method\t=\t\"POST\";\t\t\t\t// default submit method\n-\tvar $_submit_type\t=\t\"application/x-www-form-urlencoded\";\t// default submit type\n-\tvar $_mime_boundary\t=   \"\";\t\t\t\t\t// MIME boundary for multipart/form-data submit type\n-\tvar $_redirectaddr\t=\tfalse;\t\t\t\t// will be set if page fetched is a redirect\n-\tvar $_redirectdepth\t=\t0;\t\t\t\t\t// increments on an http redirect\n-\tvar $_frameurls\t\t= \tarray();\t\t\t// frame src urls\n-\tvar $_framedepth\t=\t0;\t\t\t\t\t// increments on frame depth\n+\tpublic $_httpmethod\t=\t\"GET\";\t\t\t\t// default http request method\n+\tpublic $_httpversion\t=\t\"HTTP/1.0\";\t\t\t// default http request version\n+\tpublic $_submit_method\t=\t\"POST\";\t\t\t\t// default submit method\n+\tpublic $_submit_type\t=\t\"application/x-www-form-urlencoded\";\t// default submit type\n+\tpublic $_mime_boundary\t=   \"\";\t\t\t\t\t// MIME boundary for multipart/form-data submit type\n+\tpublic $_redirectaddr\t=\tfalse;\t\t\t\t// will be set if page fetched is a redirect\n+\tpublic $_redirectdepth\t=\t0;\t\t\t\t\t// increments on an http redirect\n+\tpublic $_frameurls\t\t= \t[];\t\t\t// frame src urls\n+\tpublic $_framedepth\t=\t0;\t\t\t\t\t// increments on frame depth\n \n-\tvar $_isproxy\t\t=\tfalse;\t\t\t\t// set if using a proxy server\n-\tvar $_fp_timeout\t=\t30;\t\t\t\t\t// timeout for socket connection\n+\tpublic $_isproxy\t\t=\tfalse;\t\t\t\t// set if using a proxy server\n+\tpublic $_fp_timeout\t=\t30;\t\t\t\t\t// timeout for socket connection\n \n /*======================================================================*\\\n \tFunction:\tfetch\n@@ -130,7 +130,7 @@\n \t{\n \n \t\t//preg_match(\"|^([^:]+)://([^:/]+)(:[\\d]+)*(.*)|\",$URI,$URI_PARTS);\n-\t\t$URI_PARTS = parse_url($URI);\n+\t\t$URI_PARTS = parse_url((string) $URI);\n \t\tif (!empty($URI_PARTS[\"user\"]))\n \t\t\t$this->user = $URI_PARTS[\"user\"];\n \t\tif (!empty($URI_PARTS[\"pass\"]))\n@@ -168,7 +168,7 @@\n \t\t\t\t\t\tif($this->maxredirs > $this->_redirectdepth)\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\t// only follow redirect if it's on this site, or offsiteok is true\n-\t\t\t\t\t\t\tif(preg_match(\"|^http://\".preg_quote($this->host).\"|i\",$this->_redirectaddr) || $this->offsiteok)\n+\t\t\t\t\t\t\tif(preg_match(\"|^http://\".preg_quote($this->host).\"|i\",(string) $this->_redirectaddr) || $this->offsiteok)\n \t\t\t\t\t\t\t{\n \t\t\t\t\t\t\t\t/* follow the redirect */\n \t\t\t\t\t\t\t\t$this->_redirectdepth++;\n@@ -181,11 +181,10 @@\n \t\t\t\t\tif($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)\n \t\t\t\t\t{\n \t\t\t\t\t\t$frameurls = $this->_frameurls;\n-\t\t\t\t\t\t$this->_frameurls = array();\n+\t\t\t\t\t\t$this->_frameurls = [];\n \n-\t\t\t\t\t\twhile(list(,$frameurl) = each($frameurls))\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tif($this->_framedepth < $this->maxframes)\n+\t\t\t\t\t\tforeach ($frameurls as $frameurl) {\n+                            if($this->_framedepth < $this->maxframes)\n \t\t\t\t\t\t\t{\n \t\t\t\t\t\t\t\t$this->fetch($frameurl);\n \t\t\t\t\t\t\t\t$this->_framedepth++;\n@@ -192,7 +191,7 @@\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\telse\n \t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t}\n+                        }\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\telse\n@@ -228,7 +227,7 @@\n \t\t\t\t\tif($this->maxredirs > $this->_redirectdepth)\n \t\t\t\t\t{\n \t\t\t\t\t\t// only follow redirect if it's on this site, or offsiteok is true\n-\t\t\t\t\t\tif(preg_match(\"|^http://\".preg_quote($this->host).\"|i\",$this->_redirectaddr) || $this->offsiteok)\n+\t\t\t\t\t\tif(preg_match(\"|^http://\".preg_quote($this->host).\"|i\",(string) $this->_redirectaddr) || $this->offsiteok)\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\t/* follow the redirect */\n \t\t\t\t\t\t\t$this->_redirectdepth++;\n@@ -241,11 +240,10 @@\n \t\t\t\tif($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)\n \t\t\t\t{\n \t\t\t\t\t$frameurls = $this->_frameurls;\n-\t\t\t\t\t$this->_frameurls = array();\n+\t\t\t\t\t$this->_frameurls = [];\n \n-\t\t\t\t\twhile(list(,$frameurl) = each($frameurls))\n-\t\t\t\t\t{\n-\t\t\t\t\t\tif($this->_framedepth < $this->maxframes)\n+\t\t\t\t\tforeach ($frameurls as $frameurl) {\n+                        if($this->_framedepth < $this->maxframes)\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\t$this->fetch($frameurl);\n \t\t\t\t\t\t\t$this->_framedepth++;\n@@ -252,7 +250,7 @@\n \t\t\t\t\t\t}\n \t\t\t\t\t\telse\n \t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t}\n+                    }\n \t\t\t\t}\n \t\t\t\treturn true;\n \t\t\t\tbreak;\n@@ -282,7 +280,7 @@\n \n \t\t$postdata = $this->_prepare_post_body($formvars, $formfiles);\n \n-\t\t$URI_PARTS = parse_url($URI);\n+\t\t$URI_PARTS = parse_url((string) $URI);\n \t\tif (!empty($URI_PARTS[\"user\"]))\n \t\t\t$this->user = $URI_PARTS[\"user\"];\n \t\tif (!empty($URI_PARTS[\"pass\"]))\n@@ -319,16 +317,16 @@\n \t\t\t\t\t\t/* url was redirected, check if we've hit the max depth */\n \t\t\t\t\t\tif($this->maxredirs > $this->_redirectdepth)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\tif(!preg_match(\"|^\".$URI_PARTS[\"scheme\"].\"://|\", $this->_redirectaddr))\n+\t\t\t\t\t\t\tif(!preg_match(\"|^\".$URI_PARTS[\"scheme\"].\"://|\", (string) $this->_redirectaddr))\n \t\t\t\t\t\t\t\t$this->_redirectaddr = $this->_expandlinks($this->_redirectaddr,$URI_PARTS[\"scheme\"].\"://\".$URI_PARTS[\"host\"]);\n \n \t\t\t\t\t\t\t// only follow redirect if it's on this site, or offsiteok is true\n-\t\t\t\t\t\t\tif(preg_match(\"|^http://\".preg_quote($this->host).\"|i\",$this->_redirectaddr) || $this->offsiteok)\n+\t\t\t\t\t\t\tif(preg_match(\"|^http://\".preg_quote($this->host).\"|i\",(string) $this->_redirectaddr) || $this->offsiteok)\n \t\t\t\t\t\t\t{\n \t\t\t\t\t\t\t\t/* follow the redirect */\n \t\t\t\t\t\t\t\t$this->_redirectdepth++;\n \t\t\t\t\t\t\t\t$this->lastredirectaddr=$this->_redirectaddr;\n-\t\t\t\t\t\t\t\tif( strpos( $this->_redirectaddr, \"?\" ) > 0 )\n+\t\t\t\t\t\t\t\tif( strpos( (string) $this->_redirectaddr, \"?\" ) > 0 )\n \t\t\t\t\t\t\t\t\t$this->fetch($this->_redirectaddr); // the redirect has changed the request method from post to get\n \t\t\t\t\t\t\t\telse\n \t\t\t\t\t\t\t\t\t$this->submit($this->_redirectaddr,$formvars, $formfiles);\n@@ -339,11 +337,10 @@\n \t\t\t\t\tif($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)\n \t\t\t\t\t{\n \t\t\t\t\t\t$frameurls = $this->_frameurls;\n-\t\t\t\t\t\t$this->_frameurls = array();\n+\t\t\t\t\t\t$this->_frameurls = [];\n \n-\t\t\t\t\t\twhile(list(,$frameurl) = each($frameurls))\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tif($this->_framedepth < $this->maxframes)\n+\t\t\t\t\t\tforeach ($frameurls as $frameurl) {\n+                            if($this->_framedepth < $this->maxframes)\n \t\t\t\t\t\t\t{\n \t\t\t\t\t\t\t\t$this->fetch($frameurl);\n \t\t\t\t\t\t\t\t$this->_framedepth++;\n@@ -350,7 +347,7 @@\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\telse\n \t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t}\n+                        }\n \t\t\t\t\t}\n \n \t\t\t\t}\n@@ -386,16 +383,16 @@\n \t\t\t\t\t/* url was redirected, check if we've hit the max depth */\n \t\t\t\t\tif($this->maxredirs > $this->_redirectdepth)\n \t\t\t\t\t{\n-\t\t\t\t\t\tif(!preg_match(\"|^\".$URI_PARTS[\"scheme\"].\"://|\", $this->_redirectaddr))\n+\t\t\t\t\t\tif(!preg_match(\"|^\".$URI_PARTS[\"scheme\"].\"://|\", (string) $this->_redirectaddr))\n \t\t\t\t\t\t\t$this->_redirectaddr = $this->_expandlinks($this->_redirectaddr,$URI_PARTS[\"scheme\"].\"://\".$URI_PARTS[\"host\"]);\n \n \t\t\t\t\t\t// only follow redirect if it's on this site, or offsiteok is true\n-\t\t\t\t\t\tif(preg_match(\"|^http://\".preg_quote($this->host).\"|i\",$this->_redirectaddr) || $this->offsiteok)\n+\t\t\t\t\t\tif(preg_match(\"|^http://\".preg_quote($this->host).\"|i\",(string) $this->_redirectaddr) || $this->offsiteok)\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\t/* follow the redirect */\n \t\t\t\t\t\t\t$this->_redirectdepth++;\n \t\t\t\t\t\t\t$this->lastredirectaddr=$this->_redirectaddr;\n-\t\t\t\t\t\t\tif( strpos( $this->_redirectaddr, \"?\" ) > 0 )\n+\t\t\t\t\t\t\tif( strpos( (string) $this->_redirectaddr, \"?\" ) > 0 )\n \t\t\t\t\t\t\t\t$this->fetch($this->_redirectaddr); // the redirect has changed the request method from post to get\n \t\t\t\t\t\t\telse\n \t\t\t\t\t\t\t\t$this->submit($this->_redirectaddr,$formvars, $formfiles);\n@@ -406,11 +403,10 @@\n \t\t\t\tif($this->_framedepth < $this->maxframes && count($this->_frameurls) > 0)\n \t\t\t\t{\n \t\t\t\t\t$frameurls = $this->_frameurls;\n-\t\t\t\t\t$this->_frameurls = array();\n+\t\t\t\t\t$this->_frameurls = [];\n \n-\t\t\t\t\twhile(list(,$frameurl) = each($frameurls))\n-\t\t\t\t\t{\n-\t\t\t\t\t\tif($this->_framedepth < $this->maxframes)\n+\t\t\t\t\tforeach ($frameurls as $frameurl) {\n+                        if($this->_framedepth < $this->maxframes)\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\t$this->fetch($frameurl);\n \t\t\t\t\t\t\t$this->_framedepth++;\n@@ -417,7 +413,7 @@\n \t\t\t\t\t\t}\n \t\t\t\t\t\telse\n \t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t}\n+                    }\n \t\t\t\t}\n \t\t\t\treturn true;\n \t\t\t\tbreak;\n@@ -624,22 +620,20 @@\n \t\t\t\t\t\t([\\\"\\'])?\t\t\t\t\t# find single or double quote\n \t\t\t\t\t\t(?(1) (.*?)\\\\1 | ([^\\s\\>]+))\t\t# if quote found, match up to next matching\n \t\t\t\t\t\t\t\t\t\t\t\t\t# quote, otherwise match up to next space\n-\t\t\t\t\t\t'isx\",$document,$links);\n+\t\t\t\t\t\t'isx\",(string) $document,$links);\n \n \n \t\t// catenate the non-empty matches from the conditional subpattern\n \n-\t\twhile(list($key,$val) = each($links[2]))\n-\t\t{\n-\t\t\tif(!empty($val))\n+\t\tforeach ($links[2] as $key => $val) {\n+            if(!empty($val))\n \t\t\t\t$match[] = $val;\n-\t\t}\n+        }\n \n-\t\twhile(list($key,$val) = each($links[3]))\n-\t\t{\n-\t\t\tif(!empty($val))\n+\t\tforeach ($links[3] as $key => $val) {\n+            if(!empty($val))\n \t\t\t\t$match[] = $val;\n-\t\t}\n+        }\n \n \t\t// return the links\n \t\treturn $match;\n@@ -654,7 +648,7 @@\n \n \tfunction _stripform($document)\n \t{\n-\t\tpreg_match_all(\"'<\\/?(FORM|INPUT|SELECT|TEXTAREA|(OPTION))[^<>]*>(?(2)(.*(?=<\\/?(option|select)[^<>]*>[\\r\\n]*)|(?=[\\r\\n]*))|(?=[\\r\\n]*))'Usi\",$document,$elements);\n+\t\tpreg_match_all(\"'<\\/?(FORM|INPUT|SELECT|TEXTAREA|(OPTION))[^<>]*>(?(2)(.*(?=<\\/?(option|select)[^<>]*>[\\r\\n]*)|(?=[\\r\\n]*))|(?=[\\r\\n]*))'Usi\",(string) $document,$elements);\n \n \t\t// catenate the matches\n \t\t$match = implode(\"\\r\\n\",$elements[0]);\n@@ -679,7 +673,7 @@\n \t\t// so, list your entities one by one here. I included some of the\n \t\t// more common ones.\n \n-\t\t$search = array(\"'<script[^>]*?>.*?</script>'si\",\t// strip out javascript\n+\t\t$search = [\"'<script[^>]*?>.*?</script>'si\",\t// strip out javascript\n \t\t\t\t\t\t\"'<[\\/\\!]*?[^<>]*?>'si\",\t\t\t// strip out html tags\n \t\t\t\t\t\t\"'([\\r\\n])[\\s]+'\",\t\t\t\t\t// strip out white space\n \t\t\t\t\t\t\"'&(quot|#34|#034|#x22);'i\",\t\t// replace html entities\n@@ -702,8 +696,8 @@\n \t\t\t\t\t\t\"'&O(uml|UML);'\",\n \t\t\t\t\t\t\"'&U(uml|UML);'\",\n \t\t\t\t\t\t\"'&szlig;'i\",\n-\t\t\t\t\t\t);\n-\t\t$replace = array(\t\"\",\n+\t\t\t\t\t\t];\n+\t\t$replace = [\t\"\",\n \t\t\t\t\t\t\t\"\",\n \t\t\t\t\t\t\t\"\\\\1\",\n \t\t\t\t\t\t\t\"\\\"\",\n@@ -726,9 +720,9 @@\n \t\t\t\t\t\t\tchr(0xD6), // ANSI &Ouml;\n \t\t\t\t\t\t\tchr(0xDC), // ANSI &Uuml;\n \t\t\t\t\t\t\tchr(0xDF), // ANSI &szlig;\n-\t\t\t\t\t\t);\n+\t\t\t\t\t\t];\n \n-\t\t$text = preg_replace($search,$replace,$document);\n+\t\t$text = preg_replace($search,$replace,(string) $document);\n \n \t\treturn $text;\n \t}\n@@ -744,29 +738,29 @@\n \tfunction _expandlinks($links,$URI)\n \t{\n \n-\t\tpreg_match(\"/^[^\\?]+/\",$URI,$match);\n+\t\tpreg_match(\"/^[^\\?]+/\",(string) $URI,$match);\n \n \t\t$match = preg_replace(\"|/[^\\/\\.]+\\.[^\\/\\.]+$|\",\"\",$match[0]);\n-\t\t$match = preg_replace(\"|/$|\",\"\",$match);\n-\t\t$match_part = parse_url($match);\n+\t\t$match = preg_replace(\"|/$|\",\"\",(string) $match);\n+\t\t$match_part = parse_url((string) $match);\n \t\t$match_root =\n \t\t$match_part[\"scheme\"].\"://\".$match_part[\"host\"];\n \n-\t\t$search = array( \t\"|^http://\".preg_quote($this->host).\"|i\",\n+\t\t$search = [ \t\"|^http://\".preg_quote((string) $this->host).\"|i\",\n \t\t\t\t\t\t\t\"|^(\\/)|i\",\n \t\t\t\t\t\t\t\"|^(?!http://)(?!mailto:)|i\",\n \t\t\t\t\t\t\t\"|/\\./|\",\n \t\t\t\t\t\t\t\"|/[^\\/]+/\\.\\./|\"\n-\t\t\t\t\t\t);\n+\t\t\t\t\t\t];\n \n-\t\t$replace = array(\t\"\",\n+\t\t$replace = [\t\"\",\n \t\t\t\t\t\t\t$match_root.\"/\",\n \t\t\t\t\t\t\t$match.\"/\",\n \t\t\t\t\t\t\t\"/\",\n \t\t\t\t\t\t\t\"/\"\n-\t\t\t\t\t\t);\n+\t\t\t\t\t\t];\n \n-\t\t$expandedLinks = preg_replace($search,$replace,$links);\n+\t\t$expandedLinks = preg_replace($search,$replace,(string) $links);\n \n \t\treturn $expandedLinks;\n \t}\n@@ -787,7 +781,7 @@\n \t\tif($this->passcookies && $this->_redirectaddr)\n \t\t\t$this->setcookies();\n \n-\t\t$URI_PARTS = parse_url($URI);\n+\t\t$URI_PARTS = parse_url((string) $URI);\n \t\tif(empty($url))\n \t\t\t$url = \"/\";\n \t\t$headers = $http_method.\" \".$url.\" \".$this->_httpversion.\"\\r\\n\";\n@@ -812,7 +806,7 @@\n \t\t\tif ( count($this->cookies) > 0 ) {\n \t\t\t\t$cookie_headers .= 'Cookie: ';\n \t\t\t\tforeach ( $this->cookies as $cookieKey => $cookieVal ) {\n-\t\t\t\t$cookie_headers .= $cookieKey.\"=\".urlencode($cookieVal).\"; \";\n+\t\t\t\t$cookie_headers .= $cookieKey.\"=\".urlencode((string) $cookieVal).\"; \";\n \t\t\t\t}\n \t\t\t\t$headers .= substr($cookie_headers,0,-2) . \"\\r\\n\";\n \t\t\t}\n@@ -821,8 +815,9 @@\n \t\t{\n \t\t\tif(!is_array($this->rawheaders))\n \t\t\t\t$this->rawheaders = (array)$this->rawheaders;\n-\t\t\twhile(list($headerKey,$headerVal) = each($this->rawheaders))\n-\t\t\t\t$headers .= $headerKey.\": \".$headerVal.\"\\r\\n\";\n+\t\t\tforeach ($this->rawheaders as $headerKey => $headerVal) {\n+                $headers .= $headerKey.\": \".$headerVal.\"\\r\\n\";\n+            }\n \t\t}\n \t\tif(!empty($content_type)) {\n \t\t\t$headers .= \"Content-type: $content_type\";\n@@ -831,7 +826,7 @@\n \t\t\t$headers .= \"\\r\\n\";\n \t\t}\n \t\tif(!empty($body))\n-\t\t\t$headers .= \"Content-length: \".strlen($body).\"\\r\\n\";\n+\t\t\t$headers .= \"Content-length: \".strlen((string) $body).\"\\r\\n\";\n \t\tif(!empty($this->user) || !empty($this->pass))\n \t\t\t$headers .= \"Authorization: Basic \".base64_encode($this->user.\":\".$this->pass).\"\\r\\n\";\n \n@@ -949,9 +944,9 @@\n \t\tif($this->passcookies && $this->_redirectaddr)\n \t\t\t$this->setcookies();\n \n-\t\t$headers = array();\n+\t\t$headers = [];\n \n-\t\t$URI_PARTS = parse_url($URI);\n+\t\t$URI_PARTS = parse_url((string) $URI);\n \t\tif(empty($url))\n \t\t\t$url = \"/\";\n \t\t// GET ... header not needed for curl\n@@ -976,7 +971,7 @@\n \t\t\tif ( count($this->cookies) > 0 ) {\n \t\t\t\t$cookie_str = 'Cookie: ';\n \t\t\t\tforeach ( $this->cookies as $cookieKey => $cookieVal ) {\n-\t\t\t\t$cookie_str .= $cookieKey.\"=\".urlencode($cookieVal).\"; \";\n+\t\t\t\t$cookie_str .= $cookieKey.\"=\".urlencode((string) $cookieVal).\"; \";\n \t\t\t\t}\n \t\t\t\t$headers[] = substr($cookie_str,0,-2);\n \t\t\t}\n@@ -985,8 +980,9 @@\n \t\t{\n \t\t\tif(!is_array($this->rawheaders))\n \t\t\t\t$this->rawheaders = (array)$this->rawheaders;\n-\t\t\twhile(list($headerKey,$headerVal) = each($this->rawheaders))\n-\t\t\t\t$headers[] = $headerKey.\": \".$headerVal;\n+\t\t\tforeach ($this->rawheaders as $headerKey => $headerVal) {\n+                $headers[] = $headerKey.\": \".$headerVal;\n+            }\n \t\t}\n \t\tif(!empty($content_type)) {\n \t\t\tif ($content_type == \"multipart/form-data\")\n@@ -995,7 +991,7 @@\n \t\t\t\t$headers[] = \"Content-type: $content_type\";\n \t\t}\n \t\tif(!empty($body))\n-\t\t\t$headers[] = \"Content-length: \".strlen($body);\n+\t\t\t$headers[] = \"Content-length: \".strlen((string) $body);\n \t\tif(!empty($this->user) || !empty($this->pass))\n \t\t\t$headers[] = \"Authorization: BASIC \".base64_encode($this->user.\":\".$this->pass);\n \n@@ -1092,7 +1088,7 @@\n \t{\n \t\tfor($x=0; $x<count($this->headers); $x++)\n \t\t{\n-\t\tif(preg_match('/^set-cookie:[\\s]+([^=]+)=([^;]+)/i', $this->headers[$x],$match))\n+\t\tif(preg_match('/^set-cookie:[\\s]+([^=]+)=([^;]+)/i', (string) $this->headers[$x],$match))\n \t\t\t$this->cookies[$match[1]] = urldecode($match[2]);\n \t\t}\n \t}\n@@ -1201,14 +1197,14 @@\n \t\tswitch ($this->_submit_type) {\n \t\t\tcase \"application/x-www-form-urlencoded\":\n \t\t\t\treset($formvars);\n-\t\t\t\twhile(list($key,$val) = each($formvars)) {\n-\t\t\t\t\tif (is_array($val) || is_object($val)) {\n-\t\t\t\t\t\twhile (list($cur_key, $cur_val) = each($val)) {\n-\t\t\t\t\t\t\t$postdata .= urlencode($key).\"[]=\".urlencode($cur_val).\"&\";\n-\t\t\t\t\t\t}\n+\t\t\t\tforeach ($formvars as $key => $val) {\n+                    if (is_array($val) || is_object($val)) {\n+\t\t\t\t\t\tforeach ($val as $cur_key => $cur_val) {\n+                            $postdata .= urlencode($key).\"[]=\".urlencode((string) $cur_val).\"&\";\n+                        }\n \t\t\t\t\t} else\n-\t\t\t\t\t\t$postdata .= urlencode($key).\"=\".urlencode($val).\"&\";\n-\t\t\t\t}\n+\t\t\t\t\t\t$postdata .= urlencode($key).\"=\".urlencode((string) $val).\"&\";\n+                }\n \t\t\t\tbreak;\n \n \t\t\tcase \"multipart/form-data\":\n@@ -1215,36 +1211,34 @@\n \t\t\t\t$this->_mime_boundary = \"Snoopy\".md5(uniqid(microtime()));\n \n \t\t\t\treset($formvars);\n-\t\t\t\twhile(list($key,$val) = each($formvars)) {\n-\t\t\t\t\tif (is_array($val) || is_object($val)) {\n-\t\t\t\t\t\twhile (list($cur_key, $cur_val) = each($val)) {\n-\t\t\t\t\t\t\t$postdata .= \"--\".$this->_mime_boundary.\"\\r\\n\";\n-\t\t\t\t\t\t\t$postdata .= \"Content-Disposition: form-data; name=\\\"$key\\[\\]\\\"\\r\\n\\r\\n\";\n-\t\t\t\t\t\t\t$postdata .= \"$cur_val\\r\\n\";\n-\t\t\t\t\t\t}\n+\t\t\t\tforeach ($formvars as $key => $val) {\n+                    if (is_array($val) || is_object($val)) {\n+\t\t\t\t\t\tforeach ($val as $cur_key => $cur_val) {\n+                            $postdata .= \"--\".$this->_mime_boundary.\"\\r\\n\";\n+                            $postdata .= \"Content-Disposition: form-data; name=\\\"$key\\[\\]\\\"\\r\\n\\r\\n\";\n+                            $postdata .= \"$cur_val\\r\\n\";\n+                        }\n \t\t\t\t\t} else {\n \t\t\t\t\t\t$postdata .= \"--\".$this->_mime_boundary.\"\\r\\n\";\n \t\t\t\t\t\t$postdata .= \"Content-Disposition: form-data; name=\\\"$key\\\"\\r\\n\\r\\n\";\n \t\t\t\t\t\t$postdata .= \"$val\\r\\n\";\n \t\t\t\t\t}\n-\t\t\t\t}\n+                }\n \n \t\t\t\treset($formfiles);\n-\t\t\t\twhile (list($field_name, $file_names) = each($formfiles)) {\n-\t\t\t\t\tsettype($file_names, \"array\");\n-\t\t\t\t\twhile (list(, $file_name) = each($file_names)) {\n-\t\t\t\t\t\tif (!is_readable($file_name)) continue;\n-\n-\t\t\t\t\t\t$fp = fopen($file_name, \"r\");\n-\t\t\t\t\t\t$file_content = fread($fp, filesize($file_name));\n-\t\t\t\t\t\tfclose($fp);\n-\t\t\t\t\t\t$base_name = basename($file_name);\n-\n-\t\t\t\t\t\t$postdata .= \"--\".$this->_mime_boundary.\"\\r\\n\";\n-\t\t\t\t\t\t$postdata .= \"Content-Disposition: form-data; name=\\\"$field_name\\\"; filename=\\\"$base_name\\\"\\r\\n\\r\\n\";\n-\t\t\t\t\t\t$postdata .= \"$file_content\\r\\n\";\n-\t\t\t\t\t}\n-\t\t\t\t}\n+\t\t\t\tforeach ($formfiles as $field_name => $file_names) {\n+                    settype($file_names, \"array\");\n+                    foreach ($file_names as $file_name) {\n+                        if (!is_readable($file_name)) continue;\n+                        $fp = fopen($file_name, \"r\");\n+                        $file_content = fread($fp, filesize($file_name));\n+                        fclose($fp);\n+                        $base_name = basename((string) $file_name);\n+                        $postdata .= \"--\".$this->_mime_boundary.\"\\r\\n\";\n+                        $postdata .= \"Content-Disposition: form-data; name=\\\"$field_name\\\"; filename=\\\"$base_name\\\"\\r\\n\\r\\n\";\n+                        $postdata .= \"$file_content\\r\\n\";\n+                    }\n+                }\n \t\t\t\t$postdata .= \"--\".$this->_mime_boundary.\"--\\r\\n\";\n \t\t\t\tbreak;\n \t\t}\n",
        "applied_rectors": [
          "Rector\\Php52\\Rector\\Property\\VarToPublicPropertyRector",
          "Rector\\Php54\\Rector\\Array_\\LongArrayToShortArrayRector",
          "Rector\\Php71\\Rector\\Assign\\AssignArrayToStringRector",
          "Rector\\Php72\\Rector\\While_\\WhileEachToForeachRector",
          "Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector"
        ]
      }
    ],
    "changed_files": [
      "selected_100_files/extra_large_1000_plus/005_class-snoopy.php"
    ]
  }
}